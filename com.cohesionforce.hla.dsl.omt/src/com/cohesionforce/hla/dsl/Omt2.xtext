grammar com.cohesionforce.hla.dsl.Omt  hidden(WS, ML_COMMENT, SL_COMMENT, COMMENT)

generate omt "http://www.cohesionforce.com/hla/dsl/Omt"

import "http://www.eclipse.org/emf/2002/Ecore" as ecore

HLAOMT_DIF_v1_3:
	OPEN 'DIF'
		name=AnyText version=AnyText 
		OPEN 'TYPE' type=AnyText CLOSE 
	CLOSE
	objectModels+=ObjectModel+
;

ObjectModel:
	OPEN 'ObjectModel' 
		(OPEN 'Name' name=AnyString CLOSE)
		(OPEN 'VersionNumber' version=AnyString CLOSE)
		(OPEN 'Type' type=MOD_Type CLOSE)?
		(OPEN 'Purpose' purpose=AnyString CLOSE)?
		(OPEN 'ApplicationDomain' domain=AnyString CLOSE)?
		(OPEN 'SponsorOrgName' sponsor=AnyString CLOSE)?
		(OPEN 'POCHonorificName' pocHonorific=AnyString CLOSE)?
		(OPEN 'POCFirstName' pocFirstName=AnyString CLOSE)?
		(OPEN 'POCLastName' pocLastName=AnyString CLOSE)?
		(OPEN 'POCOrgName' pocOrgName=AnyString CLOSE)?
		(OPEN 'POCPhone' pocPhone=AnyString CLOSE)?
		(OPEN 'POCEmail' pocEmail=AnyString CLOSE)?
		(OPEN 'ModificationDate' modificationDate=TEXT CLOSE)?
		(OPEN 'MOMVersion' momVersion=AnyString CLOSE)?
		timeRepresentation=TimeRepresentation?
		lookAhead=Lookahead?
		omtComponents+=OMTComponent*
	CLOSE
;

TimeRepresentation:
	OPEN 'TimeRepresentation'
		OPEN 'Units' units=AnyString unitsNote=NoteRef? CLOSE
		OPEN 'Minimum' min=AnyString minNote=NoteRef? CLOSE
		OPEN 'Maximum' max=AnyString maxNote=NoteRef? CLOSE
		OPEN 'InitialValue' initial=AnyString initialNote=NoteRef? CLOSE
		OPEN 'DataType' (type=[TypeReference|STRING]|dataType=BASE_DATA_TYPE) typeNote=NoteRef? CLOSE
		(OPEN 'Operators' operators=AnyString operatorsNote=NoteRef? CLOSE )?
	CLOSE
;

Lookahead:
	OPEN 'Lookahead'
		OPEN 'Units' units=AnyString unitsNote=NoteRef? CLOSE
		OPEN 'DataType' (type=[TypeReference|STRING]|dataType=BASE_DATA_TYPE) typeNote=NoteRef? CLOSE
		(OPEN 'AdditionOperator' operator=AnyString operatorNote=NoteRef? CLOSE)?
	CLOSE
;

MOD_Type:
	'FOM' | 'SOM' | 'OTHER'
;

OMTComponent:
	Class | EnumeratedDataType | ComplexDataType | RoutingSpace | Interaction | Note
;

RoutingSpace:
	OPEN 'RoutingSpace' OPEN 'Name' name=AnyString note=NoteRef? CLOSE
		dimensions+=Dimension*
	CLOSE
;

Dimension:
	OPEN 'Dimension' OPEN 'Name' name=AnyString nameNote=NoteRef? CLOSE
		OPEN 'DimensionType' (type=[TypeReference|STRING]|dataType=BASE_DATA_TYPE) typeNote=NoteRef? CLOSE
		domain=DimensionDomain
		( OPEN 'RangeSetUnits' units=AnyString unitsNote=NoteRef? CLOSE )?
		OPEN 'NormalizationFunction' function=AnyString functionNote=NoteRef? CLOSE
	CLOSE
;	

DimensionDomain: 
	DimensionRange | DimensionSet
;

DimensionRange:
	OPEN 'DimensionMinimum' minimum=AnyString note=NoteRef? CLOSE
	(OPEN 'DimensionMaximum' maximum=AnyString CLOSE)?
	OPEN 'IntervalType' IntervalType CLOSE
;

IntervalType:
	'Open' | 'Closed'
;

DimensionSet:
	OPEN 'DimensionSet' members+=DimensionSetMember+ note=NoteRef? CLOSE
;

DimensionSetMember:
	OPEN 'Member' value=AnyString CLOSE
;

Class:
	OPEN 'Class' OPEN 'ID' classId=ClassId CLOSE
		OPEN 'Name' name=AnyString note=NoteRef? CLOSE
		(OPEN 'MOMClass' isMOMClass=IsMOMClass CLOSE)?
		OPEN 'PSCapabilities' PSCapabilities CLOSE
		description=Description?
		
		components+=ClassComponent* CLOSE
;

ClassId:
	name=INT_TEXT
;

IsMOMClass:
	'TRUE' | 'FALSE'
;

PSCapabilities: 'P' | 'S' | 'PS' | 'N';

ClassComponent:
	Attribute | SuperClass
;

SuperClass:
	OPEN 'SuperClass' superClass=INT_TEXT CLOSE
;

Attribute:
	OPEN 'Attribute' OPEN 'Name' name=AnyString nameNote=NoteRef? CLOSE
		dataType=DataType?
		cardinality=Cardinality?
		units=Units?
		resolution=Resolution?
		accuracy=Accuracy?
		accuracyCondition=AccuracyCondition?
		(OPEN 'UpdateType' updateType=UpdateType updateTypeNote=NoteRef? CLOSE)?
		(OPEN 'UpdateCondition' updateCondition=AnyString updateConditionNote=NoteRef? CLOSE)?
		(OPEN 'TransferAccept' transferAccept=TransferAccept transferAcceptNote=NoteRef? CLOSE)?
		(OPEN 'UpdateReflect' updateReflect=UpdateReflect updateReflectNote=NoteRef? CLOSE)?
		description=Description?
		(OPEN 'RoutingSpace' routingSpace=AnyString CLOSE)? //TODO - LINK
 	CLOSE
;

UpdateType: 'Static' | 'Periodic' | 'Conditional';
TransferAccept: 'T' | 'A' | 'TA' | 'N';
UpdateReflect: 'U' | 'R' | 'UR';

EnumeratedDataType:
	OPEN 'EnumeratedDataType' OPEN 'Name' name=AnyString note=NoteRef? CLOSE
		(OPEN 'MOMEnumeratedDataType'  isMOMEnumeratedDataType=('TRUE'|'FALSE') CLOSE)?
		literals+=Enumeration+ 
	CLOSE
;

Enumeration:
	OPEN 'Enumeration' OPEN 'Enumerator' literal=AnyString enumeratorNote=NoteRef? CLOSE
		OPEN 'Representation' value=INT_TEXT representationNote=NoteRef? CLOSE 
	CLOSE
;

ComplexDataType: 
	OPEN 'ComplexDataType' OPEN 'Name' name=AnyString note=NoteRef? CLOSE
		(OPEN 'MOMComplexDataType' isMOMComplexDataType=('TRUE'|'FALSE') CLOSE)?
		components+=ComplexComponent+
	CLOSE
;

ComplexComponent: 
	OPEN 'ComplexComponent'
		position=Position?
		fieldName=FieldName
		dataType=DataType?
		cardinality=Cardinality?
		units=Units?
		resolution=Resolution?
		accuracy=Accuracy?
		accuracyCondition=AccuracyCondition?
	CLOSE
;
Accuracy:
	OPEN 'Accuracy' accuracy=AnyString accuracyNote=NoteRef? CLOSE
;
AccuracyCondition:
	OPEN 'AccuracyCondition' accuracyCondition=AnyString accuracyConditionNote=NoteRef? CLOSE
;
Resolution:
	OPEN 'Resolution' resolution=AnyString resolutionNote=NoteRef? CLOSE
;
Position:
	OPEN 'Position' position=AnyString CLOSE
;
DataType:
	OPEN 'DataType' (refType=[TypeReference|STRING]| dataType=BASE_DATA_TYPE) dataTypeNode=NoteRef? CLOSE
;
TypeReference:
	ComplexDataType | EnumeratedDataType
;
FieldName:
	OPEN 'FieldName' name=AnyString fieldNameNote=NoteRef? CLOSE
;
Units:
	OPEN 'Units' units=AnyString unitsNote=NoteRef? CLOSE
;
Cardinality:
	OPEN 'Cardinality' cardinality=AnyString cardinalityNote=NoteRef? CLOSE
;

Interaction:
	OPEN 'Interaction' OPEN 'ID' id=InteractionId CLOSE
		OPEN 'Name' name=AnyString nameNote=NoteRef? CLOSE
		OPEN 'ISRType' type=ISRType typeNote=NoteRef? CLOSE
		(OPEN 'MOMInteraction' isMOMInteraction=('TRUE'|'FALSE') CLOSE)?
		description+=Description
		(OPEN 'RoutingSpace' routingSpace=[RoutingSpace|STRING] CLOSE)?
		components+=InteractionComponent*
	CLOSE
;

InteractionId:
	name=INT_TEXT
;

ISRType: 
	'I' | 'S' | 'R' | 'IS' | 'IR' | 'N';

InteractionComponent:
	Parameter | SuperInteraction
;

SuperInteraction:
	OPEN 'SuperInteraction' super=[InteractionId|INT_TEXT] CLOSE
;

Parameter:
	OPEN 'Parameter' OPEN 'Name' name=AnyString nameNote=NoteRef? CLOSE
		dataType=DataType?
		cardinality=Cardinality?
		units=Units?
		resolution=Resolution?
		accuracy=Accuracy?
		accuracyCondition=AccuracyCondition?
		description=Description?
	CLOSE
;

Description:
	OPEN 'Description' description=AnyString CLOSE
;

Note:
	OPEN 'Note' 
		OPEN 'NoteNumber' name=INT_TEXT CLOSE
		OPEN 'NoteText' text=AnyString CLOSE
	CLOSE
;


NoteRef : '[' refs+=INT_TEXT (',' refs+=INT_TEXT)* ']';

AnyText:
	ID | TEXT
;

AnyString:
	STRING | BASE_DATA_TYPE
;

terminal BASE_DATA_TYPE : '"' ('unsigned short' | 'short' | 'unsigned long' | 'long' | 'unsigned long long' 
	| 'long long' | 'double' | 'float' | 'boolean' | 'any' | 'string' |	'char' | 'octet') '"';

terminal OPEN		: '(';
terminal CLOSE		: ')';
terminal COMMENT 	: ';;' !('\n'|'\r')* ('\r'? '\n')?;
terminal ID  		: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
terminal INT_TEXT	: ('0'..'9')+;
terminal TEXT		: !(','|'['|']'|'"'|"'"|'('|')'|' '|'\t'|'\r'|'\n')+;
//terminal INT returns ecore::EInt: ('0'..'9')+;

terminal STRING	: 
			'"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
			"'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
		; 
terminal ML_COMMENT	: '/*' -> '*/';
terminal SL_COMMENT 	: '//' !('\n'|'\r')* ('\r'? '\n')?;

terminal WS			: (' '|'\t'|'\r'|'\n')+;

terminal ANY_OTHER: .;