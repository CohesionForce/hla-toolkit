/**
 * generated by Xtext 2.12.0
 */
package com.cohesionforce.hla.dsl.omt.impl;

import com.cohesionforce.hla.dsl.omt.Dimension;
import com.cohesionforce.hla.dsl.omt.DimensionDomain;
import com.cohesionforce.hla.dsl.omt.NoteRef;
import com.cohesionforce.hla.dsl.omt.OmtPackage;
import com.cohesionforce.hla.dsl.omt.TypeReference;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Dimension</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.cohesionforce.hla.dsl.omt.impl.DimensionImpl#getName <em>Name</em>}</li>
 *   <li>{@link com.cohesionforce.hla.dsl.omt.impl.DimensionImpl#getNameNote <em>Name Note</em>}</li>
 *   <li>{@link com.cohesionforce.hla.dsl.omt.impl.DimensionImpl#getType <em>Type</em>}</li>
 *   <li>{@link com.cohesionforce.hla.dsl.omt.impl.DimensionImpl#getDataType <em>Data Type</em>}</li>
 *   <li>{@link com.cohesionforce.hla.dsl.omt.impl.DimensionImpl#getTypeNote <em>Type Note</em>}</li>
 *   <li>{@link com.cohesionforce.hla.dsl.omt.impl.DimensionImpl#getDomain <em>Domain</em>}</li>
 *   <li>{@link com.cohesionforce.hla.dsl.omt.impl.DimensionImpl#getUnits <em>Units</em>}</li>
 *   <li>{@link com.cohesionforce.hla.dsl.omt.impl.DimensionImpl#getUnitsNote <em>Units Note</em>}</li>
 *   <li>{@link com.cohesionforce.hla.dsl.omt.impl.DimensionImpl#getFunction <em>Function</em>}</li>
 *   <li>{@link com.cohesionforce.hla.dsl.omt.impl.DimensionImpl#getFunctionNote <em>Function Note</em>}</li>
 * </ul>
 *
 * @generated
 */
public class DimensionImpl extends MinimalEObjectImpl.Container implements Dimension
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getNameNote() <em>Name Note</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNameNote()
   * @generated
   * @ordered
   */
  protected NoteRef nameNote;

  /**
   * The cached value of the '{@link #getType() <em>Type</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType()
   * @generated
   * @ordered
   */
  protected TypeReference type;

  /**
   * The default value of the '{@link #getDataType() <em>Data Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDataType()
   * @generated
   * @ordered
   */
  protected static final String DATA_TYPE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDataType() <em>Data Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDataType()
   * @generated
   * @ordered
   */
  protected String dataType = DATA_TYPE_EDEFAULT;

  /**
   * The cached value of the '{@link #getTypeNote() <em>Type Note</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTypeNote()
   * @generated
   * @ordered
   */
  protected NoteRef typeNote;

  /**
   * The cached value of the '{@link #getDomain() <em>Domain</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDomain()
   * @generated
   * @ordered
   */
  protected DimensionDomain domain;

  /**
   * The default value of the '{@link #getUnits() <em>Units</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUnits()
   * @generated
   * @ordered
   */
  protected static final String UNITS_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getUnits() <em>Units</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUnits()
   * @generated
   * @ordered
   */
  protected String units = UNITS_EDEFAULT;

  /**
   * The cached value of the '{@link #getUnitsNote() <em>Units Note</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUnitsNote()
   * @generated
   * @ordered
   */
  protected NoteRef unitsNote;

  /**
   * The default value of the '{@link #getFunction() <em>Function</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFunction()
   * @generated
   * @ordered
   */
  protected static final String FUNCTION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getFunction() <em>Function</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFunction()
   * @generated
   * @ordered
   */
  protected String function = FUNCTION_EDEFAULT;

  /**
   * The cached value of the '{@link #getFunctionNote() <em>Function Note</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFunctionNote()
   * @generated
   * @ordered
   */
  protected NoteRef functionNote;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected DimensionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return OmtPackage.Literals.DIMENSION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OmtPackage.DIMENSION__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NoteRef getNameNote()
  {
    return nameNote;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetNameNote(NoteRef newNameNote, NotificationChain msgs)
  {
    NoteRef oldNameNote = nameNote;
    nameNote = newNameNote;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, OmtPackage.DIMENSION__NAME_NOTE, oldNameNote, newNameNote);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setNameNote(NoteRef newNameNote)
  {
    if (newNameNote != nameNote)
    {
      NotificationChain msgs = null;
      if (nameNote != null)
        msgs = ((InternalEObject)nameNote).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - OmtPackage.DIMENSION__NAME_NOTE, null, msgs);
      if (newNameNote != null)
        msgs = ((InternalEObject)newNameNote).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - OmtPackage.DIMENSION__NAME_NOTE, null, msgs);
      msgs = basicSetNameNote(newNameNote, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OmtPackage.DIMENSION__NAME_NOTE, newNameNote, newNameNote));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TypeReference getType()
  {
    if (type != null && type.eIsProxy())
    {
      InternalEObject oldType = (InternalEObject)type;
      type = (TypeReference)eResolveProxy(oldType);
      if (type != oldType)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, OmtPackage.DIMENSION__TYPE, oldType, type));
      }
    }
    return type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TypeReference basicGetType()
  {
    return type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setType(TypeReference newType)
  {
    TypeReference oldType = type;
    type = newType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OmtPackage.DIMENSION__TYPE, oldType, type));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getDataType()
  {
    return dataType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDataType(String newDataType)
  {
    String oldDataType = dataType;
    dataType = newDataType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OmtPackage.DIMENSION__DATA_TYPE, oldDataType, dataType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NoteRef getTypeNote()
  {
    return typeNote;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetTypeNote(NoteRef newTypeNote, NotificationChain msgs)
  {
    NoteRef oldTypeNote = typeNote;
    typeNote = newTypeNote;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, OmtPackage.DIMENSION__TYPE_NOTE, oldTypeNote, newTypeNote);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setTypeNote(NoteRef newTypeNote)
  {
    if (newTypeNote != typeNote)
    {
      NotificationChain msgs = null;
      if (typeNote != null)
        msgs = ((InternalEObject)typeNote).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - OmtPackage.DIMENSION__TYPE_NOTE, null, msgs);
      if (newTypeNote != null)
        msgs = ((InternalEObject)newTypeNote).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - OmtPackage.DIMENSION__TYPE_NOTE, null, msgs);
      msgs = basicSetTypeNote(newTypeNote, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OmtPackage.DIMENSION__TYPE_NOTE, newTypeNote, newTypeNote));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DimensionDomain getDomain()
  {
    return domain;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDomain(DimensionDomain newDomain, NotificationChain msgs)
  {
    DimensionDomain oldDomain = domain;
    domain = newDomain;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, OmtPackage.DIMENSION__DOMAIN, oldDomain, newDomain);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDomain(DimensionDomain newDomain)
  {
    if (newDomain != domain)
    {
      NotificationChain msgs = null;
      if (domain != null)
        msgs = ((InternalEObject)domain).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - OmtPackage.DIMENSION__DOMAIN, null, msgs);
      if (newDomain != null)
        msgs = ((InternalEObject)newDomain).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - OmtPackage.DIMENSION__DOMAIN, null, msgs);
      msgs = basicSetDomain(newDomain, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OmtPackage.DIMENSION__DOMAIN, newDomain, newDomain));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getUnits()
  {
    return units;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setUnits(String newUnits)
  {
    String oldUnits = units;
    units = newUnits;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OmtPackage.DIMENSION__UNITS, oldUnits, units));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NoteRef getUnitsNote()
  {
    return unitsNote;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetUnitsNote(NoteRef newUnitsNote, NotificationChain msgs)
  {
    NoteRef oldUnitsNote = unitsNote;
    unitsNote = newUnitsNote;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, OmtPackage.DIMENSION__UNITS_NOTE, oldUnitsNote, newUnitsNote);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setUnitsNote(NoteRef newUnitsNote)
  {
    if (newUnitsNote != unitsNote)
    {
      NotificationChain msgs = null;
      if (unitsNote != null)
        msgs = ((InternalEObject)unitsNote).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - OmtPackage.DIMENSION__UNITS_NOTE, null, msgs);
      if (newUnitsNote != null)
        msgs = ((InternalEObject)newUnitsNote).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - OmtPackage.DIMENSION__UNITS_NOTE, null, msgs);
      msgs = basicSetUnitsNote(newUnitsNote, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OmtPackage.DIMENSION__UNITS_NOTE, newUnitsNote, newUnitsNote));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getFunction()
  {
    return function;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setFunction(String newFunction)
  {
    String oldFunction = function;
    function = newFunction;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OmtPackage.DIMENSION__FUNCTION, oldFunction, function));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NoteRef getFunctionNote()
  {
    return functionNote;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetFunctionNote(NoteRef newFunctionNote, NotificationChain msgs)
  {
    NoteRef oldFunctionNote = functionNote;
    functionNote = newFunctionNote;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, OmtPackage.DIMENSION__FUNCTION_NOTE, oldFunctionNote, newFunctionNote);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setFunctionNote(NoteRef newFunctionNote)
  {
    if (newFunctionNote != functionNote)
    {
      NotificationChain msgs = null;
      if (functionNote != null)
        msgs = ((InternalEObject)functionNote).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - OmtPackage.DIMENSION__FUNCTION_NOTE, null, msgs);
      if (newFunctionNote != null)
        msgs = ((InternalEObject)newFunctionNote).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - OmtPackage.DIMENSION__FUNCTION_NOTE, null, msgs);
      msgs = basicSetFunctionNote(newFunctionNote, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OmtPackage.DIMENSION__FUNCTION_NOTE, newFunctionNote, newFunctionNote));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case OmtPackage.DIMENSION__NAME_NOTE:
        return basicSetNameNote(null, msgs);
      case OmtPackage.DIMENSION__TYPE_NOTE:
        return basicSetTypeNote(null, msgs);
      case OmtPackage.DIMENSION__DOMAIN:
        return basicSetDomain(null, msgs);
      case OmtPackage.DIMENSION__UNITS_NOTE:
        return basicSetUnitsNote(null, msgs);
      case OmtPackage.DIMENSION__FUNCTION_NOTE:
        return basicSetFunctionNote(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case OmtPackage.DIMENSION__NAME:
        return getName();
      case OmtPackage.DIMENSION__NAME_NOTE:
        return getNameNote();
      case OmtPackage.DIMENSION__TYPE:
        if (resolve) return getType();
        return basicGetType();
      case OmtPackage.DIMENSION__DATA_TYPE:
        return getDataType();
      case OmtPackage.DIMENSION__TYPE_NOTE:
        return getTypeNote();
      case OmtPackage.DIMENSION__DOMAIN:
        return getDomain();
      case OmtPackage.DIMENSION__UNITS:
        return getUnits();
      case OmtPackage.DIMENSION__UNITS_NOTE:
        return getUnitsNote();
      case OmtPackage.DIMENSION__FUNCTION:
        return getFunction();
      case OmtPackage.DIMENSION__FUNCTION_NOTE:
        return getFunctionNote();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case OmtPackage.DIMENSION__NAME:
        setName((String)newValue);
        return;
      case OmtPackage.DIMENSION__NAME_NOTE:
        setNameNote((NoteRef)newValue);
        return;
      case OmtPackage.DIMENSION__TYPE:
        setType((TypeReference)newValue);
        return;
      case OmtPackage.DIMENSION__DATA_TYPE:
        setDataType((String)newValue);
        return;
      case OmtPackage.DIMENSION__TYPE_NOTE:
        setTypeNote((NoteRef)newValue);
        return;
      case OmtPackage.DIMENSION__DOMAIN:
        setDomain((DimensionDomain)newValue);
        return;
      case OmtPackage.DIMENSION__UNITS:
        setUnits((String)newValue);
        return;
      case OmtPackage.DIMENSION__UNITS_NOTE:
        setUnitsNote((NoteRef)newValue);
        return;
      case OmtPackage.DIMENSION__FUNCTION:
        setFunction((String)newValue);
        return;
      case OmtPackage.DIMENSION__FUNCTION_NOTE:
        setFunctionNote((NoteRef)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case OmtPackage.DIMENSION__NAME:
        setName(NAME_EDEFAULT);
        return;
      case OmtPackage.DIMENSION__NAME_NOTE:
        setNameNote((NoteRef)null);
        return;
      case OmtPackage.DIMENSION__TYPE:
        setType((TypeReference)null);
        return;
      case OmtPackage.DIMENSION__DATA_TYPE:
        setDataType(DATA_TYPE_EDEFAULT);
        return;
      case OmtPackage.DIMENSION__TYPE_NOTE:
        setTypeNote((NoteRef)null);
        return;
      case OmtPackage.DIMENSION__DOMAIN:
        setDomain((DimensionDomain)null);
        return;
      case OmtPackage.DIMENSION__UNITS:
        setUnits(UNITS_EDEFAULT);
        return;
      case OmtPackage.DIMENSION__UNITS_NOTE:
        setUnitsNote((NoteRef)null);
        return;
      case OmtPackage.DIMENSION__FUNCTION:
        setFunction(FUNCTION_EDEFAULT);
        return;
      case OmtPackage.DIMENSION__FUNCTION_NOTE:
        setFunctionNote((NoteRef)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case OmtPackage.DIMENSION__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case OmtPackage.DIMENSION__NAME_NOTE:
        return nameNote != null;
      case OmtPackage.DIMENSION__TYPE:
        return type != null;
      case OmtPackage.DIMENSION__DATA_TYPE:
        return DATA_TYPE_EDEFAULT == null ? dataType != null : !DATA_TYPE_EDEFAULT.equals(dataType);
      case OmtPackage.DIMENSION__TYPE_NOTE:
        return typeNote != null;
      case OmtPackage.DIMENSION__DOMAIN:
        return domain != null;
      case OmtPackage.DIMENSION__UNITS:
        return UNITS_EDEFAULT == null ? units != null : !UNITS_EDEFAULT.equals(units);
      case OmtPackage.DIMENSION__UNITS_NOTE:
        return unitsNote != null;
      case OmtPackage.DIMENSION__FUNCTION:
        return FUNCTION_EDEFAULT == null ? function != null : !FUNCTION_EDEFAULT.equals(function);
      case OmtPackage.DIMENSION__FUNCTION_NOTE:
        return functionNote != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", dataType: ");
    result.append(dataType);
    result.append(", units: ");
    result.append(units);
    result.append(", function: ");
    result.append(function);
    result.append(')');
    return result.toString();
  }

} //DimensionImpl
