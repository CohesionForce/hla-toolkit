/**
 * generated by Xtext 2.12.0
 */
package com.cohesionforce.hla.dsl.omt.impl;

import com.cohesionforce.hla.dsl.omt.Description;
import com.cohesionforce.hla.dsl.omt.Interaction;
import com.cohesionforce.hla.dsl.omt.InteractionComponent;
import com.cohesionforce.hla.dsl.omt.NoteRef;
import com.cohesionforce.hla.dsl.omt.OmtPackage;
import com.cohesionforce.hla.dsl.omt.RoutingSpace;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Interaction</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.cohesionforce.hla.dsl.omt.impl.InteractionImpl#getId <em>Id</em>}</li>
 *   <li>{@link com.cohesionforce.hla.dsl.omt.impl.InteractionImpl#getName <em>Name</em>}</li>
 *   <li>{@link com.cohesionforce.hla.dsl.omt.impl.InteractionImpl#getNameNote <em>Name Note</em>}</li>
 *   <li>{@link com.cohesionforce.hla.dsl.omt.impl.InteractionImpl#getType <em>Type</em>}</li>
 *   <li>{@link com.cohesionforce.hla.dsl.omt.impl.InteractionImpl#getTypeNote <em>Type Note</em>}</li>
 *   <li>{@link com.cohesionforce.hla.dsl.omt.impl.InteractionImpl#getIsMOMInteraction <em>Is MOM Interaction</em>}</li>
 *   <li>{@link com.cohesionforce.hla.dsl.omt.impl.InteractionImpl#getDescription <em>Description</em>}</li>
 *   <li>{@link com.cohesionforce.hla.dsl.omt.impl.InteractionImpl#getRoutingSpace <em>Routing Space</em>}</li>
 *   <li>{@link com.cohesionforce.hla.dsl.omt.impl.InteractionImpl#getComponents <em>Components</em>}</li>
 * </ul>
 *
 * @generated
 */
public class InteractionImpl extends OMTComponentImpl implements Interaction
{
  /**
   * The default value of the '{@link #getId() <em>Id</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getId()
   * @generated
   * @ordered
   */
  protected static final int ID_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getId() <em>Id</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getId()
   * @generated
   * @ordered
   */
  protected int id = ID_EDEFAULT;

  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getNameNote() <em>Name Note</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNameNote()
   * @generated
   * @ordered
   */
  protected NoteRef nameNote;

  /**
   * The default value of the '{@link #getType() <em>Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType()
   * @generated
   * @ordered
   */
  protected static final String TYPE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getType() <em>Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType()
   * @generated
   * @ordered
   */
  protected String type = TYPE_EDEFAULT;

  /**
   * The cached value of the '{@link #getTypeNote() <em>Type Note</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTypeNote()
   * @generated
   * @ordered
   */
  protected NoteRef typeNote;

  /**
   * The default value of the '{@link #getIsMOMInteraction() <em>Is MOM Interaction</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIsMOMInteraction()
   * @generated
   * @ordered
   */
  protected static final String IS_MOM_INTERACTION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getIsMOMInteraction() <em>Is MOM Interaction</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIsMOMInteraction()
   * @generated
   * @ordered
   */
  protected String isMOMInteraction = IS_MOM_INTERACTION_EDEFAULT;

  /**
   * The cached value of the '{@link #getDescription() <em>Description</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDescription()
   * @generated
   * @ordered
   */
  protected EList<Description> description;

  /**
   * The cached value of the '{@link #getRoutingSpace() <em>Routing Space</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRoutingSpace()
   * @generated
   * @ordered
   */
  protected RoutingSpace routingSpace;

  /**
   * The cached value of the '{@link #getComponents() <em>Components</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getComponents()
   * @generated
   * @ordered
   */
  protected EList<InteractionComponent> components;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected InteractionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return OmtPackage.Literals.INTERACTION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getId()
  {
    return id;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setId(int newId)
  {
    int oldId = id;
    id = newId;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OmtPackage.INTERACTION__ID, oldId, id));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OmtPackage.INTERACTION__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NoteRef getNameNote()
  {
    return nameNote;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetNameNote(NoteRef newNameNote, NotificationChain msgs)
  {
    NoteRef oldNameNote = nameNote;
    nameNote = newNameNote;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, OmtPackage.INTERACTION__NAME_NOTE, oldNameNote, newNameNote);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setNameNote(NoteRef newNameNote)
  {
    if (newNameNote != nameNote)
    {
      NotificationChain msgs = null;
      if (nameNote != null)
        msgs = ((InternalEObject)nameNote).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - OmtPackage.INTERACTION__NAME_NOTE, null, msgs);
      if (newNameNote != null)
        msgs = ((InternalEObject)newNameNote).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - OmtPackage.INTERACTION__NAME_NOTE, null, msgs);
      msgs = basicSetNameNote(newNameNote, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OmtPackage.INTERACTION__NAME_NOTE, newNameNote, newNameNote));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getType()
  {
    return type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setType(String newType)
  {
    String oldType = type;
    type = newType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OmtPackage.INTERACTION__TYPE, oldType, type));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NoteRef getTypeNote()
  {
    return typeNote;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetTypeNote(NoteRef newTypeNote, NotificationChain msgs)
  {
    NoteRef oldTypeNote = typeNote;
    typeNote = newTypeNote;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, OmtPackage.INTERACTION__TYPE_NOTE, oldTypeNote, newTypeNote);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setTypeNote(NoteRef newTypeNote)
  {
    if (newTypeNote != typeNote)
    {
      NotificationChain msgs = null;
      if (typeNote != null)
        msgs = ((InternalEObject)typeNote).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - OmtPackage.INTERACTION__TYPE_NOTE, null, msgs);
      if (newTypeNote != null)
        msgs = ((InternalEObject)newTypeNote).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - OmtPackage.INTERACTION__TYPE_NOTE, null, msgs);
      msgs = basicSetTypeNote(newTypeNote, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OmtPackage.INTERACTION__TYPE_NOTE, newTypeNote, newTypeNote));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getIsMOMInteraction()
  {
    return isMOMInteraction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setIsMOMInteraction(String newIsMOMInteraction)
  {
    String oldIsMOMInteraction = isMOMInteraction;
    isMOMInteraction = newIsMOMInteraction;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OmtPackage.INTERACTION__IS_MOM_INTERACTION, oldIsMOMInteraction, isMOMInteraction));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Description> getDescription()
  {
    if (description == null)
    {
      description = new EObjectContainmentEList<Description>(Description.class, this, OmtPackage.INTERACTION__DESCRIPTION);
    }
    return description;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RoutingSpace getRoutingSpace()
  {
    if (routingSpace != null && routingSpace.eIsProxy())
    {
      InternalEObject oldRoutingSpace = (InternalEObject)routingSpace;
      routingSpace = (RoutingSpace)eResolveProxy(oldRoutingSpace);
      if (routingSpace != oldRoutingSpace)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, OmtPackage.INTERACTION__ROUTING_SPACE, oldRoutingSpace, routingSpace));
      }
    }
    return routingSpace;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RoutingSpace basicGetRoutingSpace()
  {
    return routingSpace;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setRoutingSpace(RoutingSpace newRoutingSpace)
  {
    RoutingSpace oldRoutingSpace = routingSpace;
    routingSpace = newRoutingSpace;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OmtPackage.INTERACTION__ROUTING_SPACE, oldRoutingSpace, routingSpace));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<InteractionComponent> getComponents()
  {
    if (components == null)
    {
      components = new EObjectContainmentEList<InteractionComponent>(InteractionComponent.class, this, OmtPackage.INTERACTION__COMPONENTS);
    }
    return components;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case OmtPackage.INTERACTION__NAME_NOTE:
        return basicSetNameNote(null, msgs);
      case OmtPackage.INTERACTION__TYPE_NOTE:
        return basicSetTypeNote(null, msgs);
      case OmtPackage.INTERACTION__DESCRIPTION:
        return ((InternalEList<?>)getDescription()).basicRemove(otherEnd, msgs);
      case OmtPackage.INTERACTION__COMPONENTS:
        return ((InternalEList<?>)getComponents()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case OmtPackage.INTERACTION__ID:
        return getId();
      case OmtPackage.INTERACTION__NAME:
        return getName();
      case OmtPackage.INTERACTION__NAME_NOTE:
        return getNameNote();
      case OmtPackage.INTERACTION__TYPE:
        return getType();
      case OmtPackage.INTERACTION__TYPE_NOTE:
        return getTypeNote();
      case OmtPackage.INTERACTION__IS_MOM_INTERACTION:
        return getIsMOMInteraction();
      case OmtPackage.INTERACTION__DESCRIPTION:
        return getDescription();
      case OmtPackage.INTERACTION__ROUTING_SPACE:
        if (resolve) return getRoutingSpace();
        return basicGetRoutingSpace();
      case OmtPackage.INTERACTION__COMPONENTS:
        return getComponents();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case OmtPackage.INTERACTION__ID:
        setId((Integer)newValue);
        return;
      case OmtPackage.INTERACTION__NAME:
        setName((String)newValue);
        return;
      case OmtPackage.INTERACTION__NAME_NOTE:
        setNameNote((NoteRef)newValue);
        return;
      case OmtPackage.INTERACTION__TYPE:
        setType((String)newValue);
        return;
      case OmtPackage.INTERACTION__TYPE_NOTE:
        setTypeNote((NoteRef)newValue);
        return;
      case OmtPackage.INTERACTION__IS_MOM_INTERACTION:
        setIsMOMInteraction((String)newValue);
        return;
      case OmtPackage.INTERACTION__DESCRIPTION:
        getDescription().clear();
        getDescription().addAll((Collection<? extends Description>)newValue);
        return;
      case OmtPackage.INTERACTION__ROUTING_SPACE:
        setRoutingSpace((RoutingSpace)newValue);
        return;
      case OmtPackage.INTERACTION__COMPONENTS:
        getComponents().clear();
        getComponents().addAll((Collection<? extends InteractionComponent>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case OmtPackage.INTERACTION__ID:
        setId(ID_EDEFAULT);
        return;
      case OmtPackage.INTERACTION__NAME:
        setName(NAME_EDEFAULT);
        return;
      case OmtPackage.INTERACTION__NAME_NOTE:
        setNameNote((NoteRef)null);
        return;
      case OmtPackage.INTERACTION__TYPE:
        setType(TYPE_EDEFAULT);
        return;
      case OmtPackage.INTERACTION__TYPE_NOTE:
        setTypeNote((NoteRef)null);
        return;
      case OmtPackage.INTERACTION__IS_MOM_INTERACTION:
        setIsMOMInteraction(IS_MOM_INTERACTION_EDEFAULT);
        return;
      case OmtPackage.INTERACTION__DESCRIPTION:
        getDescription().clear();
        return;
      case OmtPackage.INTERACTION__ROUTING_SPACE:
        setRoutingSpace((RoutingSpace)null);
        return;
      case OmtPackage.INTERACTION__COMPONENTS:
        getComponents().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case OmtPackage.INTERACTION__ID:
        return id != ID_EDEFAULT;
      case OmtPackage.INTERACTION__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case OmtPackage.INTERACTION__NAME_NOTE:
        return nameNote != null;
      case OmtPackage.INTERACTION__TYPE:
        return TYPE_EDEFAULT == null ? type != null : !TYPE_EDEFAULT.equals(type);
      case OmtPackage.INTERACTION__TYPE_NOTE:
        return typeNote != null;
      case OmtPackage.INTERACTION__IS_MOM_INTERACTION:
        return IS_MOM_INTERACTION_EDEFAULT == null ? isMOMInteraction != null : !IS_MOM_INTERACTION_EDEFAULT.equals(isMOMInteraction);
      case OmtPackage.INTERACTION__DESCRIPTION:
        return description != null && !description.isEmpty();
      case OmtPackage.INTERACTION__ROUTING_SPACE:
        return routingSpace != null;
      case OmtPackage.INTERACTION__COMPONENTS:
        return components != null && !components.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (id: ");
    result.append(id);
    result.append(", name: ");
    result.append(name);
    result.append(", type: ");
    result.append(type);
    result.append(", isMOMInteraction: ");
    result.append(isMOMInteraction);
    result.append(')');
    return result.toString();
  }

} //InteractionImpl
