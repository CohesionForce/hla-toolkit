/**
 * generated by Xtext 2.12.0
 */
package com.cohesionforce.hla.dsl.omt.impl;

import com.cohesionforce.hla.dsl.omt.Accuracy;
import com.cohesionforce.hla.dsl.omt.AccuracyCondition;
import com.cohesionforce.hla.dsl.omt.Attribute;
import com.cohesionforce.hla.dsl.omt.Cardinality;
import com.cohesionforce.hla.dsl.omt.ClassComponent;
import com.cohesionforce.hla.dsl.omt.ComplexComponent;
import com.cohesionforce.hla.dsl.omt.ComplexDataType;
import com.cohesionforce.hla.dsl.omt.DataType;
import com.cohesionforce.hla.dsl.omt.Description;
import com.cohesionforce.hla.dsl.omt.Dimension;
import com.cohesionforce.hla.dsl.omt.DimensionDomain;
import com.cohesionforce.hla.dsl.omt.DimensionRange;
import com.cohesionforce.hla.dsl.omt.DimensionSet;
import com.cohesionforce.hla.dsl.omt.DimensionSetMember;
import com.cohesionforce.hla.dsl.omt.EnumeratedDataType;
import com.cohesionforce.hla.dsl.omt.Enumeration;
import com.cohesionforce.hla.dsl.omt.FieldName;
import com.cohesionforce.hla.dsl.omt.HLAOMT_DIF_v1_3;
import com.cohesionforce.hla.dsl.omt.Interaction;
import com.cohesionforce.hla.dsl.omt.InteractionComponent;
import com.cohesionforce.hla.dsl.omt.Lookahead;
import com.cohesionforce.hla.dsl.omt.Note;
import com.cohesionforce.hla.dsl.omt.NoteRef;
import com.cohesionforce.hla.dsl.omt.OMTComponent;
import com.cohesionforce.hla.dsl.omt.ObjectModel;
import com.cohesionforce.hla.dsl.omt.OmtFactory;
import com.cohesionforce.hla.dsl.omt.OmtPackage;
import com.cohesionforce.hla.dsl.omt.Parameter;
import com.cohesionforce.hla.dsl.omt.Position;
import com.cohesionforce.hla.dsl.omt.Resolution;
import com.cohesionforce.hla.dsl.omt.RoutingSpace;
import com.cohesionforce.hla.dsl.omt.SuperClass;
import com.cohesionforce.hla.dsl.omt.SuperInteraction;
import com.cohesionforce.hla.dsl.omt.TimeRepresentation;
import com.cohesionforce.hla.dsl.omt.Units;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class OmtFactoryImpl extends EFactoryImpl implements OmtFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static OmtFactory init()
  {
    try
    {
      OmtFactory theOmtFactory = (OmtFactory)EPackage.Registry.INSTANCE.getEFactory(OmtPackage.eNS_URI);
      if (theOmtFactory != null)
      {
        return theOmtFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new OmtFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public OmtFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case OmtPackage.HLAOMT_DIF_V1_3: return createHLAOMT_DIF_v1_3();
      case OmtPackage.OBJECT_MODEL: return createObjectModel();
      case OmtPackage.TIME_REPRESENTATION: return createTimeRepresentation();
      case OmtPackage.LOOKAHEAD: return createLookahead();
      case OmtPackage.OMT_COMPONENT: return createOMTComponent();
      case OmtPackage.ROUTING_SPACE: return createRoutingSpace();
      case OmtPackage.DIMENSION: return createDimension();
      case OmtPackage.DIMENSION_DOMAIN: return createDimensionDomain();
      case OmtPackage.DIMENSION_RANGE: return createDimensionRange();
      case OmtPackage.DIMENSION_SET: return createDimensionSet();
      case OmtPackage.DIMENSION_SET_MEMBER: return createDimensionSetMember();
      case OmtPackage.CLASS: return createClass();
      case OmtPackage.CLASS_COMPONENT: return createClassComponent();
      case OmtPackage.SUPER_CLASS: return createSuperClass();
      case OmtPackage.ATTRIBUTE: return createAttribute();
      case OmtPackage.ENUMERATED_DATA_TYPE: return createEnumeratedDataType();
      case OmtPackage.ENUMERATION: return createEnumeration();
      case OmtPackage.COMPLEX_DATA_TYPE: return createComplexDataType();
      case OmtPackage.COMPLEX_COMPONENT: return createComplexComponent();
      case OmtPackage.ACCURACY: return createAccuracy();
      case OmtPackage.ACCURACY_CONDITION: return createAccuracyCondition();
      case OmtPackage.RESOLUTION: return createResolution();
      case OmtPackage.POSITION: return createPosition();
      case OmtPackage.DATA_TYPE: return createDataType();
      case OmtPackage.FIELD_NAME: return createFieldName();
      case OmtPackage.UNITS: return createUnits();
      case OmtPackage.CARDINALITY: return createCardinality();
      case OmtPackage.INTERACTION: return createInteraction();
      case OmtPackage.INTERACTION_COMPONENT: return createInteractionComponent();
      case OmtPackage.SUPER_INTERACTION: return createSuperInteraction();
      case OmtPackage.PARAMETER: return createParameter();
      case OmtPackage.DESCRIPTION: return createDescription();
      case OmtPackage.NOTE: return createNote();
      case OmtPackage.NOTE_REF: return createNoteRef();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public HLAOMT_DIF_v1_3 createHLAOMT_DIF_v1_3()
  {
    HLAOMT_DIF_v1_3Impl hlaomT_DIF_v1_3 = new HLAOMT_DIF_v1_3Impl();
    return hlaomT_DIF_v1_3;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ObjectModel createObjectModel()
  {
    ObjectModelImpl objectModel = new ObjectModelImpl();
    return objectModel;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TimeRepresentation createTimeRepresentation()
  {
    TimeRepresentationImpl timeRepresentation = new TimeRepresentationImpl();
    return timeRepresentation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Lookahead createLookahead()
  {
    LookaheadImpl lookahead = new LookaheadImpl();
    return lookahead;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public OMTComponent createOMTComponent()
  {
    OMTComponentImpl omtComponent = new OMTComponentImpl();
    return omtComponent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RoutingSpace createRoutingSpace()
  {
    RoutingSpaceImpl routingSpace = new RoutingSpaceImpl();
    return routingSpace;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Dimension createDimension()
  {
    DimensionImpl dimension = new DimensionImpl();
    return dimension;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DimensionDomain createDimensionDomain()
  {
    DimensionDomainImpl dimensionDomain = new DimensionDomainImpl();
    return dimensionDomain;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DimensionRange createDimensionRange()
  {
    DimensionRangeImpl dimensionRange = new DimensionRangeImpl();
    return dimensionRange;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DimensionSet createDimensionSet()
  {
    DimensionSetImpl dimensionSet = new DimensionSetImpl();
    return dimensionSet;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DimensionSetMember createDimensionSetMember()
  {
    DimensionSetMemberImpl dimensionSetMember = new DimensionSetMemberImpl();
    return dimensionSetMember;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public com.cohesionforce.hla.dsl.omt.Class createClass()
  {
    ClassImpl class_ = new ClassImpl();
    return class_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ClassComponent createClassComponent()
  {
    ClassComponentImpl classComponent = new ClassComponentImpl();
    return classComponent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SuperClass createSuperClass()
  {
    SuperClassImpl superClass = new SuperClassImpl();
    return superClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Attribute createAttribute()
  {
    AttributeImpl attribute = new AttributeImpl();
    return attribute;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EnumeratedDataType createEnumeratedDataType()
  {
    EnumeratedDataTypeImpl enumeratedDataType = new EnumeratedDataTypeImpl();
    return enumeratedDataType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Enumeration createEnumeration()
  {
    EnumerationImpl enumeration = new EnumerationImpl();
    return enumeration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ComplexDataType createComplexDataType()
  {
    ComplexDataTypeImpl complexDataType = new ComplexDataTypeImpl();
    return complexDataType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ComplexComponent createComplexComponent()
  {
    ComplexComponentImpl complexComponent = new ComplexComponentImpl();
    return complexComponent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Accuracy createAccuracy()
  {
    AccuracyImpl accuracy = new AccuracyImpl();
    return accuracy;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AccuracyCondition createAccuracyCondition()
  {
    AccuracyConditionImpl accuracyCondition = new AccuracyConditionImpl();
    return accuracyCondition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Resolution createResolution()
  {
    ResolutionImpl resolution = new ResolutionImpl();
    return resolution;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Position createPosition()
  {
    PositionImpl position = new PositionImpl();
    return position;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DataType createDataType()
  {
    DataTypeImpl dataType = new DataTypeImpl();
    return dataType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public FieldName createFieldName()
  {
    FieldNameImpl fieldName = new FieldNameImpl();
    return fieldName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Units createUnits()
  {
    UnitsImpl units = new UnitsImpl();
    return units;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Cardinality createCardinality()
  {
    CardinalityImpl cardinality = new CardinalityImpl();
    return cardinality;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Interaction createInteraction()
  {
    InteractionImpl interaction = new InteractionImpl();
    return interaction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public InteractionComponent createInteractionComponent()
  {
    InteractionComponentImpl interactionComponent = new InteractionComponentImpl();
    return interactionComponent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SuperInteraction createSuperInteraction()
  {
    SuperInteractionImpl superInteraction = new SuperInteractionImpl();
    return superInteraction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Parameter createParameter()
  {
    ParameterImpl parameter = new ParameterImpl();
    return parameter;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Description createDescription()
  {
    DescriptionImpl description = new DescriptionImpl();
    return description;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Note createNote()
  {
    NoteImpl note = new NoteImpl();
    return note;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NoteRef createNoteRef()
  {
    NoteRefImpl noteRef = new NoteRefImpl();
    return noteRef;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public OmtPackage getOmtPackage()
  {
    return (OmtPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static OmtPackage getPackage()
  {
    return OmtPackage.eINSTANCE;
  }

} //OmtFactoryImpl
