/**
 * generated by Xtext 2.12.0
 */
package com.cohesionforce.hla.dsl.omt.impl;

import com.cohesionforce.hla.dsl.omt.AccuracyCondition;
import com.cohesionforce.hla.dsl.omt.NoteRef;
import com.cohesionforce.hla.dsl.omt.OmtPackage;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Accuracy Condition</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.cohesionforce.hla.dsl.omt.impl.AccuracyConditionImpl#getAccuracyCondition <em>Accuracy Condition</em>}</li>
 *   <li>{@link com.cohesionforce.hla.dsl.omt.impl.AccuracyConditionImpl#getAccuracyConditionNote <em>Accuracy Condition Note</em>}</li>
 * </ul>
 *
 * @generated
 */
public class AccuracyConditionImpl extends MinimalEObjectImpl.Container implements AccuracyCondition
{
  /**
   * The default value of the '{@link #getAccuracyCondition() <em>Accuracy Condition</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAccuracyCondition()
   * @generated
   * @ordered
   */
  protected static final String ACCURACY_CONDITION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getAccuracyCondition() <em>Accuracy Condition</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAccuracyCondition()
   * @generated
   * @ordered
   */
  protected String accuracyCondition = ACCURACY_CONDITION_EDEFAULT;

  /**
   * The cached value of the '{@link #getAccuracyConditionNote() <em>Accuracy Condition Note</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAccuracyConditionNote()
   * @generated
   * @ordered
   */
  protected NoteRef accuracyConditionNote;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected AccuracyConditionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return OmtPackage.Literals.ACCURACY_CONDITION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getAccuracyCondition()
  {
    return accuracyCondition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setAccuracyCondition(String newAccuracyCondition)
  {
    String oldAccuracyCondition = accuracyCondition;
    accuracyCondition = newAccuracyCondition;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OmtPackage.ACCURACY_CONDITION__ACCURACY_CONDITION, oldAccuracyCondition, accuracyCondition));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NoteRef getAccuracyConditionNote()
  {
    return accuracyConditionNote;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetAccuracyConditionNote(NoteRef newAccuracyConditionNote, NotificationChain msgs)
  {
    NoteRef oldAccuracyConditionNote = accuracyConditionNote;
    accuracyConditionNote = newAccuracyConditionNote;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, OmtPackage.ACCURACY_CONDITION__ACCURACY_CONDITION_NOTE, oldAccuracyConditionNote, newAccuracyConditionNote);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setAccuracyConditionNote(NoteRef newAccuracyConditionNote)
  {
    if (newAccuracyConditionNote != accuracyConditionNote)
    {
      NotificationChain msgs = null;
      if (accuracyConditionNote != null)
        msgs = ((InternalEObject)accuracyConditionNote).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - OmtPackage.ACCURACY_CONDITION__ACCURACY_CONDITION_NOTE, null, msgs);
      if (newAccuracyConditionNote != null)
        msgs = ((InternalEObject)newAccuracyConditionNote).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - OmtPackage.ACCURACY_CONDITION__ACCURACY_CONDITION_NOTE, null, msgs);
      msgs = basicSetAccuracyConditionNote(newAccuracyConditionNote, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OmtPackage.ACCURACY_CONDITION__ACCURACY_CONDITION_NOTE, newAccuracyConditionNote, newAccuracyConditionNote));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case OmtPackage.ACCURACY_CONDITION__ACCURACY_CONDITION_NOTE:
        return basicSetAccuracyConditionNote(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case OmtPackage.ACCURACY_CONDITION__ACCURACY_CONDITION:
        return getAccuracyCondition();
      case OmtPackage.ACCURACY_CONDITION__ACCURACY_CONDITION_NOTE:
        return getAccuracyConditionNote();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case OmtPackage.ACCURACY_CONDITION__ACCURACY_CONDITION:
        setAccuracyCondition((String)newValue);
        return;
      case OmtPackage.ACCURACY_CONDITION__ACCURACY_CONDITION_NOTE:
        setAccuracyConditionNote((NoteRef)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case OmtPackage.ACCURACY_CONDITION__ACCURACY_CONDITION:
        setAccuracyCondition(ACCURACY_CONDITION_EDEFAULT);
        return;
      case OmtPackage.ACCURACY_CONDITION__ACCURACY_CONDITION_NOTE:
        setAccuracyConditionNote((NoteRef)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case OmtPackage.ACCURACY_CONDITION__ACCURACY_CONDITION:
        return ACCURACY_CONDITION_EDEFAULT == null ? accuracyCondition != null : !ACCURACY_CONDITION_EDEFAULT.equals(accuracyCondition);
      case OmtPackage.ACCURACY_CONDITION__ACCURACY_CONDITION_NOTE:
        return accuracyConditionNote != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (accuracyCondition: ");
    result.append(accuracyCondition);
    result.append(')');
    return result.toString();
  }

} //AccuracyConditionImpl
