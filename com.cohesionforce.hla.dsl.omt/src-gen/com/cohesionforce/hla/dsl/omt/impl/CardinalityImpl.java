/**
 * generated by Xtext 2.12.0
 */
package com.cohesionforce.hla.dsl.omt.impl;

import com.cohesionforce.hla.dsl.omt.Cardinality;
import com.cohesionforce.hla.dsl.omt.NoteRef;
import com.cohesionforce.hla.dsl.omt.OmtPackage;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Cardinality</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.cohesionforce.hla.dsl.omt.impl.CardinalityImpl#getCardinality <em>Cardinality</em>}</li>
 *   <li>{@link com.cohesionforce.hla.dsl.omt.impl.CardinalityImpl#getCardinalityNote <em>Cardinality Note</em>}</li>
 * </ul>
 *
 * @generated
 */
public class CardinalityImpl extends MinimalEObjectImpl.Container implements Cardinality
{
  /**
   * The default value of the '{@link #getCardinality() <em>Cardinality</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCardinality()
   * @generated
   * @ordered
   */
  protected static final String CARDINALITY_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getCardinality() <em>Cardinality</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCardinality()
   * @generated
   * @ordered
   */
  protected String cardinality = CARDINALITY_EDEFAULT;

  /**
   * The cached value of the '{@link #getCardinalityNote() <em>Cardinality Note</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCardinalityNote()
   * @generated
   * @ordered
   */
  protected NoteRef cardinalityNote;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected CardinalityImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return OmtPackage.Literals.CARDINALITY;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getCardinality()
  {
    return cardinality;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setCardinality(String newCardinality)
  {
    String oldCardinality = cardinality;
    cardinality = newCardinality;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OmtPackage.CARDINALITY__CARDINALITY, oldCardinality, cardinality));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NoteRef getCardinalityNote()
  {
    return cardinalityNote;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetCardinalityNote(NoteRef newCardinalityNote, NotificationChain msgs)
  {
    NoteRef oldCardinalityNote = cardinalityNote;
    cardinalityNote = newCardinalityNote;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, OmtPackage.CARDINALITY__CARDINALITY_NOTE, oldCardinalityNote, newCardinalityNote);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setCardinalityNote(NoteRef newCardinalityNote)
  {
    if (newCardinalityNote != cardinalityNote)
    {
      NotificationChain msgs = null;
      if (cardinalityNote != null)
        msgs = ((InternalEObject)cardinalityNote).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - OmtPackage.CARDINALITY__CARDINALITY_NOTE, null, msgs);
      if (newCardinalityNote != null)
        msgs = ((InternalEObject)newCardinalityNote).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - OmtPackage.CARDINALITY__CARDINALITY_NOTE, null, msgs);
      msgs = basicSetCardinalityNote(newCardinalityNote, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OmtPackage.CARDINALITY__CARDINALITY_NOTE, newCardinalityNote, newCardinalityNote));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case OmtPackage.CARDINALITY__CARDINALITY_NOTE:
        return basicSetCardinalityNote(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case OmtPackage.CARDINALITY__CARDINALITY:
        return getCardinality();
      case OmtPackage.CARDINALITY__CARDINALITY_NOTE:
        return getCardinalityNote();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case OmtPackage.CARDINALITY__CARDINALITY:
        setCardinality((String)newValue);
        return;
      case OmtPackage.CARDINALITY__CARDINALITY_NOTE:
        setCardinalityNote((NoteRef)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case OmtPackage.CARDINALITY__CARDINALITY:
        setCardinality(CARDINALITY_EDEFAULT);
        return;
      case OmtPackage.CARDINALITY__CARDINALITY_NOTE:
        setCardinalityNote((NoteRef)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case OmtPackage.CARDINALITY__CARDINALITY:
        return CARDINALITY_EDEFAULT == null ? cardinality != null : !CARDINALITY_EDEFAULT.equals(cardinality);
      case OmtPackage.CARDINALITY__CARDINALITY_NOTE:
        return cardinalityNote != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (cardinality: ");
    result.append(cardinality);
    result.append(')');
    return result.toString();
  }

} //CardinalityImpl
