/**
 * generated by Xtext 2.12.0
 */
package com.cohesionforce.hla.dsl.omt.impl;

import com.cohesionforce.hla.dsl.omt.Accuracy;
import com.cohesionforce.hla.dsl.omt.AccuracyCondition;
import com.cohesionforce.hla.dsl.omt.Attribute;
import com.cohesionforce.hla.dsl.omt.Cardinality;
import com.cohesionforce.hla.dsl.omt.DataType;
import com.cohesionforce.hla.dsl.omt.Description;
import com.cohesionforce.hla.dsl.omt.NoteRef;
import com.cohesionforce.hla.dsl.omt.OmtPackage;
import com.cohesionforce.hla.dsl.omt.Resolution;
import com.cohesionforce.hla.dsl.omt.Units;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Attribute</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.cohesionforce.hla.dsl.omt.impl.AttributeImpl#getName <em>Name</em>}</li>
 *   <li>{@link com.cohesionforce.hla.dsl.omt.impl.AttributeImpl#getNameNote <em>Name Note</em>}</li>
 *   <li>{@link com.cohesionforce.hla.dsl.omt.impl.AttributeImpl#getDataType <em>Data Type</em>}</li>
 *   <li>{@link com.cohesionforce.hla.dsl.omt.impl.AttributeImpl#getCardinality <em>Cardinality</em>}</li>
 *   <li>{@link com.cohesionforce.hla.dsl.omt.impl.AttributeImpl#getUnits <em>Units</em>}</li>
 *   <li>{@link com.cohesionforce.hla.dsl.omt.impl.AttributeImpl#getResolution <em>Resolution</em>}</li>
 *   <li>{@link com.cohesionforce.hla.dsl.omt.impl.AttributeImpl#getAccuracy <em>Accuracy</em>}</li>
 *   <li>{@link com.cohesionforce.hla.dsl.omt.impl.AttributeImpl#getAccuracyCondition <em>Accuracy Condition</em>}</li>
 *   <li>{@link com.cohesionforce.hla.dsl.omt.impl.AttributeImpl#getUpdateType <em>Update Type</em>}</li>
 *   <li>{@link com.cohesionforce.hla.dsl.omt.impl.AttributeImpl#getUpdateTypeNote <em>Update Type Note</em>}</li>
 *   <li>{@link com.cohesionforce.hla.dsl.omt.impl.AttributeImpl#getUpdateCondition <em>Update Condition</em>}</li>
 *   <li>{@link com.cohesionforce.hla.dsl.omt.impl.AttributeImpl#getUpdateConditionNote <em>Update Condition Note</em>}</li>
 *   <li>{@link com.cohesionforce.hla.dsl.omt.impl.AttributeImpl#getTransferAccept <em>Transfer Accept</em>}</li>
 *   <li>{@link com.cohesionforce.hla.dsl.omt.impl.AttributeImpl#getTransferAcceptNote <em>Transfer Accept Note</em>}</li>
 *   <li>{@link com.cohesionforce.hla.dsl.omt.impl.AttributeImpl#getUpdateReflect <em>Update Reflect</em>}</li>
 *   <li>{@link com.cohesionforce.hla.dsl.omt.impl.AttributeImpl#getUpdateReflectNote <em>Update Reflect Note</em>}</li>
 *   <li>{@link com.cohesionforce.hla.dsl.omt.impl.AttributeImpl#getDescription <em>Description</em>}</li>
 *   <li>{@link com.cohesionforce.hla.dsl.omt.impl.AttributeImpl#getRoutingSpace <em>Routing Space</em>}</li>
 * </ul>
 *
 * @generated
 */
public class AttributeImpl extends ClassComponentImpl implements Attribute
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getNameNote() <em>Name Note</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNameNote()
   * @generated
   * @ordered
   */
  protected NoteRef nameNote;

  /**
   * The cached value of the '{@link #getDataType() <em>Data Type</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDataType()
   * @generated
   * @ordered
   */
  protected DataType dataType;

  /**
   * The cached value of the '{@link #getCardinality() <em>Cardinality</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCardinality()
   * @generated
   * @ordered
   */
  protected Cardinality cardinality;

  /**
   * The cached value of the '{@link #getUnits() <em>Units</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUnits()
   * @generated
   * @ordered
   */
  protected Units units;

  /**
   * The cached value of the '{@link #getResolution() <em>Resolution</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getResolution()
   * @generated
   * @ordered
   */
  protected Resolution resolution;

  /**
   * The cached value of the '{@link #getAccuracy() <em>Accuracy</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAccuracy()
   * @generated
   * @ordered
   */
  protected Accuracy accuracy;

  /**
   * The cached value of the '{@link #getAccuracyCondition() <em>Accuracy Condition</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAccuracyCondition()
   * @generated
   * @ordered
   */
  protected AccuracyCondition accuracyCondition;

  /**
   * The default value of the '{@link #getUpdateType() <em>Update Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUpdateType()
   * @generated
   * @ordered
   */
  protected static final String UPDATE_TYPE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getUpdateType() <em>Update Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUpdateType()
   * @generated
   * @ordered
   */
  protected String updateType = UPDATE_TYPE_EDEFAULT;

  /**
   * The cached value of the '{@link #getUpdateTypeNote() <em>Update Type Note</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUpdateTypeNote()
   * @generated
   * @ordered
   */
  protected NoteRef updateTypeNote;

  /**
   * The default value of the '{@link #getUpdateCondition() <em>Update Condition</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUpdateCondition()
   * @generated
   * @ordered
   */
  protected static final String UPDATE_CONDITION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getUpdateCondition() <em>Update Condition</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUpdateCondition()
   * @generated
   * @ordered
   */
  protected String updateCondition = UPDATE_CONDITION_EDEFAULT;

  /**
   * The cached value of the '{@link #getUpdateConditionNote() <em>Update Condition Note</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUpdateConditionNote()
   * @generated
   * @ordered
   */
  protected NoteRef updateConditionNote;

  /**
   * The default value of the '{@link #getTransferAccept() <em>Transfer Accept</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTransferAccept()
   * @generated
   * @ordered
   */
  protected static final String TRANSFER_ACCEPT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getTransferAccept() <em>Transfer Accept</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTransferAccept()
   * @generated
   * @ordered
   */
  protected String transferAccept = TRANSFER_ACCEPT_EDEFAULT;

  /**
   * The cached value of the '{@link #getTransferAcceptNote() <em>Transfer Accept Note</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTransferAcceptNote()
   * @generated
   * @ordered
   */
  protected NoteRef transferAcceptNote;

  /**
   * The default value of the '{@link #getUpdateReflect() <em>Update Reflect</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUpdateReflect()
   * @generated
   * @ordered
   */
  protected static final String UPDATE_REFLECT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getUpdateReflect() <em>Update Reflect</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUpdateReflect()
   * @generated
   * @ordered
   */
  protected String updateReflect = UPDATE_REFLECT_EDEFAULT;

  /**
   * The cached value of the '{@link #getUpdateReflectNote() <em>Update Reflect Note</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUpdateReflectNote()
   * @generated
   * @ordered
   */
  protected NoteRef updateReflectNote;

  /**
   * The cached value of the '{@link #getDescription() <em>Description</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDescription()
   * @generated
   * @ordered
   */
  protected Description description;

  /**
   * The default value of the '{@link #getRoutingSpace() <em>Routing Space</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRoutingSpace()
   * @generated
   * @ordered
   */
  protected static final String ROUTING_SPACE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getRoutingSpace() <em>Routing Space</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRoutingSpace()
   * @generated
   * @ordered
   */
  protected String routingSpace = ROUTING_SPACE_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected AttributeImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return OmtPackage.Literals.ATTRIBUTE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OmtPackage.ATTRIBUTE__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NoteRef getNameNote()
  {
    return nameNote;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetNameNote(NoteRef newNameNote, NotificationChain msgs)
  {
    NoteRef oldNameNote = nameNote;
    nameNote = newNameNote;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, OmtPackage.ATTRIBUTE__NAME_NOTE, oldNameNote, newNameNote);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setNameNote(NoteRef newNameNote)
  {
    if (newNameNote != nameNote)
    {
      NotificationChain msgs = null;
      if (nameNote != null)
        msgs = ((InternalEObject)nameNote).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - OmtPackage.ATTRIBUTE__NAME_NOTE, null, msgs);
      if (newNameNote != null)
        msgs = ((InternalEObject)newNameNote).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - OmtPackage.ATTRIBUTE__NAME_NOTE, null, msgs);
      msgs = basicSetNameNote(newNameNote, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OmtPackage.ATTRIBUTE__NAME_NOTE, newNameNote, newNameNote));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DataType getDataType()
  {
    return dataType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDataType(DataType newDataType, NotificationChain msgs)
  {
    DataType oldDataType = dataType;
    dataType = newDataType;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, OmtPackage.ATTRIBUTE__DATA_TYPE, oldDataType, newDataType);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDataType(DataType newDataType)
  {
    if (newDataType != dataType)
    {
      NotificationChain msgs = null;
      if (dataType != null)
        msgs = ((InternalEObject)dataType).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - OmtPackage.ATTRIBUTE__DATA_TYPE, null, msgs);
      if (newDataType != null)
        msgs = ((InternalEObject)newDataType).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - OmtPackage.ATTRIBUTE__DATA_TYPE, null, msgs);
      msgs = basicSetDataType(newDataType, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OmtPackage.ATTRIBUTE__DATA_TYPE, newDataType, newDataType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Cardinality getCardinality()
  {
    return cardinality;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetCardinality(Cardinality newCardinality, NotificationChain msgs)
  {
    Cardinality oldCardinality = cardinality;
    cardinality = newCardinality;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, OmtPackage.ATTRIBUTE__CARDINALITY, oldCardinality, newCardinality);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setCardinality(Cardinality newCardinality)
  {
    if (newCardinality != cardinality)
    {
      NotificationChain msgs = null;
      if (cardinality != null)
        msgs = ((InternalEObject)cardinality).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - OmtPackage.ATTRIBUTE__CARDINALITY, null, msgs);
      if (newCardinality != null)
        msgs = ((InternalEObject)newCardinality).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - OmtPackage.ATTRIBUTE__CARDINALITY, null, msgs);
      msgs = basicSetCardinality(newCardinality, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OmtPackage.ATTRIBUTE__CARDINALITY, newCardinality, newCardinality));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Units getUnits()
  {
    return units;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetUnits(Units newUnits, NotificationChain msgs)
  {
    Units oldUnits = units;
    units = newUnits;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, OmtPackage.ATTRIBUTE__UNITS, oldUnits, newUnits);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setUnits(Units newUnits)
  {
    if (newUnits != units)
    {
      NotificationChain msgs = null;
      if (units != null)
        msgs = ((InternalEObject)units).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - OmtPackage.ATTRIBUTE__UNITS, null, msgs);
      if (newUnits != null)
        msgs = ((InternalEObject)newUnits).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - OmtPackage.ATTRIBUTE__UNITS, null, msgs);
      msgs = basicSetUnits(newUnits, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OmtPackage.ATTRIBUTE__UNITS, newUnits, newUnits));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Resolution getResolution()
  {
    return resolution;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetResolution(Resolution newResolution, NotificationChain msgs)
  {
    Resolution oldResolution = resolution;
    resolution = newResolution;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, OmtPackage.ATTRIBUTE__RESOLUTION, oldResolution, newResolution);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setResolution(Resolution newResolution)
  {
    if (newResolution != resolution)
    {
      NotificationChain msgs = null;
      if (resolution != null)
        msgs = ((InternalEObject)resolution).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - OmtPackage.ATTRIBUTE__RESOLUTION, null, msgs);
      if (newResolution != null)
        msgs = ((InternalEObject)newResolution).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - OmtPackage.ATTRIBUTE__RESOLUTION, null, msgs);
      msgs = basicSetResolution(newResolution, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OmtPackage.ATTRIBUTE__RESOLUTION, newResolution, newResolution));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Accuracy getAccuracy()
  {
    return accuracy;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetAccuracy(Accuracy newAccuracy, NotificationChain msgs)
  {
    Accuracy oldAccuracy = accuracy;
    accuracy = newAccuracy;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, OmtPackage.ATTRIBUTE__ACCURACY, oldAccuracy, newAccuracy);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setAccuracy(Accuracy newAccuracy)
  {
    if (newAccuracy != accuracy)
    {
      NotificationChain msgs = null;
      if (accuracy != null)
        msgs = ((InternalEObject)accuracy).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - OmtPackage.ATTRIBUTE__ACCURACY, null, msgs);
      if (newAccuracy != null)
        msgs = ((InternalEObject)newAccuracy).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - OmtPackage.ATTRIBUTE__ACCURACY, null, msgs);
      msgs = basicSetAccuracy(newAccuracy, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OmtPackage.ATTRIBUTE__ACCURACY, newAccuracy, newAccuracy));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AccuracyCondition getAccuracyCondition()
  {
    return accuracyCondition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetAccuracyCondition(AccuracyCondition newAccuracyCondition, NotificationChain msgs)
  {
    AccuracyCondition oldAccuracyCondition = accuracyCondition;
    accuracyCondition = newAccuracyCondition;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, OmtPackage.ATTRIBUTE__ACCURACY_CONDITION, oldAccuracyCondition, newAccuracyCondition);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setAccuracyCondition(AccuracyCondition newAccuracyCondition)
  {
    if (newAccuracyCondition != accuracyCondition)
    {
      NotificationChain msgs = null;
      if (accuracyCondition != null)
        msgs = ((InternalEObject)accuracyCondition).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - OmtPackage.ATTRIBUTE__ACCURACY_CONDITION, null, msgs);
      if (newAccuracyCondition != null)
        msgs = ((InternalEObject)newAccuracyCondition).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - OmtPackage.ATTRIBUTE__ACCURACY_CONDITION, null, msgs);
      msgs = basicSetAccuracyCondition(newAccuracyCondition, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OmtPackage.ATTRIBUTE__ACCURACY_CONDITION, newAccuracyCondition, newAccuracyCondition));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getUpdateType()
  {
    return updateType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setUpdateType(String newUpdateType)
  {
    String oldUpdateType = updateType;
    updateType = newUpdateType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OmtPackage.ATTRIBUTE__UPDATE_TYPE, oldUpdateType, updateType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NoteRef getUpdateTypeNote()
  {
    return updateTypeNote;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetUpdateTypeNote(NoteRef newUpdateTypeNote, NotificationChain msgs)
  {
    NoteRef oldUpdateTypeNote = updateTypeNote;
    updateTypeNote = newUpdateTypeNote;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, OmtPackage.ATTRIBUTE__UPDATE_TYPE_NOTE, oldUpdateTypeNote, newUpdateTypeNote);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setUpdateTypeNote(NoteRef newUpdateTypeNote)
  {
    if (newUpdateTypeNote != updateTypeNote)
    {
      NotificationChain msgs = null;
      if (updateTypeNote != null)
        msgs = ((InternalEObject)updateTypeNote).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - OmtPackage.ATTRIBUTE__UPDATE_TYPE_NOTE, null, msgs);
      if (newUpdateTypeNote != null)
        msgs = ((InternalEObject)newUpdateTypeNote).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - OmtPackage.ATTRIBUTE__UPDATE_TYPE_NOTE, null, msgs);
      msgs = basicSetUpdateTypeNote(newUpdateTypeNote, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OmtPackage.ATTRIBUTE__UPDATE_TYPE_NOTE, newUpdateTypeNote, newUpdateTypeNote));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getUpdateCondition()
  {
    return updateCondition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setUpdateCondition(String newUpdateCondition)
  {
    String oldUpdateCondition = updateCondition;
    updateCondition = newUpdateCondition;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OmtPackage.ATTRIBUTE__UPDATE_CONDITION, oldUpdateCondition, updateCondition));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NoteRef getUpdateConditionNote()
  {
    return updateConditionNote;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetUpdateConditionNote(NoteRef newUpdateConditionNote, NotificationChain msgs)
  {
    NoteRef oldUpdateConditionNote = updateConditionNote;
    updateConditionNote = newUpdateConditionNote;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, OmtPackage.ATTRIBUTE__UPDATE_CONDITION_NOTE, oldUpdateConditionNote, newUpdateConditionNote);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setUpdateConditionNote(NoteRef newUpdateConditionNote)
  {
    if (newUpdateConditionNote != updateConditionNote)
    {
      NotificationChain msgs = null;
      if (updateConditionNote != null)
        msgs = ((InternalEObject)updateConditionNote).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - OmtPackage.ATTRIBUTE__UPDATE_CONDITION_NOTE, null, msgs);
      if (newUpdateConditionNote != null)
        msgs = ((InternalEObject)newUpdateConditionNote).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - OmtPackage.ATTRIBUTE__UPDATE_CONDITION_NOTE, null, msgs);
      msgs = basicSetUpdateConditionNote(newUpdateConditionNote, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OmtPackage.ATTRIBUTE__UPDATE_CONDITION_NOTE, newUpdateConditionNote, newUpdateConditionNote));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getTransferAccept()
  {
    return transferAccept;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setTransferAccept(String newTransferAccept)
  {
    String oldTransferAccept = transferAccept;
    transferAccept = newTransferAccept;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OmtPackage.ATTRIBUTE__TRANSFER_ACCEPT, oldTransferAccept, transferAccept));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NoteRef getTransferAcceptNote()
  {
    return transferAcceptNote;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetTransferAcceptNote(NoteRef newTransferAcceptNote, NotificationChain msgs)
  {
    NoteRef oldTransferAcceptNote = transferAcceptNote;
    transferAcceptNote = newTransferAcceptNote;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, OmtPackage.ATTRIBUTE__TRANSFER_ACCEPT_NOTE, oldTransferAcceptNote, newTransferAcceptNote);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setTransferAcceptNote(NoteRef newTransferAcceptNote)
  {
    if (newTransferAcceptNote != transferAcceptNote)
    {
      NotificationChain msgs = null;
      if (transferAcceptNote != null)
        msgs = ((InternalEObject)transferAcceptNote).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - OmtPackage.ATTRIBUTE__TRANSFER_ACCEPT_NOTE, null, msgs);
      if (newTransferAcceptNote != null)
        msgs = ((InternalEObject)newTransferAcceptNote).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - OmtPackage.ATTRIBUTE__TRANSFER_ACCEPT_NOTE, null, msgs);
      msgs = basicSetTransferAcceptNote(newTransferAcceptNote, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OmtPackage.ATTRIBUTE__TRANSFER_ACCEPT_NOTE, newTransferAcceptNote, newTransferAcceptNote));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getUpdateReflect()
  {
    return updateReflect;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setUpdateReflect(String newUpdateReflect)
  {
    String oldUpdateReflect = updateReflect;
    updateReflect = newUpdateReflect;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OmtPackage.ATTRIBUTE__UPDATE_REFLECT, oldUpdateReflect, updateReflect));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NoteRef getUpdateReflectNote()
  {
    return updateReflectNote;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetUpdateReflectNote(NoteRef newUpdateReflectNote, NotificationChain msgs)
  {
    NoteRef oldUpdateReflectNote = updateReflectNote;
    updateReflectNote = newUpdateReflectNote;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, OmtPackage.ATTRIBUTE__UPDATE_REFLECT_NOTE, oldUpdateReflectNote, newUpdateReflectNote);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setUpdateReflectNote(NoteRef newUpdateReflectNote)
  {
    if (newUpdateReflectNote != updateReflectNote)
    {
      NotificationChain msgs = null;
      if (updateReflectNote != null)
        msgs = ((InternalEObject)updateReflectNote).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - OmtPackage.ATTRIBUTE__UPDATE_REFLECT_NOTE, null, msgs);
      if (newUpdateReflectNote != null)
        msgs = ((InternalEObject)newUpdateReflectNote).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - OmtPackage.ATTRIBUTE__UPDATE_REFLECT_NOTE, null, msgs);
      msgs = basicSetUpdateReflectNote(newUpdateReflectNote, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OmtPackage.ATTRIBUTE__UPDATE_REFLECT_NOTE, newUpdateReflectNote, newUpdateReflectNote));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Description getDescription()
  {
    return description;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDescription(Description newDescription, NotificationChain msgs)
  {
    Description oldDescription = description;
    description = newDescription;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, OmtPackage.ATTRIBUTE__DESCRIPTION, oldDescription, newDescription);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDescription(Description newDescription)
  {
    if (newDescription != description)
    {
      NotificationChain msgs = null;
      if (description != null)
        msgs = ((InternalEObject)description).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - OmtPackage.ATTRIBUTE__DESCRIPTION, null, msgs);
      if (newDescription != null)
        msgs = ((InternalEObject)newDescription).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - OmtPackage.ATTRIBUTE__DESCRIPTION, null, msgs);
      msgs = basicSetDescription(newDescription, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OmtPackage.ATTRIBUTE__DESCRIPTION, newDescription, newDescription));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getRoutingSpace()
  {
    return routingSpace;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setRoutingSpace(String newRoutingSpace)
  {
    String oldRoutingSpace = routingSpace;
    routingSpace = newRoutingSpace;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OmtPackage.ATTRIBUTE__ROUTING_SPACE, oldRoutingSpace, routingSpace));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case OmtPackage.ATTRIBUTE__NAME_NOTE:
        return basicSetNameNote(null, msgs);
      case OmtPackage.ATTRIBUTE__DATA_TYPE:
        return basicSetDataType(null, msgs);
      case OmtPackage.ATTRIBUTE__CARDINALITY:
        return basicSetCardinality(null, msgs);
      case OmtPackage.ATTRIBUTE__UNITS:
        return basicSetUnits(null, msgs);
      case OmtPackage.ATTRIBUTE__RESOLUTION:
        return basicSetResolution(null, msgs);
      case OmtPackage.ATTRIBUTE__ACCURACY:
        return basicSetAccuracy(null, msgs);
      case OmtPackage.ATTRIBUTE__ACCURACY_CONDITION:
        return basicSetAccuracyCondition(null, msgs);
      case OmtPackage.ATTRIBUTE__UPDATE_TYPE_NOTE:
        return basicSetUpdateTypeNote(null, msgs);
      case OmtPackage.ATTRIBUTE__UPDATE_CONDITION_NOTE:
        return basicSetUpdateConditionNote(null, msgs);
      case OmtPackage.ATTRIBUTE__TRANSFER_ACCEPT_NOTE:
        return basicSetTransferAcceptNote(null, msgs);
      case OmtPackage.ATTRIBUTE__UPDATE_REFLECT_NOTE:
        return basicSetUpdateReflectNote(null, msgs);
      case OmtPackage.ATTRIBUTE__DESCRIPTION:
        return basicSetDescription(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case OmtPackage.ATTRIBUTE__NAME:
        return getName();
      case OmtPackage.ATTRIBUTE__NAME_NOTE:
        return getNameNote();
      case OmtPackage.ATTRIBUTE__DATA_TYPE:
        return getDataType();
      case OmtPackage.ATTRIBUTE__CARDINALITY:
        return getCardinality();
      case OmtPackage.ATTRIBUTE__UNITS:
        return getUnits();
      case OmtPackage.ATTRIBUTE__RESOLUTION:
        return getResolution();
      case OmtPackage.ATTRIBUTE__ACCURACY:
        return getAccuracy();
      case OmtPackage.ATTRIBUTE__ACCURACY_CONDITION:
        return getAccuracyCondition();
      case OmtPackage.ATTRIBUTE__UPDATE_TYPE:
        return getUpdateType();
      case OmtPackage.ATTRIBUTE__UPDATE_TYPE_NOTE:
        return getUpdateTypeNote();
      case OmtPackage.ATTRIBUTE__UPDATE_CONDITION:
        return getUpdateCondition();
      case OmtPackage.ATTRIBUTE__UPDATE_CONDITION_NOTE:
        return getUpdateConditionNote();
      case OmtPackage.ATTRIBUTE__TRANSFER_ACCEPT:
        return getTransferAccept();
      case OmtPackage.ATTRIBUTE__TRANSFER_ACCEPT_NOTE:
        return getTransferAcceptNote();
      case OmtPackage.ATTRIBUTE__UPDATE_REFLECT:
        return getUpdateReflect();
      case OmtPackage.ATTRIBUTE__UPDATE_REFLECT_NOTE:
        return getUpdateReflectNote();
      case OmtPackage.ATTRIBUTE__DESCRIPTION:
        return getDescription();
      case OmtPackage.ATTRIBUTE__ROUTING_SPACE:
        return getRoutingSpace();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case OmtPackage.ATTRIBUTE__NAME:
        setName((String)newValue);
        return;
      case OmtPackage.ATTRIBUTE__NAME_NOTE:
        setNameNote((NoteRef)newValue);
        return;
      case OmtPackage.ATTRIBUTE__DATA_TYPE:
        setDataType((DataType)newValue);
        return;
      case OmtPackage.ATTRIBUTE__CARDINALITY:
        setCardinality((Cardinality)newValue);
        return;
      case OmtPackage.ATTRIBUTE__UNITS:
        setUnits((Units)newValue);
        return;
      case OmtPackage.ATTRIBUTE__RESOLUTION:
        setResolution((Resolution)newValue);
        return;
      case OmtPackage.ATTRIBUTE__ACCURACY:
        setAccuracy((Accuracy)newValue);
        return;
      case OmtPackage.ATTRIBUTE__ACCURACY_CONDITION:
        setAccuracyCondition((AccuracyCondition)newValue);
        return;
      case OmtPackage.ATTRIBUTE__UPDATE_TYPE:
        setUpdateType((String)newValue);
        return;
      case OmtPackage.ATTRIBUTE__UPDATE_TYPE_NOTE:
        setUpdateTypeNote((NoteRef)newValue);
        return;
      case OmtPackage.ATTRIBUTE__UPDATE_CONDITION:
        setUpdateCondition((String)newValue);
        return;
      case OmtPackage.ATTRIBUTE__UPDATE_CONDITION_NOTE:
        setUpdateConditionNote((NoteRef)newValue);
        return;
      case OmtPackage.ATTRIBUTE__TRANSFER_ACCEPT:
        setTransferAccept((String)newValue);
        return;
      case OmtPackage.ATTRIBUTE__TRANSFER_ACCEPT_NOTE:
        setTransferAcceptNote((NoteRef)newValue);
        return;
      case OmtPackage.ATTRIBUTE__UPDATE_REFLECT:
        setUpdateReflect((String)newValue);
        return;
      case OmtPackage.ATTRIBUTE__UPDATE_REFLECT_NOTE:
        setUpdateReflectNote((NoteRef)newValue);
        return;
      case OmtPackage.ATTRIBUTE__DESCRIPTION:
        setDescription((Description)newValue);
        return;
      case OmtPackage.ATTRIBUTE__ROUTING_SPACE:
        setRoutingSpace((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case OmtPackage.ATTRIBUTE__NAME:
        setName(NAME_EDEFAULT);
        return;
      case OmtPackage.ATTRIBUTE__NAME_NOTE:
        setNameNote((NoteRef)null);
        return;
      case OmtPackage.ATTRIBUTE__DATA_TYPE:
        setDataType((DataType)null);
        return;
      case OmtPackage.ATTRIBUTE__CARDINALITY:
        setCardinality((Cardinality)null);
        return;
      case OmtPackage.ATTRIBUTE__UNITS:
        setUnits((Units)null);
        return;
      case OmtPackage.ATTRIBUTE__RESOLUTION:
        setResolution((Resolution)null);
        return;
      case OmtPackage.ATTRIBUTE__ACCURACY:
        setAccuracy((Accuracy)null);
        return;
      case OmtPackage.ATTRIBUTE__ACCURACY_CONDITION:
        setAccuracyCondition((AccuracyCondition)null);
        return;
      case OmtPackage.ATTRIBUTE__UPDATE_TYPE:
        setUpdateType(UPDATE_TYPE_EDEFAULT);
        return;
      case OmtPackage.ATTRIBUTE__UPDATE_TYPE_NOTE:
        setUpdateTypeNote((NoteRef)null);
        return;
      case OmtPackage.ATTRIBUTE__UPDATE_CONDITION:
        setUpdateCondition(UPDATE_CONDITION_EDEFAULT);
        return;
      case OmtPackage.ATTRIBUTE__UPDATE_CONDITION_NOTE:
        setUpdateConditionNote((NoteRef)null);
        return;
      case OmtPackage.ATTRIBUTE__TRANSFER_ACCEPT:
        setTransferAccept(TRANSFER_ACCEPT_EDEFAULT);
        return;
      case OmtPackage.ATTRIBUTE__TRANSFER_ACCEPT_NOTE:
        setTransferAcceptNote((NoteRef)null);
        return;
      case OmtPackage.ATTRIBUTE__UPDATE_REFLECT:
        setUpdateReflect(UPDATE_REFLECT_EDEFAULT);
        return;
      case OmtPackage.ATTRIBUTE__UPDATE_REFLECT_NOTE:
        setUpdateReflectNote((NoteRef)null);
        return;
      case OmtPackage.ATTRIBUTE__DESCRIPTION:
        setDescription((Description)null);
        return;
      case OmtPackage.ATTRIBUTE__ROUTING_SPACE:
        setRoutingSpace(ROUTING_SPACE_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case OmtPackage.ATTRIBUTE__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case OmtPackage.ATTRIBUTE__NAME_NOTE:
        return nameNote != null;
      case OmtPackage.ATTRIBUTE__DATA_TYPE:
        return dataType != null;
      case OmtPackage.ATTRIBUTE__CARDINALITY:
        return cardinality != null;
      case OmtPackage.ATTRIBUTE__UNITS:
        return units != null;
      case OmtPackage.ATTRIBUTE__RESOLUTION:
        return resolution != null;
      case OmtPackage.ATTRIBUTE__ACCURACY:
        return accuracy != null;
      case OmtPackage.ATTRIBUTE__ACCURACY_CONDITION:
        return accuracyCondition != null;
      case OmtPackage.ATTRIBUTE__UPDATE_TYPE:
        return UPDATE_TYPE_EDEFAULT == null ? updateType != null : !UPDATE_TYPE_EDEFAULT.equals(updateType);
      case OmtPackage.ATTRIBUTE__UPDATE_TYPE_NOTE:
        return updateTypeNote != null;
      case OmtPackage.ATTRIBUTE__UPDATE_CONDITION:
        return UPDATE_CONDITION_EDEFAULT == null ? updateCondition != null : !UPDATE_CONDITION_EDEFAULT.equals(updateCondition);
      case OmtPackage.ATTRIBUTE__UPDATE_CONDITION_NOTE:
        return updateConditionNote != null;
      case OmtPackage.ATTRIBUTE__TRANSFER_ACCEPT:
        return TRANSFER_ACCEPT_EDEFAULT == null ? transferAccept != null : !TRANSFER_ACCEPT_EDEFAULT.equals(transferAccept);
      case OmtPackage.ATTRIBUTE__TRANSFER_ACCEPT_NOTE:
        return transferAcceptNote != null;
      case OmtPackage.ATTRIBUTE__UPDATE_REFLECT:
        return UPDATE_REFLECT_EDEFAULT == null ? updateReflect != null : !UPDATE_REFLECT_EDEFAULT.equals(updateReflect);
      case OmtPackage.ATTRIBUTE__UPDATE_REFLECT_NOTE:
        return updateReflectNote != null;
      case OmtPackage.ATTRIBUTE__DESCRIPTION:
        return description != null;
      case OmtPackage.ATTRIBUTE__ROUTING_SPACE:
        return ROUTING_SPACE_EDEFAULT == null ? routingSpace != null : !ROUTING_SPACE_EDEFAULT.equals(routingSpace);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", updateType: ");
    result.append(updateType);
    result.append(", updateCondition: ");
    result.append(updateCondition);
    result.append(", transferAccept: ");
    result.append(transferAccept);
    result.append(", updateReflect: ");
    result.append(updateReflect);
    result.append(", routingSpace: ");
    result.append(routingSpace);
    result.append(')');
    return result.toString();
  }

} //AttributeImpl
