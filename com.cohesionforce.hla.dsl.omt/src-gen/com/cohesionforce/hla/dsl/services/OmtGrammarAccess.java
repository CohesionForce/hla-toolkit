/*
 * generated by Xtext 2.12.0
 */
package com.cohesionforce.hla.dsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class OmtGrammarAccess extends AbstractGrammarElementFinder {
	
	public class HLAOMT_DIF_v1_3Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.cohesionforce.hla.dsl.Omt.HLAOMT_DIF_v1_3");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOPENTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cDIFKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameAnyTextParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Assignment cVersionAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cVersionAnyTextParserRuleCall_3_0 = (RuleCall)cVersionAssignment_3.eContents().get(0);
		private final RuleCall cOPENTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final Keyword cTYPEKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cTypeAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cTypeAnyTextParserRuleCall_6_0 = (RuleCall)cTypeAssignment_6.eContents().get(0);
		private final RuleCall cCLOSETerminalRuleCall_7 = (RuleCall)cGroup.eContents().get(7);
		private final RuleCall cCLOSETerminalRuleCall_8 = (RuleCall)cGroup.eContents().get(8);
		private final Assignment cObjectModelsAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cObjectModelsObjectModelParserRuleCall_9_0 = (RuleCall)cObjectModelsAssignment_9.eContents().get(0);
		
		//HLAOMT_DIF_v1_3:
		//	OPEN 'DIF'
		//	name=AnyText version=AnyText
		//	OPEN 'TYPE' type=AnyText CLOSE
		//	CLOSE
		//	objectModels+=ObjectModel+;
		@Override public ParserRule getRule() { return rule; }
		
		//OPEN 'DIF' name=AnyText version=AnyText OPEN 'TYPE' type=AnyText CLOSE CLOSE objectModels+=ObjectModel+
		public Group getGroup() { return cGroup; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_0() { return cOPENTerminalRuleCall_0; }
		
		//'DIF'
		public Keyword getDIFKeyword_1() { return cDIFKeyword_1; }
		
		//name=AnyText
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//AnyText
		public RuleCall getNameAnyTextParserRuleCall_2_0() { return cNameAnyTextParserRuleCall_2_0; }
		
		//version=AnyText
		public Assignment getVersionAssignment_3() { return cVersionAssignment_3; }
		
		//AnyText
		public RuleCall getVersionAnyTextParserRuleCall_3_0() { return cVersionAnyTextParserRuleCall_3_0; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_4() { return cOPENTerminalRuleCall_4; }
		
		//'TYPE'
		public Keyword getTYPEKeyword_5() { return cTYPEKeyword_5; }
		
		//type=AnyText
		public Assignment getTypeAssignment_6() { return cTypeAssignment_6; }
		
		//AnyText
		public RuleCall getTypeAnyTextParserRuleCall_6_0() { return cTypeAnyTextParserRuleCall_6_0; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_7() { return cCLOSETerminalRuleCall_7; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_8() { return cCLOSETerminalRuleCall_8; }
		
		//objectModels+=ObjectModel+
		public Assignment getObjectModelsAssignment_9() { return cObjectModelsAssignment_9; }
		
		//ObjectModel
		public RuleCall getObjectModelsObjectModelParserRuleCall_9_0() { return cObjectModelsObjectModelParserRuleCall_9_0; }
	}
	public class ObjectModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.cohesionforce.hla.dsl.Omt.ObjectModel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOPENTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cObjectModelKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final RuleCall cOPENTerminalRuleCall_2_0 = (RuleCall)cGroup_2.eContents().get(0);
		private final Keyword cNameKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cNameAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_2_2_0 = (RuleCall)cNameAssignment_2_2.eContents().get(0);
		private final RuleCall cCLOSETerminalRuleCall_2_3 = (RuleCall)cGroup_2.eContents().get(3);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final RuleCall cOPENTerminalRuleCall_3_0 = (RuleCall)cGroup_3.eContents().get(0);
		private final Keyword cVersionNumberKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cVersionAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cVersionSTRINGTerminalRuleCall_3_2_0 = (RuleCall)cVersionAssignment_3_2.eContents().get(0);
		private final RuleCall cCLOSETerminalRuleCall_3_3 = (RuleCall)cGroup_3.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final RuleCall cOPENTerminalRuleCall_4_0 = (RuleCall)cGroup_4.eContents().get(0);
		private final Keyword cTypeKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cTypeAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cTypeMOD_TypeParserRuleCall_4_2_0 = (RuleCall)cTypeAssignment_4_2.eContents().get(0);
		private final RuleCall cCLOSETerminalRuleCall_4_3 = (RuleCall)cGroup_4.eContents().get(3);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final RuleCall cOPENTerminalRuleCall_5_0 = (RuleCall)cGroup_5.eContents().get(0);
		private final Keyword cPurposeKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cPurposeAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cPurposeSTRINGTerminalRuleCall_5_2_0 = (RuleCall)cPurposeAssignment_5_2.eContents().get(0);
		private final RuleCall cCLOSETerminalRuleCall_5_3 = (RuleCall)cGroup_5.eContents().get(3);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final RuleCall cOPENTerminalRuleCall_6_0 = (RuleCall)cGroup_6.eContents().get(0);
		private final Keyword cApplicationDomainKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cDomainAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cDomainSTRINGTerminalRuleCall_6_2_0 = (RuleCall)cDomainAssignment_6_2.eContents().get(0);
		private final RuleCall cCLOSETerminalRuleCall_6_3 = (RuleCall)cGroup_6.eContents().get(3);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final RuleCall cOPENTerminalRuleCall_7_0 = (RuleCall)cGroup_7.eContents().get(0);
		private final Keyword cSponsorOrgNameKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Assignment cSponsorAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cSponsorSTRINGTerminalRuleCall_7_2_0 = (RuleCall)cSponsorAssignment_7_2.eContents().get(0);
		private final RuleCall cCLOSETerminalRuleCall_7_3 = (RuleCall)cGroup_7.eContents().get(3);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final RuleCall cOPENTerminalRuleCall_8_0 = (RuleCall)cGroup_8.eContents().get(0);
		private final Keyword cPOCHonorificNameKeyword_8_1 = (Keyword)cGroup_8.eContents().get(1);
		private final Assignment cPocHonorificAssignment_8_2 = (Assignment)cGroup_8.eContents().get(2);
		private final RuleCall cPocHonorificSTRINGTerminalRuleCall_8_2_0 = (RuleCall)cPocHonorificAssignment_8_2.eContents().get(0);
		private final RuleCall cCLOSETerminalRuleCall_8_3 = (RuleCall)cGroup_8.eContents().get(3);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final RuleCall cOPENTerminalRuleCall_9_0 = (RuleCall)cGroup_9.eContents().get(0);
		private final Keyword cPOCFirstNameKeyword_9_1 = (Keyword)cGroup_9.eContents().get(1);
		private final Assignment cPocFirstNameAssignment_9_2 = (Assignment)cGroup_9.eContents().get(2);
		private final RuleCall cPocFirstNameSTRINGTerminalRuleCall_9_2_0 = (RuleCall)cPocFirstNameAssignment_9_2.eContents().get(0);
		private final RuleCall cCLOSETerminalRuleCall_9_3 = (RuleCall)cGroup_9.eContents().get(3);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final RuleCall cOPENTerminalRuleCall_10_0 = (RuleCall)cGroup_10.eContents().get(0);
		private final Keyword cPOCLastNameKeyword_10_1 = (Keyword)cGroup_10.eContents().get(1);
		private final Assignment cPocLastNameAssignment_10_2 = (Assignment)cGroup_10.eContents().get(2);
		private final RuleCall cPocLastNameSTRINGTerminalRuleCall_10_2_0 = (RuleCall)cPocLastNameAssignment_10_2.eContents().get(0);
		private final RuleCall cCLOSETerminalRuleCall_10_3 = (RuleCall)cGroup_10.eContents().get(3);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final RuleCall cOPENTerminalRuleCall_11_0 = (RuleCall)cGroup_11.eContents().get(0);
		private final Keyword cPOCOrgNameKeyword_11_1 = (Keyword)cGroup_11.eContents().get(1);
		private final Assignment cPocOrgNameAssignment_11_2 = (Assignment)cGroup_11.eContents().get(2);
		private final RuleCall cPocOrgNameSTRINGTerminalRuleCall_11_2_0 = (RuleCall)cPocOrgNameAssignment_11_2.eContents().get(0);
		private final RuleCall cCLOSETerminalRuleCall_11_3 = (RuleCall)cGroup_11.eContents().get(3);
		private final Group cGroup_12 = (Group)cGroup.eContents().get(12);
		private final RuleCall cOPENTerminalRuleCall_12_0 = (RuleCall)cGroup_12.eContents().get(0);
		private final Keyword cPOCPhoneKeyword_12_1 = (Keyword)cGroup_12.eContents().get(1);
		private final Assignment cPocPhoneAssignment_12_2 = (Assignment)cGroup_12.eContents().get(2);
		private final RuleCall cPocPhoneSTRINGTerminalRuleCall_12_2_0 = (RuleCall)cPocPhoneAssignment_12_2.eContents().get(0);
		private final RuleCall cCLOSETerminalRuleCall_12_3 = (RuleCall)cGroup_12.eContents().get(3);
		private final Group cGroup_13 = (Group)cGroup.eContents().get(13);
		private final RuleCall cOPENTerminalRuleCall_13_0 = (RuleCall)cGroup_13.eContents().get(0);
		private final Keyword cPOCEmailKeyword_13_1 = (Keyword)cGroup_13.eContents().get(1);
		private final Assignment cPocEmailAssignment_13_2 = (Assignment)cGroup_13.eContents().get(2);
		private final RuleCall cPocEmailSTRINGTerminalRuleCall_13_2_0 = (RuleCall)cPocEmailAssignment_13_2.eContents().get(0);
		private final RuleCall cCLOSETerminalRuleCall_13_3 = (RuleCall)cGroup_13.eContents().get(3);
		private final Group cGroup_14 = (Group)cGroup.eContents().get(14);
		private final RuleCall cOPENTerminalRuleCall_14_0 = (RuleCall)cGroup_14.eContents().get(0);
		private final Keyword cModificationDateKeyword_14_1 = (Keyword)cGroup_14.eContents().get(1);
		private final Assignment cModificationDateAssignment_14_2 = (Assignment)cGroup_14.eContents().get(2);
		private final RuleCall cModificationDateTEXTTerminalRuleCall_14_2_0 = (RuleCall)cModificationDateAssignment_14_2.eContents().get(0);
		private final RuleCall cCLOSETerminalRuleCall_14_3 = (RuleCall)cGroup_14.eContents().get(3);
		private final Group cGroup_15 = (Group)cGroup.eContents().get(15);
		private final RuleCall cOPENTerminalRuleCall_15_0 = (RuleCall)cGroup_15.eContents().get(0);
		private final Keyword cMOMVersionKeyword_15_1 = (Keyword)cGroup_15.eContents().get(1);
		private final Assignment cMomVersionAssignment_15_2 = (Assignment)cGroup_15.eContents().get(2);
		private final RuleCall cMomVersionSTRINGTerminalRuleCall_15_2_0 = (RuleCall)cMomVersionAssignment_15_2.eContents().get(0);
		private final RuleCall cCLOSETerminalRuleCall_15_3 = (RuleCall)cGroup_15.eContents().get(3);
		private final Assignment cTimeRepresentationAssignment_16 = (Assignment)cGroup.eContents().get(16);
		private final RuleCall cTimeRepresentationTimeRepresentationParserRuleCall_16_0 = (RuleCall)cTimeRepresentationAssignment_16.eContents().get(0);
		private final Assignment cLookAheadAssignment_17 = (Assignment)cGroup.eContents().get(17);
		private final RuleCall cLookAheadLookaheadParserRuleCall_17_0 = (RuleCall)cLookAheadAssignment_17.eContents().get(0);
		private final Assignment cOmtComponentsAssignment_18 = (Assignment)cGroup.eContents().get(18);
		private final RuleCall cOmtComponentsOMTComponentParserRuleCall_18_0 = (RuleCall)cOmtComponentsAssignment_18.eContents().get(0);
		private final RuleCall cCLOSETerminalRuleCall_19 = (RuleCall)cGroup.eContents().get(19);
		
		//ObjectModel:
		//	OPEN 'ObjectModel' (OPEN 'Name' name=STRING CLOSE) (OPEN 'VersionNumber' version=STRING CLOSE) (OPEN 'Type'
		//	type=MOD_Type CLOSE)? (OPEN 'Purpose' purpose=STRING CLOSE)? (OPEN 'ApplicationDomain' domain=STRING CLOSE)? (OPEN
		//	'SponsorOrgName' sponsor=STRING CLOSE)? (OPEN 'POCHonorificName' pocHonorific=STRING CLOSE)? (OPEN 'POCFirstName'
		//	pocFirstName=STRING CLOSE)? (OPEN 'POCLastName' pocLastName=STRING CLOSE)? (OPEN 'POCOrgName' pocOrgName=STRING
		//	CLOSE)? (OPEN 'POCPhone' pocPhone=STRING CLOSE)? (OPEN 'POCEmail' pocEmail=STRING CLOSE)? (OPEN 'ModificationDate'
		//	modificationDate=TEXT CLOSE)? (OPEN 'MOMVersion' momVersion=STRING CLOSE)?
		//	timeRepresentation=TimeRepresentation?
		//	lookAhead=Lookahead?
		//	omtComponents+=OMTComponent*
		//	CLOSE;
		@Override public ParserRule getRule() { return rule; }
		
		//OPEN 'ObjectModel' (OPEN 'Name' name=STRING CLOSE) (OPEN 'VersionNumber' version=STRING CLOSE) (OPEN 'Type'
		//type=MOD_Type CLOSE)? (OPEN 'Purpose' purpose=STRING CLOSE)? (OPEN 'ApplicationDomain' domain=STRING CLOSE)? (OPEN
		//'SponsorOrgName' sponsor=STRING CLOSE)? (OPEN 'POCHonorificName' pocHonorific=STRING CLOSE)? (OPEN 'POCFirstName'
		//pocFirstName=STRING CLOSE)? (OPEN 'POCLastName' pocLastName=STRING CLOSE)? (OPEN 'POCOrgName' pocOrgName=STRING CLOSE)?
		//(OPEN 'POCPhone' pocPhone=STRING CLOSE)? (OPEN 'POCEmail' pocEmail=STRING CLOSE)? (OPEN 'ModificationDate'
		//modificationDate=TEXT CLOSE)? (OPEN 'MOMVersion' momVersion=STRING CLOSE)? timeRepresentation=TimeRepresentation?
		//lookAhead=Lookahead? omtComponents+=OMTComponent* CLOSE
		public Group getGroup() { return cGroup; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_0() { return cOPENTerminalRuleCall_0; }
		
		//'ObjectModel'
		public Keyword getObjectModelKeyword_1() { return cObjectModelKeyword_1; }
		
		//OPEN 'Name' name=STRING CLOSE
		public Group getGroup_2() { return cGroup_2; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_2_0() { return cOPENTerminalRuleCall_2_0; }
		
		//'Name'
		public Keyword getNameKeyword_2_1() { return cNameKeyword_2_1; }
		
		//name=STRING
		public Assignment getNameAssignment_2_2() { return cNameAssignment_2_2; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_2_2_0() { return cNameSTRINGTerminalRuleCall_2_2_0; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_2_3() { return cCLOSETerminalRuleCall_2_3; }
		
		//OPEN 'VersionNumber' version=STRING CLOSE
		public Group getGroup_3() { return cGroup_3; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_3_0() { return cOPENTerminalRuleCall_3_0; }
		
		//'VersionNumber'
		public Keyword getVersionNumberKeyword_3_1() { return cVersionNumberKeyword_3_1; }
		
		//version=STRING
		public Assignment getVersionAssignment_3_2() { return cVersionAssignment_3_2; }
		
		//STRING
		public RuleCall getVersionSTRINGTerminalRuleCall_3_2_0() { return cVersionSTRINGTerminalRuleCall_3_2_0; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_3_3() { return cCLOSETerminalRuleCall_3_3; }
		
		//(OPEN 'Type' type=MOD_Type CLOSE)?
		public Group getGroup_4() { return cGroup_4; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_4_0() { return cOPENTerminalRuleCall_4_0; }
		
		//'Type'
		public Keyword getTypeKeyword_4_1() { return cTypeKeyword_4_1; }
		
		//type=MOD_Type
		public Assignment getTypeAssignment_4_2() { return cTypeAssignment_4_2; }
		
		//MOD_Type
		public RuleCall getTypeMOD_TypeParserRuleCall_4_2_0() { return cTypeMOD_TypeParserRuleCall_4_2_0; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_4_3() { return cCLOSETerminalRuleCall_4_3; }
		
		//(OPEN 'Purpose' purpose=STRING CLOSE)?
		public Group getGroup_5() { return cGroup_5; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_5_0() { return cOPENTerminalRuleCall_5_0; }
		
		//'Purpose'
		public Keyword getPurposeKeyword_5_1() { return cPurposeKeyword_5_1; }
		
		//purpose=STRING
		public Assignment getPurposeAssignment_5_2() { return cPurposeAssignment_5_2; }
		
		//STRING
		public RuleCall getPurposeSTRINGTerminalRuleCall_5_2_0() { return cPurposeSTRINGTerminalRuleCall_5_2_0; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_5_3() { return cCLOSETerminalRuleCall_5_3; }
		
		//(OPEN 'ApplicationDomain' domain=STRING CLOSE)?
		public Group getGroup_6() { return cGroup_6; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_6_0() { return cOPENTerminalRuleCall_6_0; }
		
		//'ApplicationDomain'
		public Keyword getApplicationDomainKeyword_6_1() { return cApplicationDomainKeyword_6_1; }
		
		//domain=STRING
		public Assignment getDomainAssignment_6_2() { return cDomainAssignment_6_2; }
		
		//STRING
		public RuleCall getDomainSTRINGTerminalRuleCall_6_2_0() { return cDomainSTRINGTerminalRuleCall_6_2_0; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_6_3() { return cCLOSETerminalRuleCall_6_3; }
		
		//(OPEN 'SponsorOrgName' sponsor=STRING CLOSE)?
		public Group getGroup_7() { return cGroup_7; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_7_0() { return cOPENTerminalRuleCall_7_0; }
		
		//'SponsorOrgName'
		public Keyword getSponsorOrgNameKeyword_7_1() { return cSponsorOrgNameKeyword_7_1; }
		
		//sponsor=STRING
		public Assignment getSponsorAssignment_7_2() { return cSponsorAssignment_7_2; }
		
		//STRING
		public RuleCall getSponsorSTRINGTerminalRuleCall_7_2_0() { return cSponsorSTRINGTerminalRuleCall_7_2_0; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_7_3() { return cCLOSETerminalRuleCall_7_3; }
		
		//(OPEN 'POCHonorificName' pocHonorific=STRING CLOSE)?
		public Group getGroup_8() { return cGroup_8; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_8_0() { return cOPENTerminalRuleCall_8_0; }
		
		//'POCHonorificName'
		public Keyword getPOCHonorificNameKeyword_8_1() { return cPOCHonorificNameKeyword_8_1; }
		
		//pocHonorific=STRING
		public Assignment getPocHonorificAssignment_8_2() { return cPocHonorificAssignment_8_2; }
		
		//STRING
		public RuleCall getPocHonorificSTRINGTerminalRuleCall_8_2_0() { return cPocHonorificSTRINGTerminalRuleCall_8_2_0; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_8_3() { return cCLOSETerminalRuleCall_8_3; }
		
		//(OPEN 'POCFirstName' pocFirstName=STRING CLOSE)?
		public Group getGroup_9() { return cGroup_9; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_9_0() { return cOPENTerminalRuleCall_9_0; }
		
		//'POCFirstName'
		public Keyword getPOCFirstNameKeyword_9_1() { return cPOCFirstNameKeyword_9_1; }
		
		//pocFirstName=STRING
		public Assignment getPocFirstNameAssignment_9_2() { return cPocFirstNameAssignment_9_2; }
		
		//STRING
		public RuleCall getPocFirstNameSTRINGTerminalRuleCall_9_2_0() { return cPocFirstNameSTRINGTerminalRuleCall_9_2_0; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_9_3() { return cCLOSETerminalRuleCall_9_3; }
		
		//(OPEN 'POCLastName' pocLastName=STRING CLOSE)?
		public Group getGroup_10() { return cGroup_10; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_10_0() { return cOPENTerminalRuleCall_10_0; }
		
		//'POCLastName'
		public Keyword getPOCLastNameKeyword_10_1() { return cPOCLastNameKeyword_10_1; }
		
		//pocLastName=STRING
		public Assignment getPocLastNameAssignment_10_2() { return cPocLastNameAssignment_10_2; }
		
		//STRING
		public RuleCall getPocLastNameSTRINGTerminalRuleCall_10_2_0() { return cPocLastNameSTRINGTerminalRuleCall_10_2_0; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_10_3() { return cCLOSETerminalRuleCall_10_3; }
		
		//(OPEN 'POCOrgName' pocOrgName=STRING CLOSE)?
		public Group getGroup_11() { return cGroup_11; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_11_0() { return cOPENTerminalRuleCall_11_0; }
		
		//'POCOrgName'
		public Keyword getPOCOrgNameKeyword_11_1() { return cPOCOrgNameKeyword_11_1; }
		
		//pocOrgName=STRING
		public Assignment getPocOrgNameAssignment_11_2() { return cPocOrgNameAssignment_11_2; }
		
		//STRING
		public RuleCall getPocOrgNameSTRINGTerminalRuleCall_11_2_0() { return cPocOrgNameSTRINGTerminalRuleCall_11_2_0; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_11_3() { return cCLOSETerminalRuleCall_11_3; }
		
		//(OPEN 'POCPhone' pocPhone=STRING CLOSE)?
		public Group getGroup_12() { return cGroup_12; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_12_0() { return cOPENTerminalRuleCall_12_0; }
		
		//'POCPhone'
		public Keyword getPOCPhoneKeyword_12_1() { return cPOCPhoneKeyword_12_1; }
		
		//pocPhone=STRING
		public Assignment getPocPhoneAssignment_12_2() { return cPocPhoneAssignment_12_2; }
		
		//STRING
		public RuleCall getPocPhoneSTRINGTerminalRuleCall_12_2_0() { return cPocPhoneSTRINGTerminalRuleCall_12_2_0; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_12_3() { return cCLOSETerminalRuleCall_12_3; }
		
		//(OPEN 'POCEmail' pocEmail=STRING CLOSE)?
		public Group getGroup_13() { return cGroup_13; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_13_0() { return cOPENTerminalRuleCall_13_0; }
		
		//'POCEmail'
		public Keyword getPOCEmailKeyword_13_1() { return cPOCEmailKeyword_13_1; }
		
		//pocEmail=STRING
		public Assignment getPocEmailAssignment_13_2() { return cPocEmailAssignment_13_2; }
		
		//STRING
		public RuleCall getPocEmailSTRINGTerminalRuleCall_13_2_0() { return cPocEmailSTRINGTerminalRuleCall_13_2_0; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_13_3() { return cCLOSETerminalRuleCall_13_3; }
		
		//(OPEN 'ModificationDate' modificationDate=TEXT CLOSE)?
		public Group getGroup_14() { return cGroup_14; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_14_0() { return cOPENTerminalRuleCall_14_0; }
		
		//'ModificationDate'
		public Keyword getModificationDateKeyword_14_1() { return cModificationDateKeyword_14_1; }
		
		//modificationDate=TEXT
		public Assignment getModificationDateAssignment_14_2() { return cModificationDateAssignment_14_2; }
		
		//TEXT
		public RuleCall getModificationDateTEXTTerminalRuleCall_14_2_0() { return cModificationDateTEXTTerminalRuleCall_14_2_0; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_14_3() { return cCLOSETerminalRuleCall_14_3; }
		
		//(OPEN 'MOMVersion' momVersion=STRING CLOSE)?
		public Group getGroup_15() { return cGroup_15; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_15_0() { return cOPENTerminalRuleCall_15_0; }
		
		//'MOMVersion'
		public Keyword getMOMVersionKeyword_15_1() { return cMOMVersionKeyword_15_1; }
		
		//momVersion=STRING
		public Assignment getMomVersionAssignment_15_2() { return cMomVersionAssignment_15_2; }
		
		//STRING
		public RuleCall getMomVersionSTRINGTerminalRuleCall_15_2_0() { return cMomVersionSTRINGTerminalRuleCall_15_2_0; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_15_3() { return cCLOSETerminalRuleCall_15_3; }
		
		//timeRepresentation=TimeRepresentation?
		public Assignment getTimeRepresentationAssignment_16() { return cTimeRepresentationAssignment_16; }
		
		//TimeRepresentation
		public RuleCall getTimeRepresentationTimeRepresentationParserRuleCall_16_0() { return cTimeRepresentationTimeRepresentationParserRuleCall_16_0; }
		
		//lookAhead=Lookahead?
		public Assignment getLookAheadAssignment_17() { return cLookAheadAssignment_17; }
		
		//Lookahead
		public RuleCall getLookAheadLookaheadParserRuleCall_17_0() { return cLookAheadLookaheadParserRuleCall_17_0; }
		
		//omtComponents+=OMTComponent*
		public Assignment getOmtComponentsAssignment_18() { return cOmtComponentsAssignment_18; }
		
		//OMTComponent
		public RuleCall getOmtComponentsOMTComponentParserRuleCall_18_0() { return cOmtComponentsOMTComponentParserRuleCall_18_0; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_19() { return cCLOSETerminalRuleCall_19; }
	}
	public class TimeRepresentationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.cohesionforce.hla.dsl.Omt.TimeRepresentation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOPENTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cTimeRepresentationKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cOPENTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Keyword cUnitsKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cUnitsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cUnitsSTRINGTerminalRuleCall_4_0 = (RuleCall)cUnitsAssignment_4.eContents().get(0);
		private final Assignment cUnitsNoteAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cUnitsNoteNoteRefParserRuleCall_5_0 = (RuleCall)cUnitsNoteAssignment_5.eContents().get(0);
		private final RuleCall cCLOSETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		private final RuleCall cOPENTerminalRuleCall_7 = (RuleCall)cGroup.eContents().get(7);
		private final Keyword cMinimumKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cMinAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cMinSTRINGTerminalRuleCall_9_0 = (RuleCall)cMinAssignment_9.eContents().get(0);
		private final Assignment cMinNoteAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cMinNoteNoteRefParserRuleCall_10_0 = (RuleCall)cMinNoteAssignment_10.eContents().get(0);
		private final RuleCall cCLOSETerminalRuleCall_11 = (RuleCall)cGroup.eContents().get(11);
		private final RuleCall cOPENTerminalRuleCall_12 = (RuleCall)cGroup.eContents().get(12);
		private final Keyword cMaximumKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Assignment cMaxAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final RuleCall cMaxSTRINGTerminalRuleCall_14_0 = (RuleCall)cMaxAssignment_14.eContents().get(0);
		private final Assignment cMaxNoteAssignment_15 = (Assignment)cGroup.eContents().get(15);
		private final RuleCall cMaxNoteNoteRefParserRuleCall_15_0 = (RuleCall)cMaxNoteAssignment_15.eContents().get(0);
		private final RuleCall cCLOSETerminalRuleCall_16 = (RuleCall)cGroup.eContents().get(16);
		private final RuleCall cOPENTerminalRuleCall_17 = (RuleCall)cGroup.eContents().get(17);
		private final Keyword cInitialValueKeyword_18 = (Keyword)cGroup.eContents().get(18);
		private final Assignment cInitialAssignment_19 = (Assignment)cGroup.eContents().get(19);
		private final RuleCall cInitialSTRINGTerminalRuleCall_19_0 = (RuleCall)cInitialAssignment_19.eContents().get(0);
		private final Assignment cInitialNoteAssignment_20 = (Assignment)cGroup.eContents().get(20);
		private final RuleCall cInitialNoteNoteRefParserRuleCall_20_0 = (RuleCall)cInitialNoteAssignment_20.eContents().get(0);
		private final RuleCall cCLOSETerminalRuleCall_21 = (RuleCall)cGroup.eContents().get(21);
		private final RuleCall cOPENTerminalRuleCall_22 = (RuleCall)cGroup.eContents().get(22);
		private final Keyword cDataTypeKeyword_23 = (Keyword)cGroup.eContents().get(23);
		private final Assignment cDataTypeAssignment_24 = (Assignment)cGroup.eContents().get(24);
		private final RuleCall cDataTypeSTRINGTerminalRuleCall_24_0 = (RuleCall)cDataTypeAssignment_24.eContents().get(0);
		private final Assignment cTypeNoteAssignment_25 = (Assignment)cGroup.eContents().get(25);
		private final RuleCall cTypeNoteNoteRefParserRuleCall_25_0 = (RuleCall)cTypeNoteAssignment_25.eContents().get(0);
		private final RuleCall cCLOSETerminalRuleCall_26 = (RuleCall)cGroup.eContents().get(26);
		private final Group cGroup_27 = (Group)cGroup.eContents().get(27);
		private final RuleCall cOPENTerminalRuleCall_27_0 = (RuleCall)cGroup_27.eContents().get(0);
		private final Keyword cOperatorsKeyword_27_1 = (Keyword)cGroup_27.eContents().get(1);
		private final Assignment cOperatorsAssignment_27_2 = (Assignment)cGroup_27.eContents().get(2);
		private final RuleCall cOperatorsSTRINGTerminalRuleCall_27_2_0 = (RuleCall)cOperatorsAssignment_27_2.eContents().get(0);
		private final Assignment cOperatorsNoteAssignment_27_3 = (Assignment)cGroup_27.eContents().get(3);
		private final RuleCall cOperatorsNoteNoteRefParserRuleCall_27_3_0 = (RuleCall)cOperatorsNoteAssignment_27_3.eContents().get(0);
		private final RuleCall cCLOSETerminalRuleCall_27_4 = (RuleCall)cGroup_27.eContents().get(4);
		private final RuleCall cCLOSETerminalRuleCall_28 = (RuleCall)cGroup.eContents().get(28);
		
		//TimeRepresentation:
		//	OPEN 'TimeRepresentation'
		//	OPEN 'Units' units=STRING unitsNote=NoteRef? CLOSE
		//	OPEN 'Minimum' min=STRING minNote=NoteRef? CLOSE
		//	OPEN 'Maximum' max=STRING maxNote=NoteRef? CLOSE
		//	OPEN 'InitialValue' initial=STRING initialNote=NoteRef? CLOSE
		//	OPEN 'DataType' dataType=STRING typeNote=NoteRef? CLOSE (OPEN 'Operators' operators=STRING operatorsNote=NoteRef?
		//	CLOSE)?
		//	CLOSE;
		@Override public ParserRule getRule() { return rule; }
		
		//OPEN 'TimeRepresentation' OPEN 'Units' units=STRING unitsNote=NoteRef? CLOSE OPEN 'Minimum' min=STRING minNote=NoteRef?
		//CLOSE OPEN 'Maximum' max=STRING maxNote=NoteRef? CLOSE OPEN 'InitialValue' initial=STRING initialNote=NoteRef? CLOSE
		//OPEN 'DataType' dataType=STRING typeNote=NoteRef? CLOSE (OPEN 'Operators' operators=STRING operatorsNote=NoteRef?
		//CLOSE)? CLOSE
		public Group getGroup() { return cGroup; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_0() { return cOPENTerminalRuleCall_0; }
		
		//'TimeRepresentation'
		public Keyword getTimeRepresentationKeyword_1() { return cTimeRepresentationKeyword_1; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_2() { return cOPENTerminalRuleCall_2; }
		
		//'Units'
		public Keyword getUnitsKeyword_3() { return cUnitsKeyword_3; }
		
		//units=STRING
		public Assignment getUnitsAssignment_4() { return cUnitsAssignment_4; }
		
		//STRING
		public RuleCall getUnitsSTRINGTerminalRuleCall_4_0() { return cUnitsSTRINGTerminalRuleCall_4_0; }
		
		//unitsNote=NoteRef?
		public Assignment getUnitsNoteAssignment_5() { return cUnitsNoteAssignment_5; }
		
		//NoteRef
		public RuleCall getUnitsNoteNoteRefParserRuleCall_5_0() { return cUnitsNoteNoteRefParserRuleCall_5_0; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_6() { return cCLOSETerminalRuleCall_6; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_7() { return cOPENTerminalRuleCall_7; }
		
		//'Minimum'
		public Keyword getMinimumKeyword_8() { return cMinimumKeyword_8; }
		
		//min=STRING
		public Assignment getMinAssignment_9() { return cMinAssignment_9; }
		
		//STRING
		public RuleCall getMinSTRINGTerminalRuleCall_9_0() { return cMinSTRINGTerminalRuleCall_9_0; }
		
		//minNote=NoteRef?
		public Assignment getMinNoteAssignment_10() { return cMinNoteAssignment_10; }
		
		//NoteRef
		public RuleCall getMinNoteNoteRefParserRuleCall_10_0() { return cMinNoteNoteRefParserRuleCall_10_0; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_11() { return cCLOSETerminalRuleCall_11; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_12() { return cOPENTerminalRuleCall_12; }
		
		//'Maximum'
		public Keyword getMaximumKeyword_13() { return cMaximumKeyword_13; }
		
		//max=STRING
		public Assignment getMaxAssignment_14() { return cMaxAssignment_14; }
		
		//STRING
		public RuleCall getMaxSTRINGTerminalRuleCall_14_0() { return cMaxSTRINGTerminalRuleCall_14_0; }
		
		//maxNote=NoteRef?
		public Assignment getMaxNoteAssignment_15() { return cMaxNoteAssignment_15; }
		
		//NoteRef
		public RuleCall getMaxNoteNoteRefParserRuleCall_15_0() { return cMaxNoteNoteRefParserRuleCall_15_0; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_16() { return cCLOSETerminalRuleCall_16; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_17() { return cOPENTerminalRuleCall_17; }
		
		//'InitialValue'
		public Keyword getInitialValueKeyword_18() { return cInitialValueKeyword_18; }
		
		//initial=STRING
		public Assignment getInitialAssignment_19() { return cInitialAssignment_19; }
		
		//STRING
		public RuleCall getInitialSTRINGTerminalRuleCall_19_0() { return cInitialSTRINGTerminalRuleCall_19_0; }
		
		//initialNote=NoteRef?
		public Assignment getInitialNoteAssignment_20() { return cInitialNoteAssignment_20; }
		
		//NoteRef
		public RuleCall getInitialNoteNoteRefParserRuleCall_20_0() { return cInitialNoteNoteRefParserRuleCall_20_0; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_21() { return cCLOSETerminalRuleCall_21; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_22() { return cOPENTerminalRuleCall_22; }
		
		//'DataType'
		public Keyword getDataTypeKeyword_23() { return cDataTypeKeyword_23; }
		
		//dataType=STRING
		public Assignment getDataTypeAssignment_24() { return cDataTypeAssignment_24; }
		
		//STRING
		public RuleCall getDataTypeSTRINGTerminalRuleCall_24_0() { return cDataTypeSTRINGTerminalRuleCall_24_0; }
		
		//typeNote=NoteRef?
		public Assignment getTypeNoteAssignment_25() { return cTypeNoteAssignment_25; }
		
		//NoteRef
		public RuleCall getTypeNoteNoteRefParserRuleCall_25_0() { return cTypeNoteNoteRefParserRuleCall_25_0; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_26() { return cCLOSETerminalRuleCall_26; }
		
		//(OPEN 'Operators' operators=STRING operatorsNote=NoteRef? CLOSE)?
		public Group getGroup_27() { return cGroup_27; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_27_0() { return cOPENTerminalRuleCall_27_0; }
		
		//'Operators'
		public Keyword getOperatorsKeyword_27_1() { return cOperatorsKeyword_27_1; }
		
		//operators=STRING
		public Assignment getOperatorsAssignment_27_2() { return cOperatorsAssignment_27_2; }
		
		//STRING
		public RuleCall getOperatorsSTRINGTerminalRuleCall_27_2_0() { return cOperatorsSTRINGTerminalRuleCall_27_2_0; }
		
		//operatorsNote=NoteRef?
		public Assignment getOperatorsNoteAssignment_27_3() { return cOperatorsNoteAssignment_27_3; }
		
		//NoteRef
		public RuleCall getOperatorsNoteNoteRefParserRuleCall_27_3_0() { return cOperatorsNoteNoteRefParserRuleCall_27_3_0; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_27_4() { return cCLOSETerminalRuleCall_27_4; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_28() { return cCLOSETerminalRuleCall_28; }
	}
	public class LookaheadElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.cohesionforce.hla.dsl.Omt.Lookahead");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOPENTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cLookaheadKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cOPENTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Keyword cUnitsKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cUnitsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cUnitsSTRINGTerminalRuleCall_4_0 = (RuleCall)cUnitsAssignment_4.eContents().get(0);
		private final Assignment cUnitsNoteAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cUnitsNoteNoteRefParserRuleCall_5_0 = (RuleCall)cUnitsNoteAssignment_5.eContents().get(0);
		private final RuleCall cCLOSETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		private final RuleCall cOPENTerminalRuleCall_7 = (RuleCall)cGroup.eContents().get(7);
		private final Keyword cDataTypeKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cDataTypeAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cDataTypeSTRINGTerminalRuleCall_9_0 = (RuleCall)cDataTypeAssignment_9.eContents().get(0);
		private final Assignment cTypeNoteAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cTypeNoteNoteRefParserRuleCall_10_0 = (RuleCall)cTypeNoteAssignment_10.eContents().get(0);
		private final RuleCall cCLOSETerminalRuleCall_11 = (RuleCall)cGroup.eContents().get(11);
		private final Group cGroup_12 = (Group)cGroup.eContents().get(12);
		private final RuleCall cOPENTerminalRuleCall_12_0 = (RuleCall)cGroup_12.eContents().get(0);
		private final Keyword cAdditionOperatorKeyword_12_1 = (Keyword)cGroup_12.eContents().get(1);
		private final Assignment cOperatorAssignment_12_2 = (Assignment)cGroup_12.eContents().get(2);
		private final RuleCall cOperatorSTRINGTerminalRuleCall_12_2_0 = (RuleCall)cOperatorAssignment_12_2.eContents().get(0);
		private final Assignment cOperatorNoteAssignment_12_3 = (Assignment)cGroup_12.eContents().get(3);
		private final RuleCall cOperatorNoteNoteRefParserRuleCall_12_3_0 = (RuleCall)cOperatorNoteAssignment_12_3.eContents().get(0);
		private final RuleCall cCLOSETerminalRuleCall_12_4 = (RuleCall)cGroup_12.eContents().get(4);
		private final RuleCall cCLOSETerminalRuleCall_13 = (RuleCall)cGroup.eContents().get(13);
		
		//Lookahead:
		//	OPEN 'Lookahead'
		//	OPEN 'Units' units=STRING unitsNote=NoteRef? CLOSE
		//	OPEN 'DataType' dataType=STRING typeNote=NoteRef? CLOSE (OPEN 'AdditionOperator' operator=STRING operatorNote=NoteRef?
		//	CLOSE)?
		//	CLOSE;
		@Override public ParserRule getRule() { return rule; }
		
		//OPEN 'Lookahead' OPEN 'Units' units=STRING unitsNote=NoteRef? CLOSE OPEN 'DataType' dataType=STRING typeNote=NoteRef?
		//CLOSE (OPEN 'AdditionOperator' operator=STRING operatorNote=NoteRef? CLOSE)? CLOSE
		public Group getGroup() { return cGroup; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_0() { return cOPENTerminalRuleCall_0; }
		
		//'Lookahead'
		public Keyword getLookaheadKeyword_1() { return cLookaheadKeyword_1; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_2() { return cOPENTerminalRuleCall_2; }
		
		//'Units'
		public Keyword getUnitsKeyword_3() { return cUnitsKeyword_3; }
		
		//units=STRING
		public Assignment getUnitsAssignment_4() { return cUnitsAssignment_4; }
		
		//STRING
		public RuleCall getUnitsSTRINGTerminalRuleCall_4_0() { return cUnitsSTRINGTerminalRuleCall_4_0; }
		
		//unitsNote=NoteRef?
		public Assignment getUnitsNoteAssignment_5() { return cUnitsNoteAssignment_5; }
		
		//NoteRef
		public RuleCall getUnitsNoteNoteRefParserRuleCall_5_0() { return cUnitsNoteNoteRefParserRuleCall_5_0; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_6() { return cCLOSETerminalRuleCall_6; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_7() { return cOPENTerminalRuleCall_7; }
		
		//'DataType'
		public Keyword getDataTypeKeyword_8() { return cDataTypeKeyword_8; }
		
		//dataType=STRING
		public Assignment getDataTypeAssignment_9() { return cDataTypeAssignment_9; }
		
		//STRING
		public RuleCall getDataTypeSTRINGTerminalRuleCall_9_0() { return cDataTypeSTRINGTerminalRuleCall_9_0; }
		
		//typeNote=NoteRef?
		public Assignment getTypeNoteAssignment_10() { return cTypeNoteAssignment_10; }
		
		//NoteRef
		public RuleCall getTypeNoteNoteRefParserRuleCall_10_0() { return cTypeNoteNoteRefParserRuleCall_10_0; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_11() { return cCLOSETerminalRuleCall_11; }
		
		//(OPEN 'AdditionOperator' operator=STRING operatorNote=NoteRef? CLOSE)?
		public Group getGroup_12() { return cGroup_12; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_12_0() { return cOPENTerminalRuleCall_12_0; }
		
		//'AdditionOperator'
		public Keyword getAdditionOperatorKeyword_12_1() { return cAdditionOperatorKeyword_12_1; }
		
		//operator=STRING
		public Assignment getOperatorAssignment_12_2() { return cOperatorAssignment_12_2; }
		
		//STRING
		public RuleCall getOperatorSTRINGTerminalRuleCall_12_2_0() { return cOperatorSTRINGTerminalRuleCall_12_2_0; }
		
		//operatorNote=NoteRef?
		public Assignment getOperatorNoteAssignment_12_3() { return cOperatorNoteAssignment_12_3; }
		
		//NoteRef
		public RuleCall getOperatorNoteNoteRefParserRuleCall_12_3_0() { return cOperatorNoteNoteRefParserRuleCall_12_3_0; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_12_4() { return cCLOSETerminalRuleCall_12_4; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_13() { return cCLOSETerminalRuleCall_13; }
	}
	public class MOD_TypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.cohesionforce.hla.dsl.Omt.MOD_Type");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cFOMKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cSOMKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cOTHERKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		
		//MOD_Type:
		//	'FOM' | 'SOM' | 'OTHER';
		@Override public ParserRule getRule() { return rule; }
		
		//'FOM' | 'SOM' | 'OTHER'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'FOM'
		public Keyword getFOMKeyword_0() { return cFOMKeyword_0; }
		
		//'SOM'
		public Keyword getSOMKeyword_1() { return cSOMKeyword_1; }
		
		//'OTHER'
		public Keyword getOTHERKeyword_2() { return cOTHERKeyword_2; }
	}
	public class OMTComponentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.cohesionforce.hla.dsl.Omt.OMTComponent");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cClassParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cEnumeratedDataTypeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cComplexDataTypeParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cRoutingSpaceParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cInteractionParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cNoteParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		
		//OMTComponent:
		//	Class | EnumeratedDataType | ComplexDataType | RoutingSpace | Interaction | Note;
		@Override public ParserRule getRule() { return rule; }
		
		//Class | EnumeratedDataType | ComplexDataType | RoutingSpace | Interaction | Note
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Class
		public RuleCall getClassParserRuleCall_0() { return cClassParserRuleCall_0; }
		
		//EnumeratedDataType
		public RuleCall getEnumeratedDataTypeParserRuleCall_1() { return cEnumeratedDataTypeParserRuleCall_1; }
		
		//ComplexDataType
		public RuleCall getComplexDataTypeParserRuleCall_2() { return cComplexDataTypeParserRuleCall_2; }
		
		//RoutingSpace
		public RuleCall getRoutingSpaceParserRuleCall_3() { return cRoutingSpaceParserRuleCall_3; }
		
		//Interaction
		public RuleCall getInteractionParserRuleCall_4() { return cInteractionParserRuleCall_4; }
		
		//Note
		public RuleCall getNoteParserRuleCall_5() { return cNoteParserRuleCall_5; }
	}
	public class RoutingSpaceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.cohesionforce.hla.dsl.Omt.RoutingSpace");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOPENTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cRoutingSpaceKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cOPENTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Keyword cNameKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameSTRINGTerminalRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final Assignment cNoteAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cNoteNoteRefParserRuleCall_5_0 = (RuleCall)cNoteAssignment_5.eContents().get(0);
		private final RuleCall cCLOSETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		private final Assignment cDimensionsAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cDimensionsDimensionParserRuleCall_7_0 = (RuleCall)cDimensionsAssignment_7.eContents().get(0);
		private final RuleCall cCLOSETerminalRuleCall_8 = (RuleCall)cGroup.eContents().get(8);
		
		//RoutingSpace:
		//	OPEN 'RoutingSpace' OPEN 'Name' name=STRING note=NoteRef? CLOSE
		//	dimensions+=Dimension*
		//	CLOSE;
		@Override public ParserRule getRule() { return rule; }
		
		//OPEN 'RoutingSpace' OPEN 'Name' name=STRING note=NoteRef? CLOSE dimensions+=Dimension* CLOSE
		public Group getGroup() { return cGroup; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_0() { return cOPENTerminalRuleCall_0; }
		
		//'RoutingSpace'
		public Keyword getRoutingSpaceKeyword_1() { return cRoutingSpaceKeyword_1; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_2() { return cOPENTerminalRuleCall_2; }
		
		//'Name'
		public Keyword getNameKeyword_3() { return cNameKeyword_3; }
		
		//name=STRING
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_4_0() { return cNameSTRINGTerminalRuleCall_4_0; }
		
		//note=NoteRef?
		public Assignment getNoteAssignment_5() { return cNoteAssignment_5; }
		
		//NoteRef
		public RuleCall getNoteNoteRefParserRuleCall_5_0() { return cNoteNoteRefParserRuleCall_5_0; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_6() { return cCLOSETerminalRuleCall_6; }
		
		//dimensions+=Dimension*
		public Assignment getDimensionsAssignment_7() { return cDimensionsAssignment_7; }
		
		//Dimension
		public RuleCall getDimensionsDimensionParserRuleCall_7_0() { return cDimensionsDimensionParserRuleCall_7_0; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_8() { return cCLOSETerminalRuleCall_8; }
	}
	public class DimensionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.cohesionforce.hla.dsl.Omt.Dimension");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOPENTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cDimensionKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cOPENTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Keyword cNameKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameSTRINGTerminalRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final Assignment cNameNoteAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cNameNoteNoteRefParserRuleCall_5_0 = (RuleCall)cNameNoteAssignment_5.eContents().get(0);
		private final RuleCall cCLOSETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		private final RuleCall cOPENTerminalRuleCall_7 = (RuleCall)cGroup.eContents().get(7);
		private final Keyword cDimensionTypeKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Alternatives cAlternatives_9 = (Alternatives)cGroup.eContents().get(9);
		private final Assignment cTypeAssignment_9_0 = (Assignment)cAlternatives_9.eContents().get(0);
		private final CrossReference cTypeTypeReferenceCrossReference_9_0_0 = (CrossReference)cTypeAssignment_9_0.eContents().get(0);
		private final RuleCall cTypeTypeReferenceSTRINGTerminalRuleCall_9_0_0_1 = (RuleCall)cTypeTypeReferenceCrossReference_9_0_0.eContents().get(1);
		private final Assignment cDataTypeAssignment_9_1 = (Assignment)cAlternatives_9.eContents().get(1);
		private final RuleCall cDataTypeBASE_DATA_TYPETerminalRuleCall_9_1_0 = (RuleCall)cDataTypeAssignment_9_1.eContents().get(0);
		private final Assignment cTypeNoteAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cTypeNoteNoteRefParserRuleCall_10_0 = (RuleCall)cTypeNoteAssignment_10.eContents().get(0);
		private final RuleCall cCLOSETerminalRuleCall_11 = (RuleCall)cGroup.eContents().get(11);
		private final Assignment cDomainAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cDomainDimensionDomainParserRuleCall_12_0 = (RuleCall)cDomainAssignment_12.eContents().get(0);
		private final Group cGroup_13 = (Group)cGroup.eContents().get(13);
		private final RuleCall cOPENTerminalRuleCall_13_0 = (RuleCall)cGroup_13.eContents().get(0);
		private final Keyword cRangeSetUnitsKeyword_13_1 = (Keyword)cGroup_13.eContents().get(1);
		private final Assignment cUnitsAssignment_13_2 = (Assignment)cGroup_13.eContents().get(2);
		private final RuleCall cUnitsSTRINGTerminalRuleCall_13_2_0 = (RuleCall)cUnitsAssignment_13_2.eContents().get(0);
		private final Assignment cUnitsNoteAssignment_13_3 = (Assignment)cGroup_13.eContents().get(3);
		private final RuleCall cUnitsNoteNoteRefParserRuleCall_13_3_0 = (RuleCall)cUnitsNoteAssignment_13_3.eContents().get(0);
		private final RuleCall cCLOSETerminalRuleCall_13_4 = (RuleCall)cGroup_13.eContents().get(4);
		private final RuleCall cOPENTerminalRuleCall_14 = (RuleCall)cGroup.eContents().get(14);
		private final Keyword cNormalizationFunctionKeyword_15 = (Keyword)cGroup.eContents().get(15);
		private final Assignment cFunctionAssignment_16 = (Assignment)cGroup.eContents().get(16);
		private final RuleCall cFunctionSTRINGTerminalRuleCall_16_0 = (RuleCall)cFunctionAssignment_16.eContents().get(0);
		private final Assignment cFunctionNoteAssignment_17 = (Assignment)cGroup.eContents().get(17);
		private final RuleCall cFunctionNoteNoteRefParserRuleCall_17_0 = (RuleCall)cFunctionNoteAssignment_17.eContents().get(0);
		private final RuleCall cCLOSETerminalRuleCall_18 = (RuleCall)cGroup.eContents().get(18);
		private final RuleCall cCLOSETerminalRuleCall_19 = (RuleCall)cGroup.eContents().get(19);
		
		//Dimension:
		//	OPEN 'Dimension' OPEN 'Name' name=STRING nameNote=NoteRef? CLOSE
		//	OPEN 'DimensionType' (type=[TypeReference|STRING] | dataType=BASE_DATA_TYPE) typeNote=NoteRef? CLOSE
		//	domain=DimensionDomain (OPEN 'RangeSetUnits' units=STRING unitsNote=NoteRef? CLOSE)?
		//	OPEN 'NormalizationFunction' function=STRING functionNote=NoteRef? CLOSE
		//	CLOSE;
		@Override public ParserRule getRule() { return rule; }
		
		//OPEN 'Dimension' OPEN 'Name' name=STRING nameNote=NoteRef? CLOSE OPEN 'DimensionType' (type=[TypeReference|STRING] |
		//dataType=BASE_DATA_TYPE) typeNote=NoteRef? CLOSE domain=DimensionDomain (OPEN 'RangeSetUnits' units=STRING
		//unitsNote=NoteRef? CLOSE)? OPEN 'NormalizationFunction' function=STRING functionNote=NoteRef? CLOSE CLOSE
		public Group getGroup() { return cGroup; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_0() { return cOPENTerminalRuleCall_0; }
		
		//'Dimension'
		public Keyword getDimensionKeyword_1() { return cDimensionKeyword_1; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_2() { return cOPENTerminalRuleCall_2; }
		
		//'Name'
		public Keyword getNameKeyword_3() { return cNameKeyword_3; }
		
		//name=STRING
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_4_0() { return cNameSTRINGTerminalRuleCall_4_0; }
		
		//nameNote=NoteRef?
		public Assignment getNameNoteAssignment_5() { return cNameNoteAssignment_5; }
		
		//NoteRef
		public RuleCall getNameNoteNoteRefParserRuleCall_5_0() { return cNameNoteNoteRefParserRuleCall_5_0; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_6() { return cCLOSETerminalRuleCall_6; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_7() { return cOPENTerminalRuleCall_7; }
		
		//'DimensionType'
		public Keyword getDimensionTypeKeyword_8() { return cDimensionTypeKeyword_8; }
		
		//type=[TypeReference|STRING] | dataType=BASE_DATA_TYPE
		public Alternatives getAlternatives_9() { return cAlternatives_9; }
		
		//type=[TypeReference|STRING]
		public Assignment getTypeAssignment_9_0() { return cTypeAssignment_9_0; }
		
		//[TypeReference|STRING]
		public CrossReference getTypeTypeReferenceCrossReference_9_0_0() { return cTypeTypeReferenceCrossReference_9_0_0; }
		
		//STRING
		public RuleCall getTypeTypeReferenceSTRINGTerminalRuleCall_9_0_0_1() { return cTypeTypeReferenceSTRINGTerminalRuleCall_9_0_0_1; }
		
		//dataType=BASE_DATA_TYPE
		public Assignment getDataTypeAssignment_9_1() { return cDataTypeAssignment_9_1; }
		
		//BASE_DATA_TYPE
		public RuleCall getDataTypeBASE_DATA_TYPETerminalRuleCall_9_1_0() { return cDataTypeBASE_DATA_TYPETerminalRuleCall_9_1_0; }
		
		//typeNote=NoteRef?
		public Assignment getTypeNoteAssignment_10() { return cTypeNoteAssignment_10; }
		
		//NoteRef
		public RuleCall getTypeNoteNoteRefParserRuleCall_10_0() { return cTypeNoteNoteRefParserRuleCall_10_0; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_11() { return cCLOSETerminalRuleCall_11; }
		
		//domain=DimensionDomain
		public Assignment getDomainAssignment_12() { return cDomainAssignment_12; }
		
		//DimensionDomain
		public RuleCall getDomainDimensionDomainParserRuleCall_12_0() { return cDomainDimensionDomainParserRuleCall_12_0; }
		
		//(OPEN 'RangeSetUnits' units=STRING unitsNote=NoteRef? CLOSE)?
		public Group getGroup_13() { return cGroup_13; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_13_0() { return cOPENTerminalRuleCall_13_0; }
		
		//'RangeSetUnits'
		public Keyword getRangeSetUnitsKeyword_13_1() { return cRangeSetUnitsKeyword_13_1; }
		
		//units=STRING
		public Assignment getUnitsAssignment_13_2() { return cUnitsAssignment_13_2; }
		
		//STRING
		public RuleCall getUnitsSTRINGTerminalRuleCall_13_2_0() { return cUnitsSTRINGTerminalRuleCall_13_2_0; }
		
		//unitsNote=NoteRef?
		public Assignment getUnitsNoteAssignment_13_3() { return cUnitsNoteAssignment_13_3; }
		
		//NoteRef
		public RuleCall getUnitsNoteNoteRefParserRuleCall_13_3_0() { return cUnitsNoteNoteRefParserRuleCall_13_3_0; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_13_4() { return cCLOSETerminalRuleCall_13_4; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_14() { return cOPENTerminalRuleCall_14; }
		
		//'NormalizationFunction'
		public Keyword getNormalizationFunctionKeyword_15() { return cNormalizationFunctionKeyword_15; }
		
		//function=STRING
		public Assignment getFunctionAssignment_16() { return cFunctionAssignment_16; }
		
		//STRING
		public RuleCall getFunctionSTRINGTerminalRuleCall_16_0() { return cFunctionSTRINGTerminalRuleCall_16_0; }
		
		//functionNote=NoteRef?
		public Assignment getFunctionNoteAssignment_17() { return cFunctionNoteAssignment_17; }
		
		//NoteRef
		public RuleCall getFunctionNoteNoteRefParserRuleCall_17_0() { return cFunctionNoteNoteRefParserRuleCall_17_0; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_18() { return cCLOSETerminalRuleCall_18; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_19() { return cCLOSETerminalRuleCall_19; }
	}
	public class DimensionDomainElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.cohesionforce.hla.dsl.Omt.DimensionDomain");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cDimensionRangeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cDimensionSetParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//DimensionDomain:
		//	DimensionRange | DimensionSet;
		@Override public ParserRule getRule() { return rule; }
		
		//DimensionRange | DimensionSet
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//DimensionRange
		public RuleCall getDimensionRangeParserRuleCall_0() { return cDimensionRangeParserRuleCall_0; }
		
		//DimensionSet
		public RuleCall getDimensionSetParserRuleCall_1() { return cDimensionSetParserRuleCall_1; }
	}
	public class DimensionRangeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.cohesionforce.hla.dsl.Omt.DimensionRange");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOPENTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cDimensionMinimumKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cMinimumAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cMinimumSTRINGTerminalRuleCall_2_0 = (RuleCall)cMinimumAssignment_2.eContents().get(0);
		private final Assignment cNoteAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNoteNoteRefParserRuleCall_3_0 = (RuleCall)cNoteAssignment_3.eContents().get(0);
		private final RuleCall cCLOSETerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final RuleCall cOPENTerminalRuleCall_5_0 = (RuleCall)cGroup_5.eContents().get(0);
		private final Keyword cDimensionMaximumKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cMaximumAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cMaximumSTRINGTerminalRuleCall_5_2_0 = (RuleCall)cMaximumAssignment_5_2.eContents().get(0);
		private final RuleCall cCLOSETerminalRuleCall_5_3 = (RuleCall)cGroup_5.eContents().get(3);
		private final RuleCall cOPENTerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		private final Keyword cIntervalTypeKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final RuleCall cIntervalTypeParserRuleCall_8 = (RuleCall)cGroup.eContents().get(8);
		private final RuleCall cCLOSETerminalRuleCall_9 = (RuleCall)cGroup.eContents().get(9);
		
		//DimensionRange:
		//	OPEN 'DimensionMinimum' minimum=STRING note=NoteRef? CLOSE (OPEN 'DimensionMaximum' maximum=STRING CLOSE)?
		//	OPEN 'IntervalType' IntervalType CLOSE;
		@Override public ParserRule getRule() { return rule; }
		
		//OPEN 'DimensionMinimum' minimum=STRING note=NoteRef? CLOSE (OPEN 'DimensionMaximum' maximum=STRING CLOSE)? OPEN
		//'IntervalType' IntervalType CLOSE
		public Group getGroup() { return cGroup; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_0() { return cOPENTerminalRuleCall_0; }
		
		//'DimensionMinimum'
		public Keyword getDimensionMinimumKeyword_1() { return cDimensionMinimumKeyword_1; }
		
		//minimum=STRING
		public Assignment getMinimumAssignment_2() { return cMinimumAssignment_2; }
		
		//STRING
		public RuleCall getMinimumSTRINGTerminalRuleCall_2_0() { return cMinimumSTRINGTerminalRuleCall_2_0; }
		
		//note=NoteRef?
		public Assignment getNoteAssignment_3() { return cNoteAssignment_3; }
		
		//NoteRef
		public RuleCall getNoteNoteRefParserRuleCall_3_0() { return cNoteNoteRefParserRuleCall_3_0; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_4() { return cCLOSETerminalRuleCall_4; }
		
		//(OPEN 'DimensionMaximum' maximum=STRING CLOSE)?
		public Group getGroup_5() { return cGroup_5; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_5_0() { return cOPENTerminalRuleCall_5_0; }
		
		//'DimensionMaximum'
		public Keyword getDimensionMaximumKeyword_5_1() { return cDimensionMaximumKeyword_5_1; }
		
		//maximum=STRING
		public Assignment getMaximumAssignment_5_2() { return cMaximumAssignment_5_2; }
		
		//STRING
		public RuleCall getMaximumSTRINGTerminalRuleCall_5_2_0() { return cMaximumSTRINGTerminalRuleCall_5_2_0; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_5_3() { return cCLOSETerminalRuleCall_5_3; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_6() { return cOPENTerminalRuleCall_6; }
		
		//'IntervalType'
		public Keyword getIntervalTypeKeyword_7() { return cIntervalTypeKeyword_7; }
		
		//IntervalType
		public RuleCall getIntervalTypeParserRuleCall_8() { return cIntervalTypeParserRuleCall_8; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_9() { return cCLOSETerminalRuleCall_9; }
	}
	public class IntervalTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.cohesionforce.hla.dsl.Omt.IntervalType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cOpenKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cClosedKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//IntervalType:
		//	'Open' | 'Closed';
		@Override public ParserRule getRule() { return rule; }
		
		//'Open' | 'Closed'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'Open'
		public Keyword getOpenKeyword_0() { return cOpenKeyword_0; }
		
		//'Closed'
		public Keyword getClosedKeyword_1() { return cClosedKeyword_1; }
	}
	public class DimensionSetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.cohesionforce.hla.dsl.Omt.DimensionSet");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOPENTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cDimensionSetKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cMembersAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cMembersDimensionSetMemberParserRuleCall_2_0 = (RuleCall)cMembersAssignment_2.eContents().get(0);
		private final Assignment cNoteAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNoteNoteRefParserRuleCall_3_0 = (RuleCall)cNoteAssignment_3.eContents().get(0);
		private final RuleCall cCLOSETerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//DimensionSet:
		//	OPEN 'DimensionSet' members+=DimensionSetMember+ note=NoteRef? CLOSE;
		@Override public ParserRule getRule() { return rule; }
		
		//OPEN 'DimensionSet' members+=DimensionSetMember+ note=NoteRef? CLOSE
		public Group getGroup() { return cGroup; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_0() { return cOPENTerminalRuleCall_0; }
		
		//'DimensionSet'
		public Keyword getDimensionSetKeyword_1() { return cDimensionSetKeyword_1; }
		
		//members+=DimensionSetMember+
		public Assignment getMembersAssignment_2() { return cMembersAssignment_2; }
		
		//DimensionSetMember
		public RuleCall getMembersDimensionSetMemberParserRuleCall_2_0() { return cMembersDimensionSetMemberParserRuleCall_2_0; }
		
		//note=NoteRef?
		public Assignment getNoteAssignment_3() { return cNoteAssignment_3; }
		
		//NoteRef
		public RuleCall getNoteNoteRefParserRuleCall_3_0() { return cNoteNoteRefParserRuleCall_3_0; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_4() { return cCLOSETerminalRuleCall_4; }
	}
	public class DimensionSetMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.cohesionforce.hla.dsl.Omt.DimensionSetMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOPENTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cMemberKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueSTRINGTerminalRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		private final RuleCall cCLOSETerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//DimensionSetMember:
		//	OPEN 'Member' value=STRING CLOSE;
		@Override public ParserRule getRule() { return rule; }
		
		//OPEN 'Member' value=STRING CLOSE
		public Group getGroup() { return cGroup; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_0() { return cOPENTerminalRuleCall_0; }
		
		//'Member'
		public Keyword getMemberKeyword_1() { return cMemberKeyword_1; }
		
		//value=STRING
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }
		
		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_2_0() { return cValueSTRINGTerminalRuleCall_2_0; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_3() { return cCLOSETerminalRuleCall_3; }
	}
	public class ClassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.cohesionforce.hla.dsl.Omt.Class");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOPENTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cClassKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cOPENTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Keyword cIDKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cIdAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cIdINTTerminalRuleCall_4_0 = (RuleCall)cIdAssignment_4.eContents().get(0);
		private final RuleCall cCLOSETerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cOPENTerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		private final Keyword cNameKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cNameAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cNameSTRINGTerminalRuleCall_8_0 = (RuleCall)cNameAssignment_8.eContents().get(0);
		private final Assignment cNoteAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cNoteNoteRefParserRuleCall_9_0 = (RuleCall)cNoteAssignment_9.eContents().get(0);
		private final RuleCall cCLOSETerminalRuleCall_10 = (RuleCall)cGroup.eContents().get(10);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final RuleCall cOPENTerminalRuleCall_11_0 = (RuleCall)cGroup_11.eContents().get(0);
		private final Keyword cMOMClassKeyword_11_1 = (Keyword)cGroup_11.eContents().get(1);
		private final Assignment cIsMOMClassAssignment_11_2 = (Assignment)cGroup_11.eContents().get(2);
		private final RuleCall cIsMOMClassIsMOMClassParserRuleCall_11_2_0 = (RuleCall)cIsMOMClassAssignment_11_2.eContents().get(0);
		private final RuleCall cCLOSETerminalRuleCall_11_3 = (RuleCall)cGroup_11.eContents().get(3);
		private final RuleCall cOPENTerminalRuleCall_12 = (RuleCall)cGroup.eContents().get(12);
		private final Keyword cPSCapabilitiesKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final RuleCall cPSCapabilitiesParserRuleCall_14 = (RuleCall)cGroup.eContents().get(14);
		private final RuleCall cCLOSETerminalRuleCall_15 = (RuleCall)cGroup.eContents().get(15);
		private final Assignment cDescriptionAssignment_16 = (Assignment)cGroup.eContents().get(16);
		private final RuleCall cDescriptionDescriptionParserRuleCall_16_0 = (RuleCall)cDescriptionAssignment_16.eContents().get(0);
		private final Assignment cComponentsAssignment_17 = (Assignment)cGroup.eContents().get(17);
		private final RuleCall cComponentsClassComponentParserRuleCall_17_0 = (RuleCall)cComponentsAssignment_17.eContents().get(0);
		private final RuleCall cCLOSETerminalRuleCall_18 = (RuleCall)cGroup.eContents().get(18);
		
		//Class:
		//	OPEN 'Class' OPEN 'ID' id=INT CLOSE
		//	OPEN 'Name' name=STRING note=NoteRef? CLOSE (OPEN 'MOMClass' isMOMClass=IsMOMClass CLOSE)?
		//	OPEN 'PSCapabilities' PSCapabilities CLOSE
		//	description=Description?
		//	components+=ClassComponent* CLOSE;
		@Override public ParserRule getRule() { return rule; }
		
		//OPEN 'Class' OPEN 'ID' id=INT CLOSE OPEN 'Name' name=STRING note=NoteRef? CLOSE (OPEN 'MOMClass' isMOMClass=IsMOMClass
		//CLOSE)? OPEN 'PSCapabilities' PSCapabilities CLOSE description=Description? components+=ClassComponent* CLOSE
		public Group getGroup() { return cGroup; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_0() { return cOPENTerminalRuleCall_0; }
		
		//'Class'
		public Keyword getClassKeyword_1() { return cClassKeyword_1; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_2() { return cOPENTerminalRuleCall_2; }
		
		//'ID'
		public Keyword getIDKeyword_3() { return cIDKeyword_3; }
		
		//id=INT
		public Assignment getIdAssignment_4() { return cIdAssignment_4; }
		
		//INT
		public RuleCall getIdINTTerminalRuleCall_4_0() { return cIdINTTerminalRuleCall_4_0; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_5() { return cCLOSETerminalRuleCall_5; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_6() { return cOPENTerminalRuleCall_6; }
		
		//'Name'
		public Keyword getNameKeyword_7() { return cNameKeyword_7; }
		
		//name=STRING
		public Assignment getNameAssignment_8() { return cNameAssignment_8; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_8_0() { return cNameSTRINGTerminalRuleCall_8_0; }
		
		//note=NoteRef?
		public Assignment getNoteAssignment_9() { return cNoteAssignment_9; }
		
		//NoteRef
		public RuleCall getNoteNoteRefParserRuleCall_9_0() { return cNoteNoteRefParserRuleCall_9_0; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_10() { return cCLOSETerminalRuleCall_10; }
		
		//(OPEN 'MOMClass' isMOMClass=IsMOMClass CLOSE)?
		public Group getGroup_11() { return cGroup_11; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_11_0() { return cOPENTerminalRuleCall_11_0; }
		
		//'MOMClass'
		public Keyword getMOMClassKeyword_11_1() { return cMOMClassKeyword_11_1; }
		
		//isMOMClass=IsMOMClass
		public Assignment getIsMOMClassAssignment_11_2() { return cIsMOMClassAssignment_11_2; }
		
		//IsMOMClass
		public RuleCall getIsMOMClassIsMOMClassParserRuleCall_11_2_0() { return cIsMOMClassIsMOMClassParserRuleCall_11_2_0; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_11_3() { return cCLOSETerminalRuleCall_11_3; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_12() { return cOPENTerminalRuleCall_12; }
		
		//'PSCapabilities'
		public Keyword getPSCapabilitiesKeyword_13() { return cPSCapabilitiesKeyword_13; }
		
		//PSCapabilities
		public RuleCall getPSCapabilitiesParserRuleCall_14() { return cPSCapabilitiesParserRuleCall_14; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_15() { return cCLOSETerminalRuleCall_15; }
		
		//description=Description?
		public Assignment getDescriptionAssignment_16() { return cDescriptionAssignment_16; }
		
		//Description
		public RuleCall getDescriptionDescriptionParserRuleCall_16_0() { return cDescriptionDescriptionParserRuleCall_16_0; }
		
		//components+=ClassComponent*
		public Assignment getComponentsAssignment_17() { return cComponentsAssignment_17; }
		
		//ClassComponent
		public RuleCall getComponentsClassComponentParserRuleCall_17_0() { return cComponentsClassComponentParserRuleCall_17_0; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_18() { return cCLOSETerminalRuleCall_18; }
	}
	public class IsMOMClassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.cohesionforce.hla.dsl.Omt.IsMOMClass");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTRUEKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFALSEKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//IsMOMClass:
		//	'TRUE' | 'FALSE';
		@Override public ParserRule getRule() { return rule; }
		
		//'TRUE' | 'FALSE'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'TRUE'
		public Keyword getTRUEKeyword_0() { return cTRUEKeyword_0; }
		
		//'FALSE'
		public Keyword getFALSEKeyword_1() { return cFALSEKeyword_1; }
	}
	public class PSCapabilitiesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.cohesionforce.hla.dsl.Omt.PSCapabilities");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cPKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cSKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cPSKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cNKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		
		//PSCapabilities:
		//	'P' | 'S' | 'PS' | 'N';
		@Override public ParserRule getRule() { return rule; }
		
		//'P' | 'S' | 'PS' | 'N'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'P'
		public Keyword getPKeyword_0() { return cPKeyword_0; }
		
		//'S'
		public Keyword getSKeyword_1() { return cSKeyword_1; }
		
		//'PS'
		public Keyword getPSKeyword_2() { return cPSKeyword_2; }
		
		//'N'
		public Keyword getNKeyword_3() { return cNKeyword_3; }
	}
	public class ClassComponentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.cohesionforce.hla.dsl.Omt.ClassComponent");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cAttributeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cSuperClassParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//ClassComponent:
		//	Attribute | SuperClass;
		@Override public ParserRule getRule() { return rule; }
		
		//Attribute | SuperClass
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Attribute
		public RuleCall getAttributeParserRuleCall_0() { return cAttributeParserRuleCall_0; }
		
		//SuperClass
		public RuleCall getSuperClassParserRuleCall_1() { return cSuperClassParserRuleCall_1; }
	}
	public class SuperClassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.cohesionforce.hla.dsl.Omt.SuperClass");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOPENTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cSuperClassKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cSuperClassAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cSuperClassINTTerminalRuleCall_2_0 = (RuleCall)cSuperClassAssignment_2.eContents().get(0);
		private final RuleCall cCLOSETerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//SuperClass:
		//	OPEN 'SuperClass' superClass=INT CLOSE;
		@Override public ParserRule getRule() { return rule; }
		
		//OPEN 'SuperClass' superClass=INT CLOSE
		public Group getGroup() { return cGroup; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_0() { return cOPENTerminalRuleCall_0; }
		
		//'SuperClass'
		public Keyword getSuperClassKeyword_1() { return cSuperClassKeyword_1; }
		
		//superClass=INT
		public Assignment getSuperClassAssignment_2() { return cSuperClassAssignment_2; }
		
		//INT
		public RuleCall getSuperClassINTTerminalRuleCall_2_0() { return cSuperClassINTTerminalRuleCall_2_0; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_3() { return cCLOSETerminalRuleCall_3; }
	}
	public class AttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.cohesionforce.hla.dsl.Omt.Attribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOPENTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cAttributeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cOPENTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Keyword cNameKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameSTRINGTerminalRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final Assignment cNameNoteAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cNameNoteNoteRefParserRuleCall_5_0 = (RuleCall)cNameNoteAssignment_5.eContents().get(0);
		private final RuleCall cCLOSETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		private final Assignment cDataTypeAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cDataTypeDataTypeParserRuleCall_7_0 = (RuleCall)cDataTypeAssignment_7.eContents().get(0);
		private final Assignment cCardinalityAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cCardinalityCardinalityParserRuleCall_8_0 = (RuleCall)cCardinalityAssignment_8.eContents().get(0);
		private final Assignment cUnitsAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cUnitsUnitsParserRuleCall_9_0 = (RuleCall)cUnitsAssignment_9.eContents().get(0);
		private final Assignment cResolutionAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cResolutionResolutionParserRuleCall_10_0 = (RuleCall)cResolutionAssignment_10.eContents().get(0);
		private final Assignment cAccuracyAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cAccuracyAccuracyParserRuleCall_11_0 = (RuleCall)cAccuracyAssignment_11.eContents().get(0);
		private final Assignment cAccuracyConditionAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cAccuracyConditionAccuracyConditionParserRuleCall_12_0 = (RuleCall)cAccuracyConditionAssignment_12.eContents().get(0);
		private final Group cGroup_13 = (Group)cGroup.eContents().get(13);
		private final RuleCall cOPENTerminalRuleCall_13_0 = (RuleCall)cGroup_13.eContents().get(0);
		private final Keyword cUpdateTypeKeyword_13_1 = (Keyword)cGroup_13.eContents().get(1);
		private final Assignment cUpdateTypeAssignment_13_2 = (Assignment)cGroup_13.eContents().get(2);
		private final RuleCall cUpdateTypeATT_UpdateTypeParserRuleCall_13_2_0 = (RuleCall)cUpdateTypeAssignment_13_2.eContents().get(0);
		private final Assignment cUpdateTypeNoteAssignment_13_3 = (Assignment)cGroup_13.eContents().get(3);
		private final RuleCall cUpdateTypeNoteNoteRefParserRuleCall_13_3_0 = (RuleCall)cUpdateTypeNoteAssignment_13_3.eContents().get(0);
		private final RuleCall cCLOSETerminalRuleCall_13_4 = (RuleCall)cGroup_13.eContents().get(4);
		private final Group cGroup_14 = (Group)cGroup.eContents().get(14);
		private final RuleCall cOPENTerminalRuleCall_14_0 = (RuleCall)cGroup_14.eContents().get(0);
		private final Keyword cUpdateConditionKeyword_14_1 = (Keyword)cGroup_14.eContents().get(1);
		private final Assignment cUpdateConditionAssignment_14_2 = (Assignment)cGroup_14.eContents().get(2);
		private final RuleCall cUpdateConditionSTRINGTerminalRuleCall_14_2_0 = (RuleCall)cUpdateConditionAssignment_14_2.eContents().get(0);
		private final Assignment cUpdateConditionNoteAssignment_14_3 = (Assignment)cGroup_14.eContents().get(3);
		private final RuleCall cUpdateConditionNoteNoteRefParserRuleCall_14_3_0 = (RuleCall)cUpdateConditionNoteAssignment_14_3.eContents().get(0);
		private final RuleCall cCLOSETerminalRuleCall_14_4 = (RuleCall)cGroup_14.eContents().get(4);
		private final Group cGroup_15 = (Group)cGroup.eContents().get(15);
		private final RuleCall cOPENTerminalRuleCall_15_0 = (RuleCall)cGroup_15.eContents().get(0);
		private final Keyword cTransferAcceptKeyword_15_1 = (Keyword)cGroup_15.eContents().get(1);
		private final Assignment cTransferAcceptAssignment_15_2 = (Assignment)cGroup_15.eContents().get(2);
		private final RuleCall cTransferAcceptATT_TransferAcceptParserRuleCall_15_2_0 = (RuleCall)cTransferAcceptAssignment_15_2.eContents().get(0);
		private final Assignment cTransferAcceptNoteAssignment_15_3 = (Assignment)cGroup_15.eContents().get(3);
		private final RuleCall cTransferAcceptNoteNoteRefParserRuleCall_15_3_0 = (RuleCall)cTransferAcceptNoteAssignment_15_3.eContents().get(0);
		private final RuleCall cCLOSETerminalRuleCall_15_4 = (RuleCall)cGroup_15.eContents().get(4);
		private final Group cGroup_16 = (Group)cGroup.eContents().get(16);
		private final RuleCall cOPENTerminalRuleCall_16_0 = (RuleCall)cGroup_16.eContents().get(0);
		private final Keyword cUpdateReflectKeyword_16_1 = (Keyword)cGroup_16.eContents().get(1);
		private final Assignment cUpdateReflectAssignment_16_2 = (Assignment)cGroup_16.eContents().get(2);
		private final RuleCall cUpdateReflectATT_UpdateReflectParserRuleCall_16_2_0 = (RuleCall)cUpdateReflectAssignment_16_2.eContents().get(0);
		private final Assignment cUpdateReflectNoteAssignment_16_3 = (Assignment)cGroup_16.eContents().get(3);
		private final RuleCall cUpdateReflectNoteNoteRefParserRuleCall_16_3_0 = (RuleCall)cUpdateReflectNoteAssignment_16_3.eContents().get(0);
		private final RuleCall cCLOSETerminalRuleCall_16_4 = (RuleCall)cGroup_16.eContents().get(4);
		private final Assignment cDescriptionAssignment_17 = (Assignment)cGroup.eContents().get(17);
		private final RuleCall cDescriptionDescriptionParserRuleCall_17_0 = (RuleCall)cDescriptionAssignment_17.eContents().get(0);
		private final Group cGroup_18 = (Group)cGroup.eContents().get(18);
		private final RuleCall cOPENTerminalRuleCall_18_0 = (RuleCall)cGroup_18.eContents().get(0);
		private final Keyword cRoutingSpaceKeyword_18_1 = (Keyword)cGroup_18.eContents().get(1);
		private final Assignment cRoutingSpaceAssignment_18_2 = (Assignment)cGroup_18.eContents().get(2);
		private final RuleCall cRoutingSpaceSTRINGTerminalRuleCall_18_2_0 = (RuleCall)cRoutingSpaceAssignment_18_2.eContents().get(0);
		private final RuleCall cCLOSETerminalRuleCall_18_3 = (RuleCall)cGroup_18.eContents().get(3);
		private final RuleCall cCLOSETerminalRuleCall_19 = (RuleCall)cGroup.eContents().get(19);
		
		//Attribute:
		//	OPEN 'Attribute' OPEN 'Name' name=STRING nameNote=NoteRef? CLOSE
		//	dataType=DataType?
		//	cardinality=Cardinality?
		//	units=Units?
		//	resolution=Resolution?
		//	accuracy=Accuracy?
		//	accuracyCondition=AccuracyCondition? (OPEN 'UpdateType' updateType=ATT_UpdateType updateTypeNote=NoteRef? CLOSE)?
		//	(OPEN 'UpdateCondition' updateCondition=STRING updateConditionNote=NoteRef? CLOSE)? (OPEN 'TransferAccept'
		//	transferAccept=ATT_TransferAccept transferAcceptNote=NoteRef? CLOSE)? (OPEN 'UpdateReflect'
		//	updateReflect=ATT_UpdateReflect updateReflectNote=NoteRef? CLOSE)?
		//	description=Description? (OPEN 'RoutingSpace' routingSpace=STRING CLOSE)? //TODO - LINK
		//	CLOSE;
		@Override public ParserRule getRule() { return rule; }
		
		//OPEN 'Attribute' OPEN 'Name' name=STRING nameNote=NoteRef? CLOSE dataType=DataType? cardinality=Cardinality?
		//units=Units? resolution=Resolution? accuracy=Accuracy? accuracyCondition=AccuracyCondition? (OPEN 'UpdateType'
		//updateType=ATT_UpdateType updateTypeNote=NoteRef? CLOSE)? (OPEN 'UpdateCondition' updateCondition=STRING
		//updateConditionNote=NoteRef? CLOSE)? (OPEN 'TransferAccept' transferAccept=ATT_TransferAccept
		//transferAcceptNote=NoteRef? CLOSE)? (OPEN 'UpdateReflect' updateReflect=ATT_UpdateReflect updateReflectNote=NoteRef?
		//CLOSE)? description=Description? (OPEN 'RoutingSpace' routingSpace=STRING CLOSE)? //TODO - LINK
		//CLOSE
		public Group getGroup() { return cGroup; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_0() { return cOPENTerminalRuleCall_0; }
		
		//'Attribute'
		public Keyword getAttributeKeyword_1() { return cAttributeKeyword_1; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_2() { return cOPENTerminalRuleCall_2; }
		
		//'Name'
		public Keyword getNameKeyword_3() { return cNameKeyword_3; }
		
		//name=STRING
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_4_0() { return cNameSTRINGTerminalRuleCall_4_0; }
		
		//nameNote=NoteRef?
		public Assignment getNameNoteAssignment_5() { return cNameNoteAssignment_5; }
		
		//NoteRef
		public RuleCall getNameNoteNoteRefParserRuleCall_5_0() { return cNameNoteNoteRefParserRuleCall_5_0; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_6() { return cCLOSETerminalRuleCall_6; }
		
		//dataType=DataType?
		public Assignment getDataTypeAssignment_7() { return cDataTypeAssignment_7; }
		
		//DataType
		public RuleCall getDataTypeDataTypeParserRuleCall_7_0() { return cDataTypeDataTypeParserRuleCall_7_0; }
		
		//cardinality=Cardinality?
		public Assignment getCardinalityAssignment_8() { return cCardinalityAssignment_8; }
		
		//Cardinality
		public RuleCall getCardinalityCardinalityParserRuleCall_8_0() { return cCardinalityCardinalityParserRuleCall_8_0; }
		
		//units=Units?
		public Assignment getUnitsAssignment_9() { return cUnitsAssignment_9; }
		
		//Units
		public RuleCall getUnitsUnitsParserRuleCall_9_0() { return cUnitsUnitsParserRuleCall_9_0; }
		
		//resolution=Resolution?
		public Assignment getResolutionAssignment_10() { return cResolutionAssignment_10; }
		
		//Resolution
		public RuleCall getResolutionResolutionParserRuleCall_10_0() { return cResolutionResolutionParserRuleCall_10_0; }
		
		//accuracy=Accuracy?
		public Assignment getAccuracyAssignment_11() { return cAccuracyAssignment_11; }
		
		//Accuracy
		public RuleCall getAccuracyAccuracyParserRuleCall_11_0() { return cAccuracyAccuracyParserRuleCall_11_0; }
		
		//accuracyCondition=AccuracyCondition?
		public Assignment getAccuracyConditionAssignment_12() { return cAccuracyConditionAssignment_12; }
		
		//AccuracyCondition
		public RuleCall getAccuracyConditionAccuracyConditionParserRuleCall_12_0() { return cAccuracyConditionAccuracyConditionParserRuleCall_12_0; }
		
		//(OPEN 'UpdateType' updateType=ATT_UpdateType updateTypeNote=NoteRef? CLOSE)?
		public Group getGroup_13() { return cGroup_13; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_13_0() { return cOPENTerminalRuleCall_13_0; }
		
		//'UpdateType'
		public Keyword getUpdateTypeKeyword_13_1() { return cUpdateTypeKeyword_13_1; }
		
		//updateType=ATT_UpdateType
		public Assignment getUpdateTypeAssignment_13_2() { return cUpdateTypeAssignment_13_2; }
		
		//ATT_UpdateType
		public RuleCall getUpdateTypeATT_UpdateTypeParserRuleCall_13_2_0() { return cUpdateTypeATT_UpdateTypeParserRuleCall_13_2_0; }
		
		//updateTypeNote=NoteRef?
		public Assignment getUpdateTypeNoteAssignment_13_3() { return cUpdateTypeNoteAssignment_13_3; }
		
		//NoteRef
		public RuleCall getUpdateTypeNoteNoteRefParserRuleCall_13_3_0() { return cUpdateTypeNoteNoteRefParserRuleCall_13_3_0; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_13_4() { return cCLOSETerminalRuleCall_13_4; }
		
		//(OPEN 'UpdateCondition' updateCondition=STRING updateConditionNote=NoteRef? CLOSE)?
		public Group getGroup_14() { return cGroup_14; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_14_0() { return cOPENTerminalRuleCall_14_0; }
		
		//'UpdateCondition'
		public Keyword getUpdateConditionKeyword_14_1() { return cUpdateConditionKeyword_14_1; }
		
		//updateCondition=STRING
		public Assignment getUpdateConditionAssignment_14_2() { return cUpdateConditionAssignment_14_2; }
		
		//STRING
		public RuleCall getUpdateConditionSTRINGTerminalRuleCall_14_2_0() { return cUpdateConditionSTRINGTerminalRuleCall_14_2_0; }
		
		//updateConditionNote=NoteRef?
		public Assignment getUpdateConditionNoteAssignment_14_3() { return cUpdateConditionNoteAssignment_14_3; }
		
		//NoteRef
		public RuleCall getUpdateConditionNoteNoteRefParserRuleCall_14_3_0() { return cUpdateConditionNoteNoteRefParserRuleCall_14_3_0; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_14_4() { return cCLOSETerminalRuleCall_14_4; }
		
		//(OPEN 'TransferAccept' transferAccept=ATT_TransferAccept transferAcceptNote=NoteRef? CLOSE)?
		public Group getGroup_15() { return cGroup_15; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_15_0() { return cOPENTerminalRuleCall_15_0; }
		
		//'TransferAccept'
		public Keyword getTransferAcceptKeyword_15_1() { return cTransferAcceptKeyword_15_1; }
		
		//transferAccept=ATT_TransferAccept
		public Assignment getTransferAcceptAssignment_15_2() { return cTransferAcceptAssignment_15_2; }
		
		//ATT_TransferAccept
		public RuleCall getTransferAcceptATT_TransferAcceptParserRuleCall_15_2_0() { return cTransferAcceptATT_TransferAcceptParserRuleCall_15_2_0; }
		
		//transferAcceptNote=NoteRef?
		public Assignment getTransferAcceptNoteAssignment_15_3() { return cTransferAcceptNoteAssignment_15_3; }
		
		//NoteRef
		public RuleCall getTransferAcceptNoteNoteRefParserRuleCall_15_3_0() { return cTransferAcceptNoteNoteRefParserRuleCall_15_3_0; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_15_4() { return cCLOSETerminalRuleCall_15_4; }
		
		//(OPEN 'UpdateReflect' updateReflect=ATT_UpdateReflect updateReflectNote=NoteRef? CLOSE)?
		public Group getGroup_16() { return cGroup_16; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_16_0() { return cOPENTerminalRuleCall_16_0; }
		
		//'UpdateReflect'
		public Keyword getUpdateReflectKeyword_16_1() { return cUpdateReflectKeyword_16_1; }
		
		//updateReflect=ATT_UpdateReflect
		public Assignment getUpdateReflectAssignment_16_2() { return cUpdateReflectAssignment_16_2; }
		
		//ATT_UpdateReflect
		public RuleCall getUpdateReflectATT_UpdateReflectParserRuleCall_16_2_0() { return cUpdateReflectATT_UpdateReflectParserRuleCall_16_2_0; }
		
		//updateReflectNote=NoteRef?
		public Assignment getUpdateReflectNoteAssignment_16_3() { return cUpdateReflectNoteAssignment_16_3; }
		
		//NoteRef
		public RuleCall getUpdateReflectNoteNoteRefParserRuleCall_16_3_0() { return cUpdateReflectNoteNoteRefParserRuleCall_16_3_0; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_16_4() { return cCLOSETerminalRuleCall_16_4; }
		
		//description=Description?
		public Assignment getDescriptionAssignment_17() { return cDescriptionAssignment_17; }
		
		//Description
		public RuleCall getDescriptionDescriptionParserRuleCall_17_0() { return cDescriptionDescriptionParserRuleCall_17_0; }
		
		//(OPEN 'RoutingSpace' routingSpace=STRING CLOSE)?
		public Group getGroup_18() { return cGroup_18; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_18_0() { return cOPENTerminalRuleCall_18_0; }
		
		//'RoutingSpace'
		public Keyword getRoutingSpaceKeyword_18_1() { return cRoutingSpaceKeyword_18_1; }
		
		//routingSpace=STRING
		public Assignment getRoutingSpaceAssignment_18_2() { return cRoutingSpaceAssignment_18_2; }
		
		//STRING
		public RuleCall getRoutingSpaceSTRINGTerminalRuleCall_18_2_0() { return cRoutingSpaceSTRINGTerminalRuleCall_18_2_0; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_18_3() { return cCLOSETerminalRuleCall_18_3; }
		
		////TODO - LINK
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_19() { return cCLOSETerminalRuleCall_19; }
	}
	public class ATT_UpdateTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.cohesionforce.hla.dsl.Omt.ATT_UpdateType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cStaticKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cPeriodicKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cConditionalKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		
		//ATT_UpdateType:
		//	'Static' | 'Periodic' | 'Conditional';
		@Override public ParserRule getRule() { return rule; }
		
		//'Static' | 'Periodic' | 'Conditional'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'Static'
		public Keyword getStaticKeyword_0() { return cStaticKeyword_0; }
		
		//'Periodic'
		public Keyword getPeriodicKeyword_1() { return cPeriodicKeyword_1; }
		
		//'Conditional'
		public Keyword getConditionalKeyword_2() { return cConditionalKeyword_2; }
	}
	public class ATT_TransferAcceptElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.cohesionforce.hla.dsl.Omt.ATT_TransferAccept");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cAKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cTAKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cNKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		
		//ATT_TransferAccept:
		//	'T' | 'A' | 'TA' | 'N';
		@Override public ParserRule getRule() { return rule; }
		
		//'T' | 'A' | 'TA' | 'N'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'T'
		public Keyword getTKeyword_0() { return cTKeyword_0; }
		
		//'A'
		public Keyword getAKeyword_1() { return cAKeyword_1; }
		
		//'TA'
		public Keyword getTAKeyword_2() { return cTAKeyword_2; }
		
		//'N'
		public Keyword getNKeyword_3() { return cNKeyword_3; }
	}
	public class ATT_UpdateReflectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.cohesionforce.hla.dsl.Omt.ATT_UpdateReflect");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cUKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cRKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cURKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		
		//ATT_UpdateReflect:
		//	'U' | 'R' | 'UR';
		@Override public ParserRule getRule() { return rule; }
		
		//'U' | 'R' | 'UR'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'U'
		public Keyword getUKeyword_0() { return cUKeyword_0; }
		
		//'R'
		public Keyword getRKeyword_1() { return cRKeyword_1; }
		
		//'UR'
		public Keyword getURKeyword_2() { return cURKeyword_2; }
	}
	public class EnumeratedDataTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.cohesionforce.hla.dsl.Omt.EnumeratedDataType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOPENTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cEnumeratedDataTypeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cOPENTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Keyword cNameKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameSTRINGTerminalRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final Assignment cNoteAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cNoteNoteRefParserRuleCall_5_0 = (RuleCall)cNoteAssignment_5.eContents().get(0);
		private final RuleCall cCLOSETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final RuleCall cOPENTerminalRuleCall_7_0 = (RuleCall)cGroup_7.eContents().get(0);
		private final Keyword cMOMEnumeratedDataTypeKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Assignment cIsMOMEnumeratedDataTypeAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final Alternatives cIsMOMEnumeratedDataTypeAlternatives_7_2_0 = (Alternatives)cIsMOMEnumeratedDataTypeAssignment_7_2.eContents().get(0);
		private final Keyword cIsMOMEnumeratedDataTypeTRUEKeyword_7_2_0_0 = (Keyword)cIsMOMEnumeratedDataTypeAlternatives_7_2_0.eContents().get(0);
		private final Keyword cIsMOMEnumeratedDataTypeFALSEKeyword_7_2_0_1 = (Keyword)cIsMOMEnumeratedDataTypeAlternatives_7_2_0.eContents().get(1);
		private final RuleCall cCLOSETerminalRuleCall_7_3 = (RuleCall)cGroup_7.eContents().get(3);
		private final Assignment cLiteralsAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cLiteralsEnumerationParserRuleCall_8_0 = (RuleCall)cLiteralsAssignment_8.eContents().get(0);
		private final RuleCall cCLOSETerminalRuleCall_9 = (RuleCall)cGroup.eContents().get(9);
		
		//EnumeratedDataType:
		//	OPEN 'EnumeratedDataType' OPEN 'Name' name=STRING note=NoteRef? CLOSE (OPEN 'MOMEnumeratedDataType'
		//	isMOMEnumeratedDataType=('TRUE' | 'FALSE') CLOSE)?
		//	literals+=Enumeration+
		//	CLOSE;
		@Override public ParserRule getRule() { return rule; }
		
		//OPEN 'EnumeratedDataType' OPEN 'Name' name=STRING note=NoteRef? CLOSE (OPEN 'MOMEnumeratedDataType'
		//isMOMEnumeratedDataType=('TRUE' | 'FALSE') CLOSE)? literals+=Enumeration+ CLOSE
		public Group getGroup() { return cGroup; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_0() { return cOPENTerminalRuleCall_0; }
		
		//'EnumeratedDataType'
		public Keyword getEnumeratedDataTypeKeyword_1() { return cEnumeratedDataTypeKeyword_1; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_2() { return cOPENTerminalRuleCall_2; }
		
		//'Name'
		public Keyword getNameKeyword_3() { return cNameKeyword_3; }
		
		//name=STRING
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_4_0() { return cNameSTRINGTerminalRuleCall_4_0; }
		
		//note=NoteRef?
		public Assignment getNoteAssignment_5() { return cNoteAssignment_5; }
		
		//NoteRef
		public RuleCall getNoteNoteRefParserRuleCall_5_0() { return cNoteNoteRefParserRuleCall_5_0; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_6() { return cCLOSETerminalRuleCall_6; }
		
		//(OPEN 'MOMEnumeratedDataType' isMOMEnumeratedDataType=('TRUE' | 'FALSE') CLOSE)?
		public Group getGroup_7() { return cGroup_7; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_7_0() { return cOPENTerminalRuleCall_7_0; }
		
		//'MOMEnumeratedDataType'
		public Keyword getMOMEnumeratedDataTypeKeyword_7_1() { return cMOMEnumeratedDataTypeKeyword_7_1; }
		
		//isMOMEnumeratedDataType=('TRUE' | 'FALSE')
		public Assignment getIsMOMEnumeratedDataTypeAssignment_7_2() { return cIsMOMEnumeratedDataTypeAssignment_7_2; }
		
		//('TRUE' | 'FALSE')
		public Alternatives getIsMOMEnumeratedDataTypeAlternatives_7_2_0() { return cIsMOMEnumeratedDataTypeAlternatives_7_2_0; }
		
		//'TRUE'
		public Keyword getIsMOMEnumeratedDataTypeTRUEKeyword_7_2_0_0() { return cIsMOMEnumeratedDataTypeTRUEKeyword_7_2_0_0; }
		
		//'FALSE'
		public Keyword getIsMOMEnumeratedDataTypeFALSEKeyword_7_2_0_1() { return cIsMOMEnumeratedDataTypeFALSEKeyword_7_2_0_1; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_7_3() { return cCLOSETerminalRuleCall_7_3; }
		
		//literals+=Enumeration+
		public Assignment getLiteralsAssignment_8() { return cLiteralsAssignment_8; }
		
		//Enumeration
		public RuleCall getLiteralsEnumerationParserRuleCall_8_0() { return cLiteralsEnumerationParserRuleCall_8_0; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_9() { return cCLOSETerminalRuleCall_9; }
	}
	public class EnumerationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.cohesionforce.hla.dsl.Omt.Enumeration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOPENTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cEnumerationKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cOPENTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Keyword cEnumeratorKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cLiteralAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cLiteralSTRINGTerminalRuleCall_4_0 = (RuleCall)cLiteralAssignment_4.eContents().get(0);
		private final Assignment cEnumeratorNoteAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cEnumeratorNoteNoteRefParserRuleCall_5_0 = (RuleCall)cEnumeratorNoteAssignment_5.eContents().get(0);
		private final RuleCall cCLOSETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		private final RuleCall cOPENTerminalRuleCall_7 = (RuleCall)cGroup.eContents().get(7);
		private final Keyword cRepresentationKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cValueAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cValueINTTerminalRuleCall_9_0 = (RuleCall)cValueAssignment_9.eContents().get(0);
		private final Assignment cRepresentationNoteAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cRepresentationNoteNoteRefParserRuleCall_10_0 = (RuleCall)cRepresentationNoteAssignment_10.eContents().get(0);
		private final RuleCall cCLOSETerminalRuleCall_11 = (RuleCall)cGroup.eContents().get(11);
		private final RuleCall cCLOSETerminalRuleCall_12 = (RuleCall)cGroup.eContents().get(12);
		
		//Enumeration:
		//	OPEN 'Enumeration' OPEN 'Enumerator' literal=STRING enumeratorNote=NoteRef? CLOSE
		//	OPEN 'Representation' value=INT representationNote=NoteRef? CLOSE
		//	CLOSE;
		@Override public ParserRule getRule() { return rule; }
		
		//OPEN 'Enumeration' OPEN 'Enumerator' literal=STRING enumeratorNote=NoteRef? CLOSE OPEN 'Representation' value=INT
		//representationNote=NoteRef? CLOSE CLOSE
		public Group getGroup() { return cGroup; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_0() { return cOPENTerminalRuleCall_0; }
		
		//'Enumeration'
		public Keyword getEnumerationKeyword_1() { return cEnumerationKeyword_1; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_2() { return cOPENTerminalRuleCall_2; }
		
		//'Enumerator'
		public Keyword getEnumeratorKeyword_3() { return cEnumeratorKeyword_3; }
		
		//literal=STRING
		public Assignment getLiteralAssignment_4() { return cLiteralAssignment_4; }
		
		//STRING
		public RuleCall getLiteralSTRINGTerminalRuleCall_4_0() { return cLiteralSTRINGTerminalRuleCall_4_0; }
		
		//enumeratorNote=NoteRef?
		public Assignment getEnumeratorNoteAssignment_5() { return cEnumeratorNoteAssignment_5; }
		
		//NoteRef
		public RuleCall getEnumeratorNoteNoteRefParserRuleCall_5_0() { return cEnumeratorNoteNoteRefParserRuleCall_5_0; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_6() { return cCLOSETerminalRuleCall_6; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_7() { return cOPENTerminalRuleCall_7; }
		
		//'Representation'
		public Keyword getRepresentationKeyword_8() { return cRepresentationKeyword_8; }
		
		//value=INT
		public Assignment getValueAssignment_9() { return cValueAssignment_9; }
		
		//INT
		public RuleCall getValueINTTerminalRuleCall_9_0() { return cValueINTTerminalRuleCall_9_0; }
		
		//representationNote=NoteRef?
		public Assignment getRepresentationNoteAssignment_10() { return cRepresentationNoteAssignment_10; }
		
		//NoteRef
		public RuleCall getRepresentationNoteNoteRefParserRuleCall_10_0() { return cRepresentationNoteNoteRefParserRuleCall_10_0; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_11() { return cCLOSETerminalRuleCall_11; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_12() { return cCLOSETerminalRuleCall_12; }
	}
	public class ComplexDataTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.cohesionforce.hla.dsl.Omt.ComplexDataType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOPENTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cComplexDataTypeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cOPENTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Keyword cNameKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameSTRINGTerminalRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final Assignment cNoteAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cNoteNoteRefParserRuleCall_5_0 = (RuleCall)cNoteAssignment_5.eContents().get(0);
		private final RuleCall cCLOSETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final RuleCall cOPENTerminalRuleCall_7_0 = (RuleCall)cGroup_7.eContents().get(0);
		private final Keyword cMOMComplexDataTypeKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Assignment cIsMOMComplexDataTypeAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final Alternatives cIsMOMComplexDataTypeAlternatives_7_2_0 = (Alternatives)cIsMOMComplexDataTypeAssignment_7_2.eContents().get(0);
		private final Keyword cIsMOMComplexDataTypeTRUEKeyword_7_2_0_0 = (Keyword)cIsMOMComplexDataTypeAlternatives_7_2_0.eContents().get(0);
		private final Keyword cIsMOMComplexDataTypeFALSEKeyword_7_2_0_1 = (Keyword)cIsMOMComplexDataTypeAlternatives_7_2_0.eContents().get(1);
		private final RuleCall cCLOSETerminalRuleCall_7_3 = (RuleCall)cGroup_7.eContents().get(3);
		private final Assignment cComponentsAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cComponentsComplexComponentParserRuleCall_8_0 = (RuleCall)cComponentsAssignment_8.eContents().get(0);
		private final RuleCall cCLOSETerminalRuleCall_9 = (RuleCall)cGroup.eContents().get(9);
		
		//ComplexDataType:
		//	OPEN 'ComplexDataType' OPEN 'Name' name=STRING note=NoteRef? CLOSE (OPEN 'MOMComplexDataType'
		//	isMOMComplexDataType=('TRUE' | 'FALSE') CLOSE)?
		//	components+=ComplexComponent+
		//	CLOSE;
		@Override public ParserRule getRule() { return rule; }
		
		//OPEN 'ComplexDataType' OPEN 'Name' name=STRING note=NoteRef? CLOSE (OPEN 'MOMComplexDataType'
		//isMOMComplexDataType=('TRUE' | 'FALSE') CLOSE)? components+=ComplexComponent+ CLOSE
		public Group getGroup() { return cGroup; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_0() { return cOPENTerminalRuleCall_0; }
		
		//'ComplexDataType'
		public Keyword getComplexDataTypeKeyword_1() { return cComplexDataTypeKeyword_1; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_2() { return cOPENTerminalRuleCall_2; }
		
		//'Name'
		public Keyword getNameKeyword_3() { return cNameKeyword_3; }
		
		//name=STRING
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_4_0() { return cNameSTRINGTerminalRuleCall_4_0; }
		
		//note=NoteRef?
		public Assignment getNoteAssignment_5() { return cNoteAssignment_5; }
		
		//NoteRef
		public RuleCall getNoteNoteRefParserRuleCall_5_0() { return cNoteNoteRefParserRuleCall_5_0; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_6() { return cCLOSETerminalRuleCall_6; }
		
		//(OPEN 'MOMComplexDataType' isMOMComplexDataType=('TRUE' | 'FALSE') CLOSE)?
		public Group getGroup_7() { return cGroup_7; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_7_0() { return cOPENTerminalRuleCall_7_0; }
		
		//'MOMComplexDataType'
		public Keyword getMOMComplexDataTypeKeyword_7_1() { return cMOMComplexDataTypeKeyword_7_1; }
		
		//isMOMComplexDataType=('TRUE' | 'FALSE')
		public Assignment getIsMOMComplexDataTypeAssignment_7_2() { return cIsMOMComplexDataTypeAssignment_7_2; }
		
		//('TRUE' | 'FALSE')
		public Alternatives getIsMOMComplexDataTypeAlternatives_7_2_0() { return cIsMOMComplexDataTypeAlternatives_7_2_0; }
		
		//'TRUE'
		public Keyword getIsMOMComplexDataTypeTRUEKeyword_7_2_0_0() { return cIsMOMComplexDataTypeTRUEKeyword_7_2_0_0; }
		
		//'FALSE'
		public Keyword getIsMOMComplexDataTypeFALSEKeyword_7_2_0_1() { return cIsMOMComplexDataTypeFALSEKeyword_7_2_0_1; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_7_3() { return cCLOSETerminalRuleCall_7_3; }
		
		//components+=ComplexComponent+
		public Assignment getComponentsAssignment_8() { return cComponentsAssignment_8; }
		
		//ComplexComponent
		public RuleCall getComponentsComplexComponentParserRuleCall_8_0() { return cComponentsComplexComponentParserRuleCall_8_0; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_9() { return cCLOSETerminalRuleCall_9; }
	}
	public class ComplexComponentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.cohesionforce.hla.dsl.Omt.ComplexComponent");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOPENTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cComplexComponentKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cPositionAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cPositionPositionParserRuleCall_2_0 = (RuleCall)cPositionAssignment_2.eContents().get(0);
		private final Assignment cFieldNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cFieldNameFieldNameParserRuleCall_3_0 = (RuleCall)cFieldNameAssignment_3.eContents().get(0);
		private final Assignment cDataTypeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cDataTypeDataTypeParserRuleCall_4_0 = (RuleCall)cDataTypeAssignment_4.eContents().get(0);
		private final Assignment cCardinalityAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cCardinalityCardinalityParserRuleCall_5_0 = (RuleCall)cCardinalityAssignment_5.eContents().get(0);
		private final Assignment cUnitsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cUnitsUnitsParserRuleCall_6_0 = (RuleCall)cUnitsAssignment_6.eContents().get(0);
		private final Assignment cResolutionAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cResolutionResolutionParserRuleCall_7_0 = (RuleCall)cResolutionAssignment_7.eContents().get(0);
		private final Assignment cAccuracyAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cAccuracyAccuracyParserRuleCall_8_0 = (RuleCall)cAccuracyAssignment_8.eContents().get(0);
		private final Assignment cAccuracyConditionAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cAccuracyConditionAccuracyConditionParserRuleCall_9_0 = (RuleCall)cAccuracyConditionAssignment_9.eContents().get(0);
		private final RuleCall cCLOSETerminalRuleCall_10 = (RuleCall)cGroup.eContents().get(10);
		
		//ComplexComponent:
		//	OPEN 'ComplexComponent'
		//	position=Position?
		//	fieldName=FieldName
		//	dataType=DataType?
		//	cardinality=Cardinality?
		//	units=Units?
		//	resolution=Resolution?
		//	accuracy=Accuracy?
		//	accuracyCondition=AccuracyCondition?
		//	CLOSE;
		@Override public ParserRule getRule() { return rule; }
		
		//OPEN 'ComplexComponent' position=Position? fieldName=FieldName dataType=DataType? cardinality=Cardinality? units=Units?
		//resolution=Resolution? accuracy=Accuracy? accuracyCondition=AccuracyCondition? CLOSE
		public Group getGroup() { return cGroup; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_0() { return cOPENTerminalRuleCall_0; }
		
		//'ComplexComponent'
		public Keyword getComplexComponentKeyword_1() { return cComplexComponentKeyword_1; }
		
		//position=Position?
		public Assignment getPositionAssignment_2() { return cPositionAssignment_2; }
		
		//Position
		public RuleCall getPositionPositionParserRuleCall_2_0() { return cPositionPositionParserRuleCall_2_0; }
		
		//fieldName=FieldName
		public Assignment getFieldNameAssignment_3() { return cFieldNameAssignment_3; }
		
		//FieldName
		public RuleCall getFieldNameFieldNameParserRuleCall_3_0() { return cFieldNameFieldNameParserRuleCall_3_0; }
		
		//dataType=DataType?
		public Assignment getDataTypeAssignment_4() { return cDataTypeAssignment_4; }
		
		//DataType
		public RuleCall getDataTypeDataTypeParserRuleCall_4_0() { return cDataTypeDataTypeParserRuleCall_4_0; }
		
		//cardinality=Cardinality?
		public Assignment getCardinalityAssignment_5() { return cCardinalityAssignment_5; }
		
		//Cardinality
		public RuleCall getCardinalityCardinalityParserRuleCall_5_0() { return cCardinalityCardinalityParserRuleCall_5_0; }
		
		//units=Units?
		public Assignment getUnitsAssignment_6() { return cUnitsAssignment_6; }
		
		//Units
		public RuleCall getUnitsUnitsParserRuleCall_6_0() { return cUnitsUnitsParserRuleCall_6_0; }
		
		//resolution=Resolution?
		public Assignment getResolutionAssignment_7() { return cResolutionAssignment_7; }
		
		//Resolution
		public RuleCall getResolutionResolutionParserRuleCall_7_0() { return cResolutionResolutionParserRuleCall_7_0; }
		
		//accuracy=Accuracy?
		public Assignment getAccuracyAssignment_8() { return cAccuracyAssignment_8; }
		
		//Accuracy
		public RuleCall getAccuracyAccuracyParserRuleCall_8_0() { return cAccuracyAccuracyParserRuleCall_8_0; }
		
		//accuracyCondition=AccuracyCondition?
		public Assignment getAccuracyConditionAssignment_9() { return cAccuracyConditionAssignment_9; }
		
		//AccuracyCondition
		public RuleCall getAccuracyConditionAccuracyConditionParserRuleCall_9_0() { return cAccuracyConditionAccuracyConditionParserRuleCall_9_0; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_10() { return cCLOSETerminalRuleCall_10; }
	}
	public class AccuracyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.cohesionforce.hla.dsl.Omt.Accuracy");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOPENTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cAccuracyKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cAccuracyAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cAccuracySTRINGTerminalRuleCall_2_0 = (RuleCall)cAccuracyAssignment_2.eContents().get(0);
		private final Assignment cAccuracyNoteAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cAccuracyNoteNoteRefParserRuleCall_3_0 = (RuleCall)cAccuracyNoteAssignment_3.eContents().get(0);
		private final RuleCall cCLOSETerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//Accuracy:
		//	OPEN 'Accuracy' accuracy=STRING accuracyNote=NoteRef? CLOSE;
		@Override public ParserRule getRule() { return rule; }
		
		//OPEN 'Accuracy' accuracy=STRING accuracyNote=NoteRef? CLOSE
		public Group getGroup() { return cGroup; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_0() { return cOPENTerminalRuleCall_0; }
		
		//'Accuracy'
		public Keyword getAccuracyKeyword_1() { return cAccuracyKeyword_1; }
		
		//accuracy=STRING
		public Assignment getAccuracyAssignment_2() { return cAccuracyAssignment_2; }
		
		//STRING
		public RuleCall getAccuracySTRINGTerminalRuleCall_2_0() { return cAccuracySTRINGTerminalRuleCall_2_0; }
		
		//accuracyNote=NoteRef?
		public Assignment getAccuracyNoteAssignment_3() { return cAccuracyNoteAssignment_3; }
		
		//NoteRef
		public RuleCall getAccuracyNoteNoteRefParserRuleCall_3_0() { return cAccuracyNoteNoteRefParserRuleCall_3_0; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_4() { return cCLOSETerminalRuleCall_4; }
	}
	public class AccuracyConditionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.cohesionforce.hla.dsl.Omt.AccuracyCondition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOPENTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cAccuracyConditionKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cAccuracyConditionAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cAccuracyConditionSTRINGTerminalRuleCall_2_0 = (RuleCall)cAccuracyConditionAssignment_2.eContents().get(0);
		private final Assignment cAccuracyConditionNoteAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cAccuracyConditionNoteNoteRefParserRuleCall_3_0 = (RuleCall)cAccuracyConditionNoteAssignment_3.eContents().get(0);
		private final RuleCall cCLOSETerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//AccuracyCondition:
		//	OPEN 'AccuracyCondition' accuracyCondition=STRING accuracyConditionNote=NoteRef? CLOSE;
		@Override public ParserRule getRule() { return rule; }
		
		//OPEN 'AccuracyCondition' accuracyCondition=STRING accuracyConditionNote=NoteRef? CLOSE
		public Group getGroup() { return cGroup; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_0() { return cOPENTerminalRuleCall_0; }
		
		//'AccuracyCondition'
		public Keyword getAccuracyConditionKeyword_1() { return cAccuracyConditionKeyword_1; }
		
		//accuracyCondition=STRING
		public Assignment getAccuracyConditionAssignment_2() { return cAccuracyConditionAssignment_2; }
		
		//STRING
		public RuleCall getAccuracyConditionSTRINGTerminalRuleCall_2_0() { return cAccuracyConditionSTRINGTerminalRuleCall_2_0; }
		
		//accuracyConditionNote=NoteRef?
		public Assignment getAccuracyConditionNoteAssignment_3() { return cAccuracyConditionNoteAssignment_3; }
		
		//NoteRef
		public RuleCall getAccuracyConditionNoteNoteRefParserRuleCall_3_0() { return cAccuracyConditionNoteNoteRefParserRuleCall_3_0; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_4() { return cCLOSETerminalRuleCall_4; }
	}
	public class ResolutionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.cohesionforce.hla.dsl.Omt.Resolution");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOPENTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cResolutionKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cResolutionAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cResolutionSTRINGTerminalRuleCall_2_0 = (RuleCall)cResolutionAssignment_2.eContents().get(0);
		private final Assignment cResolutionNoteAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cResolutionNoteNoteRefParserRuleCall_3_0 = (RuleCall)cResolutionNoteAssignment_3.eContents().get(0);
		private final RuleCall cCLOSETerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//Resolution:
		//	OPEN 'Resolution' resolution=STRING resolutionNote=NoteRef? CLOSE;
		@Override public ParserRule getRule() { return rule; }
		
		//OPEN 'Resolution' resolution=STRING resolutionNote=NoteRef? CLOSE
		public Group getGroup() { return cGroup; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_0() { return cOPENTerminalRuleCall_0; }
		
		//'Resolution'
		public Keyword getResolutionKeyword_1() { return cResolutionKeyword_1; }
		
		//resolution=STRING
		public Assignment getResolutionAssignment_2() { return cResolutionAssignment_2; }
		
		//STRING
		public RuleCall getResolutionSTRINGTerminalRuleCall_2_0() { return cResolutionSTRINGTerminalRuleCall_2_0; }
		
		//resolutionNote=NoteRef?
		public Assignment getResolutionNoteAssignment_3() { return cResolutionNoteAssignment_3; }
		
		//NoteRef
		public RuleCall getResolutionNoteNoteRefParserRuleCall_3_0() { return cResolutionNoteNoteRefParserRuleCall_3_0; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_4() { return cCLOSETerminalRuleCall_4; }
	}
	public class PositionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.cohesionforce.hla.dsl.Omt.Position");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOPENTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cPositionKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cPositionAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cPositionSTRINGTerminalRuleCall_2_0 = (RuleCall)cPositionAssignment_2.eContents().get(0);
		private final RuleCall cCLOSETerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//Position:
		//	OPEN 'Position' position=STRING CLOSE;
		@Override public ParserRule getRule() { return rule; }
		
		//OPEN 'Position' position=STRING CLOSE
		public Group getGroup() { return cGroup; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_0() { return cOPENTerminalRuleCall_0; }
		
		//'Position'
		public Keyword getPositionKeyword_1() { return cPositionKeyword_1; }
		
		//position=STRING
		public Assignment getPositionAssignment_2() { return cPositionAssignment_2; }
		
		//STRING
		public RuleCall getPositionSTRINGTerminalRuleCall_2_0() { return cPositionSTRINGTerminalRuleCall_2_0; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_3() { return cCLOSETerminalRuleCall_3; }
	}
	public class DataTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.cohesionforce.hla.dsl.Omt.DataType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOPENTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cDataTypeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Assignment cRefTypeAssignment_2_0 = (Assignment)cAlternatives_2.eContents().get(0);
		private final CrossReference cRefTypeTypeReferenceCrossReference_2_0_0 = (CrossReference)cRefTypeAssignment_2_0.eContents().get(0);
		private final RuleCall cRefTypeTypeReferenceSTRINGTerminalRuleCall_2_0_0_1 = (RuleCall)cRefTypeTypeReferenceCrossReference_2_0_0.eContents().get(1);
		private final Assignment cDataTypeAssignment_2_1 = (Assignment)cAlternatives_2.eContents().get(1);
		private final RuleCall cDataTypeBASE_DATA_TYPETerminalRuleCall_2_1_0 = (RuleCall)cDataTypeAssignment_2_1.eContents().get(0);
		private final Assignment cDataTypeNodeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cDataTypeNodeNoteRefParserRuleCall_3_0 = (RuleCall)cDataTypeNodeAssignment_3.eContents().get(0);
		private final RuleCall cCLOSETerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//DataType:
		//	OPEN 'DataType' (refType=[TypeReference|STRING] | dataType=BASE_DATA_TYPE) dataTypeNode=NoteRef? CLOSE
		//	//	OPEN 'DataType' dataType=STRING dataTypeNode=NoteRef? CLOSE
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//OPEN 'DataType' (refType=[TypeReference|STRING] | dataType=BASE_DATA_TYPE) dataTypeNode=NoteRef? CLOSE
		public Group getGroup() { return cGroup; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_0() { return cOPENTerminalRuleCall_0; }
		
		//'DataType'
		public Keyword getDataTypeKeyword_1() { return cDataTypeKeyword_1; }
		
		//refType=[TypeReference|STRING] | dataType=BASE_DATA_TYPE
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//refType=[TypeReference|STRING]
		public Assignment getRefTypeAssignment_2_0() { return cRefTypeAssignment_2_0; }
		
		//[TypeReference|STRING]
		public CrossReference getRefTypeTypeReferenceCrossReference_2_0_0() { return cRefTypeTypeReferenceCrossReference_2_0_0; }
		
		//STRING
		public RuleCall getRefTypeTypeReferenceSTRINGTerminalRuleCall_2_0_0_1() { return cRefTypeTypeReferenceSTRINGTerminalRuleCall_2_0_0_1; }
		
		//dataType=BASE_DATA_TYPE
		public Assignment getDataTypeAssignment_2_1() { return cDataTypeAssignment_2_1; }
		
		//BASE_DATA_TYPE
		public RuleCall getDataTypeBASE_DATA_TYPETerminalRuleCall_2_1_0() { return cDataTypeBASE_DATA_TYPETerminalRuleCall_2_1_0; }
		
		//dataTypeNode=NoteRef?
		public Assignment getDataTypeNodeAssignment_3() { return cDataTypeNodeAssignment_3; }
		
		//NoteRef
		public RuleCall getDataTypeNodeNoteRefParserRuleCall_3_0() { return cDataTypeNodeNoteRefParserRuleCall_3_0; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_4() { return cCLOSETerminalRuleCall_4; }
	}
	public class TypeReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.cohesionforce.hla.dsl.Omt.TypeReference");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cComplexDataTypeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cEnumeratedDataTypeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//TypeReference:
		//	ComplexDataType | EnumeratedDataType;
		@Override public ParserRule getRule() { return rule; }
		
		//ComplexDataType | EnumeratedDataType
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ComplexDataType
		public RuleCall getComplexDataTypeParserRuleCall_0() { return cComplexDataTypeParserRuleCall_0; }
		
		//EnumeratedDataType
		public RuleCall getEnumeratedDataTypeParserRuleCall_1() { return cEnumeratedDataTypeParserRuleCall_1; }
	}
	public class FieldNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.cohesionforce.hla.dsl.Omt.FieldName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOPENTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cFieldNameKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameAnyStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Assignment cFieldNameNoteAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cFieldNameNoteNoteRefParserRuleCall_3_0 = (RuleCall)cFieldNameNoteAssignment_3.eContents().get(0);
		private final RuleCall cCLOSETerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//FieldName:
		//	OPEN 'FieldName' name=AnyString fieldNameNote=NoteRef? CLOSE;
		@Override public ParserRule getRule() { return rule; }
		
		//OPEN 'FieldName' name=AnyString fieldNameNote=NoteRef? CLOSE
		public Group getGroup() { return cGroup; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_0() { return cOPENTerminalRuleCall_0; }
		
		//'FieldName'
		public Keyword getFieldNameKeyword_1() { return cFieldNameKeyword_1; }
		
		//name=AnyString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//AnyString
		public RuleCall getNameAnyStringParserRuleCall_2_0() { return cNameAnyStringParserRuleCall_2_0; }
		
		//fieldNameNote=NoteRef?
		public Assignment getFieldNameNoteAssignment_3() { return cFieldNameNoteAssignment_3; }
		
		//NoteRef
		public RuleCall getFieldNameNoteNoteRefParserRuleCall_3_0() { return cFieldNameNoteNoteRefParserRuleCall_3_0; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_4() { return cCLOSETerminalRuleCall_4; }
	}
	public class UnitsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.cohesionforce.hla.dsl.Omt.Units");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOPENTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cUnitsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cUnitsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cUnitsAnyStringParserRuleCall_2_0 = (RuleCall)cUnitsAssignment_2.eContents().get(0);
		private final Assignment cUnitsNoteAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cUnitsNoteNoteRefParserRuleCall_3_0 = (RuleCall)cUnitsNoteAssignment_3.eContents().get(0);
		private final RuleCall cCLOSETerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//Units:
		//	OPEN 'Units' units=AnyString unitsNote=NoteRef? CLOSE;
		@Override public ParserRule getRule() { return rule; }
		
		//OPEN 'Units' units=AnyString unitsNote=NoteRef? CLOSE
		public Group getGroup() { return cGroup; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_0() { return cOPENTerminalRuleCall_0; }
		
		//'Units'
		public Keyword getUnitsKeyword_1() { return cUnitsKeyword_1; }
		
		//units=AnyString
		public Assignment getUnitsAssignment_2() { return cUnitsAssignment_2; }
		
		//AnyString
		public RuleCall getUnitsAnyStringParserRuleCall_2_0() { return cUnitsAnyStringParserRuleCall_2_0; }
		
		//unitsNote=NoteRef?
		public Assignment getUnitsNoteAssignment_3() { return cUnitsNoteAssignment_3; }
		
		//NoteRef
		public RuleCall getUnitsNoteNoteRefParserRuleCall_3_0() { return cUnitsNoteNoteRefParserRuleCall_3_0; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_4() { return cCLOSETerminalRuleCall_4; }
	}
	public class CardinalityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.cohesionforce.hla.dsl.Omt.Cardinality");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOPENTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cCardinalityKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cCardinalityAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cCardinalitySTRINGTerminalRuleCall_2_0 = (RuleCall)cCardinalityAssignment_2.eContents().get(0);
		private final Assignment cCardinalityNoteAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cCardinalityNoteNoteRefParserRuleCall_3_0 = (RuleCall)cCardinalityNoteAssignment_3.eContents().get(0);
		private final RuleCall cCLOSETerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//Cardinality:
		//	OPEN 'Cardinality' cardinality=STRING cardinalityNote=NoteRef? CLOSE;
		@Override public ParserRule getRule() { return rule; }
		
		//OPEN 'Cardinality' cardinality=STRING cardinalityNote=NoteRef? CLOSE
		public Group getGroup() { return cGroup; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_0() { return cOPENTerminalRuleCall_0; }
		
		//'Cardinality'
		public Keyword getCardinalityKeyword_1() { return cCardinalityKeyword_1; }
		
		//cardinality=STRING
		public Assignment getCardinalityAssignment_2() { return cCardinalityAssignment_2; }
		
		//STRING
		public RuleCall getCardinalitySTRINGTerminalRuleCall_2_0() { return cCardinalitySTRINGTerminalRuleCall_2_0; }
		
		//cardinalityNote=NoteRef?
		public Assignment getCardinalityNoteAssignment_3() { return cCardinalityNoteAssignment_3; }
		
		//NoteRef
		public RuleCall getCardinalityNoteNoteRefParserRuleCall_3_0() { return cCardinalityNoteNoteRefParserRuleCall_3_0; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_4() { return cCLOSETerminalRuleCall_4; }
	}
	public class InteractionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.cohesionforce.hla.dsl.Omt.Interaction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOPENTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cInteractionKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cOPENTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Keyword cIDKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cIdAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cIdINTTerminalRuleCall_4_0 = (RuleCall)cIdAssignment_4.eContents().get(0);
		private final RuleCall cCLOSETerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cOPENTerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		private final Keyword cNameKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cNameAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cNameSTRINGTerminalRuleCall_8_0 = (RuleCall)cNameAssignment_8.eContents().get(0);
		private final Assignment cNameNoteAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cNameNoteNoteRefParserRuleCall_9_0 = (RuleCall)cNameNoteAssignment_9.eContents().get(0);
		private final RuleCall cCLOSETerminalRuleCall_10 = (RuleCall)cGroup.eContents().get(10);
		private final RuleCall cOPENTerminalRuleCall_11 = (RuleCall)cGroup.eContents().get(11);
		private final Keyword cISRTypeKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Assignment cTypeAssignment_13 = (Assignment)cGroup.eContents().get(13);
		private final RuleCall cTypeISRTypeParserRuleCall_13_0 = (RuleCall)cTypeAssignment_13.eContents().get(0);
		private final Assignment cTypeNoteAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final RuleCall cTypeNoteNoteRefParserRuleCall_14_0 = (RuleCall)cTypeNoteAssignment_14.eContents().get(0);
		private final RuleCall cCLOSETerminalRuleCall_15 = (RuleCall)cGroup.eContents().get(15);
		private final Group cGroup_16 = (Group)cGroup.eContents().get(16);
		private final RuleCall cOPENTerminalRuleCall_16_0 = (RuleCall)cGroup_16.eContents().get(0);
		private final Keyword cMOMInteractionKeyword_16_1 = (Keyword)cGroup_16.eContents().get(1);
		private final Assignment cIsMOMInteractionAssignment_16_2 = (Assignment)cGroup_16.eContents().get(2);
		private final Alternatives cIsMOMInteractionAlternatives_16_2_0 = (Alternatives)cIsMOMInteractionAssignment_16_2.eContents().get(0);
		private final Keyword cIsMOMInteractionTRUEKeyword_16_2_0_0 = (Keyword)cIsMOMInteractionAlternatives_16_2_0.eContents().get(0);
		private final Keyword cIsMOMInteractionFALSEKeyword_16_2_0_1 = (Keyword)cIsMOMInteractionAlternatives_16_2_0.eContents().get(1);
		private final RuleCall cCLOSETerminalRuleCall_16_3 = (RuleCall)cGroup_16.eContents().get(3);
		private final Assignment cDescriptionAssignment_17 = (Assignment)cGroup.eContents().get(17);
		private final RuleCall cDescriptionDescriptionParserRuleCall_17_0 = (RuleCall)cDescriptionAssignment_17.eContents().get(0);
		private final Group cGroup_18 = (Group)cGroup.eContents().get(18);
		private final RuleCall cOPENTerminalRuleCall_18_0 = (RuleCall)cGroup_18.eContents().get(0);
		private final Keyword cRoutingSpaceKeyword_18_1 = (Keyword)cGroup_18.eContents().get(1);
		private final Assignment cRoutingSpaceAssignment_18_2 = (Assignment)cGroup_18.eContents().get(2);
		private final CrossReference cRoutingSpaceRoutingSpaceCrossReference_18_2_0 = (CrossReference)cRoutingSpaceAssignment_18_2.eContents().get(0);
		private final RuleCall cRoutingSpaceRoutingSpaceSTRINGTerminalRuleCall_18_2_0_1 = (RuleCall)cRoutingSpaceRoutingSpaceCrossReference_18_2_0.eContents().get(1);
		private final RuleCall cCLOSETerminalRuleCall_18_3 = (RuleCall)cGroup_18.eContents().get(3);
		private final Assignment cComponentsAssignment_19 = (Assignment)cGroup.eContents().get(19);
		private final RuleCall cComponentsInteractionComponentParserRuleCall_19_0 = (RuleCall)cComponentsAssignment_19.eContents().get(0);
		private final RuleCall cCLOSETerminalRuleCall_20 = (RuleCall)cGroup.eContents().get(20);
		
		//Interaction:
		//	OPEN 'Interaction' OPEN 'ID' id=INT CLOSE
		//	OPEN 'Name' name=STRING nameNote=NoteRef? CLOSE
		//	OPEN 'ISRType' type=ISRType typeNote=NoteRef? CLOSE (OPEN 'MOMInteraction' isMOMInteraction=('TRUE' | 'FALSE') CLOSE)?
		//	description+=Description (OPEN 'RoutingSpace' routingSpace=[RoutingSpace|STRING] CLOSE)?
		//	components+=InteractionComponent*
		//	CLOSE;
		@Override public ParserRule getRule() { return rule; }
		
		//OPEN 'Interaction' OPEN 'ID' id=INT CLOSE OPEN 'Name' name=STRING nameNote=NoteRef? CLOSE OPEN 'ISRType' type=ISRType
		//typeNote=NoteRef? CLOSE (OPEN 'MOMInteraction' isMOMInteraction=('TRUE' | 'FALSE') CLOSE)? description+=Description
		//(OPEN 'RoutingSpace' routingSpace=[RoutingSpace|STRING] CLOSE)? components+=InteractionComponent* CLOSE
		public Group getGroup() { return cGroup; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_0() { return cOPENTerminalRuleCall_0; }
		
		//'Interaction'
		public Keyword getInteractionKeyword_1() { return cInteractionKeyword_1; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_2() { return cOPENTerminalRuleCall_2; }
		
		//'ID'
		public Keyword getIDKeyword_3() { return cIDKeyword_3; }
		
		//id=INT
		public Assignment getIdAssignment_4() { return cIdAssignment_4; }
		
		//INT
		public RuleCall getIdINTTerminalRuleCall_4_0() { return cIdINTTerminalRuleCall_4_0; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_5() { return cCLOSETerminalRuleCall_5; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_6() { return cOPENTerminalRuleCall_6; }
		
		//'Name'
		public Keyword getNameKeyword_7() { return cNameKeyword_7; }
		
		//name=STRING
		public Assignment getNameAssignment_8() { return cNameAssignment_8; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_8_0() { return cNameSTRINGTerminalRuleCall_8_0; }
		
		//nameNote=NoteRef?
		public Assignment getNameNoteAssignment_9() { return cNameNoteAssignment_9; }
		
		//NoteRef
		public RuleCall getNameNoteNoteRefParserRuleCall_9_0() { return cNameNoteNoteRefParserRuleCall_9_0; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_10() { return cCLOSETerminalRuleCall_10; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_11() { return cOPENTerminalRuleCall_11; }
		
		//'ISRType'
		public Keyword getISRTypeKeyword_12() { return cISRTypeKeyword_12; }
		
		//type=ISRType
		public Assignment getTypeAssignment_13() { return cTypeAssignment_13; }
		
		//ISRType
		public RuleCall getTypeISRTypeParserRuleCall_13_0() { return cTypeISRTypeParserRuleCall_13_0; }
		
		//typeNote=NoteRef?
		public Assignment getTypeNoteAssignment_14() { return cTypeNoteAssignment_14; }
		
		//NoteRef
		public RuleCall getTypeNoteNoteRefParserRuleCall_14_0() { return cTypeNoteNoteRefParserRuleCall_14_0; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_15() { return cCLOSETerminalRuleCall_15; }
		
		//(OPEN 'MOMInteraction' isMOMInteraction=('TRUE' | 'FALSE') CLOSE)?
		public Group getGroup_16() { return cGroup_16; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_16_0() { return cOPENTerminalRuleCall_16_0; }
		
		//'MOMInteraction'
		public Keyword getMOMInteractionKeyword_16_1() { return cMOMInteractionKeyword_16_1; }
		
		//isMOMInteraction=('TRUE' | 'FALSE')
		public Assignment getIsMOMInteractionAssignment_16_2() { return cIsMOMInteractionAssignment_16_2; }
		
		//('TRUE' | 'FALSE')
		public Alternatives getIsMOMInteractionAlternatives_16_2_0() { return cIsMOMInteractionAlternatives_16_2_0; }
		
		//'TRUE'
		public Keyword getIsMOMInteractionTRUEKeyword_16_2_0_0() { return cIsMOMInteractionTRUEKeyword_16_2_0_0; }
		
		//'FALSE'
		public Keyword getIsMOMInteractionFALSEKeyword_16_2_0_1() { return cIsMOMInteractionFALSEKeyword_16_2_0_1; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_16_3() { return cCLOSETerminalRuleCall_16_3; }
		
		//description+=Description
		public Assignment getDescriptionAssignment_17() { return cDescriptionAssignment_17; }
		
		//Description
		public RuleCall getDescriptionDescriptionParserRuleCall_17_0() { return cDescriptionDescriptionParserRuleCall_17_0; }
		
		//(OPEN 'RoutingSpace' routingSpace=[RoutingSpace|STRING] CLOSE)?
		public Group getGroup_18() { return cGroup_18; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_18_0() { return cOPENTerminalRuleCall_18_0; }
		
		//'RoutingSpace'
		public Keyword getRoutingSpaceKeyword_18_1() { return cRoutingSpaceKeyword_18_1; }
		
		//routingSpace=[RoutingSpace|STRING]
		public Assignment getRoutingSpaceAssignment_18_2() { return cRoutingSpaceAssignment_18_2; }
		
		//[RoutingSpace|STRING]
		public CrossReference getRoutingSpaceRoutingSpaceCrossReference_18_2_0() { return cRoutingSpaceRoutingSpaceCrossReference_18_2_0; }
		
		//STRING
		public RuleCall getRoutingSpaceRoutingSpaceSTRINGTerminalRuleCall_18_2_0_1() { return cRoutingSpaceRoutingSpaceSTRINGTerminalRuleCall_18_2_0_1; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_18_3() { return cCLOSETerminalRuleCall_18_3; }
		
		//components+=InteractionComponent*
		public Assignment getComponentsAssignment_19() { return cComponentsAssignment_19; }
		
		//InteractionComponent
		public RuleCall getComponentsInteractionComponentParserRuleCall_19_0() { return cComponentsInteractionComponentParserRuleCall_19_0; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_20() { return cCLOSETerminalRuleCall_20; }
	}
	public class ISRTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.cohesionforce.hla.dsl.Omt.ISRType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cIKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cSKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cRKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cISKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		private final Keyword cIRKeyword_4 = (Keyword)cAlternatives.eContents().get(4);
		private final Keyword cNKeyword_5 = (Keyword)cAlternatives.eContents().get(5);
		
		//ISRType:
		//	'I' | 'S' | 'R' | 'IS' | 'IR' | 'N';
		@Override public ParserRule getRule() { return rule; }
		
		//'I' | 'S' | 'R' | 'IS' | 'IR' | 'N'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'I'
		public Keyword getIKeyword_0() { return cIKeyword_0; }
		
		//'S'
		public Keyword getSKeyword_1() { return cSKeyword_1; }
		
		//'R'
		public Keyword getRKeyword_2() { return cRKeyword_2; }
		
		//'IS'
		public Keyword getISKeyword_3() { return cISKeyword_3; }
		
		//'IR'
		public Keyword getIRKeyword_4() { return cIRKeyword_4; }
		
		//'N'
		public Keyword getNKeyword_5() { return cNKeyword_5; }
	}
	public class InteractionComponentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.cohesionforce.hla.dsl.Omt.InteractionComponent");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cParameterParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cSuperInteractionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//InteractionComponent:
		//	Parameter | SuperInteraction;
		@Override public ParserRule getRule() { return rule; }
		
		//Parameter | SuperInteraction
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Parameter
		public RuleCall getParameterParserRuleCall_0() { return cParameterParserRuleCall_0; }
		
		//SuperInteraction
		public RuleCall getSuperInteractionParserRuleCall_1() { return cSuperInteractionParserRuleCall_1; }
	}
	public class SuperInteractionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.cohesionforce.hla.dsl.Omt.SuperInteraction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOPENTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cSuperInteractionKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cIDAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cIDINTTerminalRuleCall_2_0 = (RuleCall)cIDAssignment_2.eContents().get(0);
		private final RuleCall cCLOSETerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//SuperInteraction:
		//	OPEN 'SuperInteraction' ID=INT CLOSE;
		@Override public ParserRule getRule() { return rule; }
		
		//OPEN 'SuperInteraction' ID=INT CLOSE
		public Group getGroup() { return cGroup; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_0() { return cOPENTerminalRuleCall_0; }
		
		//'SuperInteraction'
		public Keyword getSuperInteractionKeyword_1() { return cSuperInteractionKeyword_1; }
		
		//ID=INT
		public Assignment getIDAssignment_2() { return cIDAssignment_2; }
		
		//INT
		public RuleCall getIDINTTerminalRuleCall_2_0() { return cIDINTTerminalRuleCall_2_0; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_3() { return cCLOSETerminalRuleCall_3; }
	}
	public class ParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.cohesionforce.hla.dsl.Omt.Parameter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOPENTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cParameterKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cOPENTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Keyword cNameKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameSTRINGTerminalRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final Assignment cNameNoteAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cNameNoteNoteRefParserRuleCall_5_0 = (RuleCall)cNameNoteAssignment_5.eContents().get(0);
		private final RuleCall cCLOSETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		private final Assignment cDataTypeAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cDataTypeDataTypeParserRuleCall_7_0 = (RuleCall)cDataTypeAssignment_7.eContents().get(0);
		private final Assignment cCardinalityAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cCardinalityCardinalityParserRuleCall_8_0 = (RuleCall)cCardinalityAssignment_8.eContents().get(0);
		private final Assignment cUnitsAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cUnitsUnitsParserRuleCall_9_0 = (RuleCall)cUnitsAssignment_9.eContents().get(0);
		private final Assignment cResolutionAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cResolutionResolutionParserRuleCall_10_0 = (RuleCall)cResolutionAssignment_10.eContents().get(0);
		private final Assignment cAccuracyAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cAccuracyAccuracyParserRuleCall_11_0 = (RuleCall)cAccuracyAssignment_11.eContents().get(0);
		private final Assignment cAccuracyConditionAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cAccuracyConditionAccuracyConditionParserRuleCall_12_0 = (RuleCall)cAccuracyConditionAssignment_12.eContents().get(0);
		private final Assignment cDescriptionAssignment_13 = (Assignment)cGroup.eContents().get(13);
		private final RuleCall cDescriptionDescriptionParserRuleCall_13_0 = (RuleCall)cDescriptionAssignment_13.eContents().get(0);
		private final RuleCall cCLOSETerminalRuleCall_14 = (RuleCall)cGroup.eContents().get(14);
		
		//Parameter:
		//	OPEN 'Parameter' OPEN 'Name' name=STRING nameNote=NoteRef? CLOSE
		//	dataType=DataType?
		//	cardinality=Cardinality?
		//	units=Units?
		//	resolution=Resolution?
		//	accuracy=Accuracy?
		//	accuracyCondition=AccuracyCondition?
		//	description=Description?
		//	CLOSE;
		@Override public ParserRule getRule() { return rule; }
		
		//OPEN 'Parameter' OPEN 'Name' name=STRING nameNote=NoteRef? CLOSE dataType=DataType? cardinality=Cardinality?
		//units=Units? resolution=Resolution? accuracy=Accuracy? accuracyCondition=AccuracyCondition? description=Description?
		//CLOSE
		public Group getGroup() { return cGroup; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_0() { return cOPENTerminalRuleCall_0; }
		
		//'Parameter'
		public Keyword getParameterKeyword_1() { return cParameterKeyword_1; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_2() { return cOPENTerminalRuleCall_2; }
		
		//'Name'
		public Keyword getNameKeyword_3() { return cNameKeyword_3; }
		
		//name=STRING
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_4_0() { return cNameSTRINGTerminalRuleCall_4_0; }
		
		//nameNote=NoteRef?
		public Assignment getNameNoteAssignment_5() { return cNameNoteAssignment_5; }
		
		//NoteRef
		public RuleCall getNameNoteNoteRefParserRuleCall_5_0() { return cNameNoteNoteRefParserRuleCall_5_0; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_6() { return cCLOSETerminalRuleCall_6; }
		
		//dataType=DataType?
		public Assignment getDataTypeAssignment_7() { return cDataTypeAssignment_7; }
		
		//DataType
		public RuleCall getDataTypeDataTypeParserRuleCall_7_0() { return cDataTypeDataTypeParserRuleCall_7_0; }
		
		//cardinality=Cardinality?
		public Assignment getCardinalityAssignment_8() { return cCardinalityAssignment_8; }
		
		//Cardinality
		public RuleCall getCardinalityCardinalityParserRuleCall_8_0() { return cCardinalityCardinalityParserRuleCall_8_0; }
		
		//units=Units?
		public Assignment getUnitsAssignment_9() { return cUnitsAssignment_9; }
		
		//Units
		public RuleCall getUnitsUnitsParserRuleCall_9_0() { return cUnitsUnitsParserRuleCall_9_0; }
		
		//resolution=Resolution?
		public Assignment getResolutionAssignment_10() { return cResolutionAssignment_10; }
		
		//Resolution
		public RuleCall getResolutionResolutionParserRuleCall_10_0() { return cResolutionResolutionParserRuleCall_10_0; }
		
		//accuracy=Accuracy?
		public Assignment getAccuracyAssignment_11() { return cAccuracyAssignment_11; }
		
		//Accuracy
		public RuleCall getAccuracyAccuracyParserRuleCall_11_0() { return cAccuracyAccuracyParserRuleCall_11_0; }
		
		//accuracyCondition=AccuracyCondition?
		public Assignment getAccuracyConditionAssignment_12() { return cAccuracyConditionAssignment_12; }
		
		//AccuracyCondition
		public RuleCall getAccuracyConditionAccuracyConditionParserRuleCall_12_0() { return cAccuracyConditionAccuracyConditionParserRuleCall_12_0; }
		
		//description=Description?
		public Assignment getDescriptionAssignment_13() { return cDescriptionAssignment_13; }
		
		//Description
		public RuleCall getDescriptionDescriptionParserRuleCall_13_0() { return cDescriptionDescriptionParserRuleCall_13_0; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_14() { return cCLOSETerminalRuleCall_14; }
	}
	public class DescriptionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.cohesionforce.hla.dsl.Omt.Description");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOPENTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cDescriptionKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cDescriptionAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_2_0 = (RuleCall)cDescriptionAssignment_2.eContents().get(0);
		private final RuleCall cCLOSETerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//Description:
		//	OPEN 'Description' description=STRING CLOSE;
		@Override public ParserRule getRule() { return rule; }
		
		//OPEN 'Description' description=STRING CLOSE
		public Group getGroup() { return cGroup; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_0() { return cOPENTerminalRuleCall_0; }
		
		//'Description'
		public Keyword getDescriptionKeyword_1() { return cDescriptionKeyword_1; }
		
		//description=STRING
		public Assignment getDescriptionAssignment_2() { return cDescriptionAssignment_2; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_2_0() { return cDescriptionSTRINGTerminalRuleCall_2_0; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_3() { return cCLOSETerminalRuleCall_3; }
	}
	public class NoteElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.cohesionforce.hla.dsl.Omt.Note");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOPENTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cNoteKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cOPENTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Keyword cNoteNumberKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cIDAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cIDINTTerminalRuleCall_4_0 = (RuleCall)cIDAssignment_4.eContents().get(0);
		private final RuleCall cCLOSETerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cOPENTerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		private final Keyword cNoteTextKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cTextAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cTextSTRINGTerminalRuleCall_8_0 = (RuleCall)cTextAssignment_8.eContents().get(0);
		private final RuleCall cCLOSETerminalRuleCall_9 = (RuleCall)cGroup.eContents().get(9);
		private final RuleCall cCLOSETerminalRuleCall_10 = (RuleCall)cGroup.eContents().get(10);
		
		//Note:
		//	OPEN 'Note'
		//	OPEN 'NoteNumber' ID=INT CLOSE
		//	OPEN 'NoteText' text=STRING CLOSE
		//	CLOSE;
		@Override public ParserRule getRule() { return rule; }
		
		//OPEN 'Note' OPEN 'NoteNumber' ID=INT CLOSE OPEN 'NoteText' text=STRING CLOSE CLOSE
		public Group getGroup() { return cGroup; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_0() { return cOPENTerminalRuleCall_0; }
		
		//'Note'
		public Keyword getNoteKeyword_1() { return cNoteKeyword_1; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_2() { return cOPENTerminalRuleCall_2; }
		
		//'NoteNumber'
		public Keyword getNoteNumberKeyword_3() { return cNoteNumberKeyword_3; }
		
		//ID=INT
		public Assignment getIDAssignment_4() { return cIDAssignment_4; }
		
		//INT
		public RuleCall getIDINTTerminalRuleCall_4_0() { return cIDINTTerminalRuleCall_4_0; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_5() { return cCLOSETerminalRuleCall_5; }
		
		//OPEN
		public RuleCall getOPENTerminalRuleCall_6() { return cOPENTerminalRuleCall_6; }
		
		//'NoteText'
		public Keyword getNoteTextKeyword_7() { return cNoteTextKeyword_7; }
		
		//text=STRING
		public Assignment getTextAssignment_8() { return cTextAssignment_8; }
		
		//STRING
		public RuleCall getTextSTRINGTerminalRuleCall_8_0() { return cTextSTRINGTerminalRuleCall_8_0; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_9() { return cCLOSETerminalRuleCall_9; }
		
		//CLOSE
		public RuleCall getCLOSETerminalRuleCall_10() { return cCLOSETerminalRuleCall_10; }
	}
	public class NoteRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.cohesionforce.hla.dsl.Omt.NoteRef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cRefsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cRefsINTTerminalRuleCall_1_0 = (RuleCall)cRefsAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cRefsAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cRefsINTTerminalRuleCall_2_1_0 = (RuleCall)cRefsAssignment_2_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//NoteRef:
		//	'[' refs+=INT (',' refs+=INT)* ']';
		@Override public ParserRule getRule() { return rule; }
		
		//'[' refs+=INT (',' refs+=INT)* ']'
		public Group getGroup() { return cGroup; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_0() { return cLeftSquareBracketKeyword_0; }
		
		//refs+=INT
		public Assignment getRefsAssignment_1() { return cRefsAssignment_1; }
		
		//INT
		public RuleCall getRefsINTTerminalRuleCall_1_0() { return cRefsINTTerminalRuleCall_1_0; }
		
		//(',' refs+=INT)*
		public Group getGroup_2() { return cGroup_2; }
		
		//','
		public Keyword getCommaKeyword_2_0() { return cCommaKeyword_2_0; }
		
		//refs+=INT
		public Assignment getRefsAssignment_2_1() { return cRefsAssignment_2_1; }
		
		//INT
		public RuleCall getRefsINTTerminalRuleCall_2_1_0() { return cRefsINTTerminalRuleCall_2_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_3() { return cRightSquareBracketKeyword_3; }
	}
	public class AnyTextElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.cohesionforce.hla.dsl.Omt.AnyText");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cTEXTTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//AnyText:
		//	ID | TEXT;
		@Override public ParserRule getRule() { return rule; }
		
		//ID | TEXT
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }
		
		//TEXT
		public RuleCall getTEXTTerminalRuleCall_1() { return cTEXTTerminalRuleCall_1; }
	}
	public class AnyStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.cohesionforce.hla.dsl.Omt.AnyString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cBASE_DATA_TYPETerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//AnyString:
		//	STRING | BASE_DATA_TYPE;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | BASE_DATA_TYPE
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//BASE_DATA_TYPE
		public RuleCall getBASE_DATA_TYPETerminalRuleCall_1() { return cBASE_DATA_TYPETerminalRuleCall_1; }
	}
	
	
	private final HLAOMT_DIF_v1_3Elements pHLAOMT_DIF_v1_3;
	private final ObjectModelElements pObjectModel;
	private final TimeRepresentationElements pTimeRepresentation;
	private final LookaheadElements pLookahead;
	private final MOD_TypeElements pMOD_Type;
	private final OMTComponentElements pOMTComponent;
	private final RoutingSpaceElements pRoutingSpace;
	private final DimensionElements pDimension;
	private final DimensionDomainElements pDimensionDomain;
	private final DimensionRangeElements pDimensionRange;
	private final IntervalTypeElements pIntervalType;
	private final DimensionSetElements pDimensionSet;
	private final DimensionSetMemberElements pDimensionSetMember;
	private final ClassElements pClass;
	private final IsMOMClassElements pIsMOMClass;
	private final PSCapabilitiesElements pPSCapabilities;
	private final ClassComponentElements pClassComponent;
	private final SuperClassElements pSuperClass;
	private final AttributeElements pAttribute;
	private final ATT_UpdateTypeElements pATT_UpdateType;
	private final ATT_TransferAcceptElements pATT_TransferAccept;
	private final ATT_UpdateReflectElements pATT_UpdateReflect;
	private final EnumeratedDataTypeElements pEnumeratedDataType;
	private final EnumerationElements pEnumeration;
	private final ComplexDataTypeElements pComplexDataType;
	private final ComplexComponentElements pComplexComponent;
	private final AccuracyElements pAccuracy;
	private final AccuracyConditionElements pAccuracyCondition;
	private final ResolutionElements pResolution;
	private final PositionElements pPosition;
	private final DataTypeElements pDataType;
	private final TypeReferenceElements pTypeReference;
	private final FieldNameElements pFieldName;
	private final UnitsElements pUnits;
	private final CardinalityElements pCardinality;
	private final InteractionElements pInteraction;
	private final ISRTypeElements pISRType;
	private final InteractionComponentElements pInteractionComponent;
	private final SuperInteractionElements pSuperInteraction;
	private final ParameterElements pParameter;
	private final DescriptionElements pDescription;
	private final NoteElements pNote;
	private final NoteRefElements pNoteRef;
	private final AnyTextElements pAnyText;
	private final AnyStringElements pAnyString;
	private final TerminalRule tBASE_DATA_TYPE;
	private final TerminalRule tOPEN;
	private final TerminalRule tCLOSE;
	private final TerminalRule tCOMMENT;
	private final TerminalRule tID;
	private final TerminalRule tINT;
	private final TerminalRule tSTRING;
	private final TerminalRule tML_COMMENT;
	private final TerminalRule tSL_COMMENT;
	private final TerminalRule tWS;
	private final TerminalRule tTEXT;
	private final TerminalRule tANY_OTHER;
	
	private final Grammar grammar;

	@Inject
	public OmtGrammarAccess(GrammarProvider grammarProvider) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.pHLAOMT_DIF_v1_3 = new HLAOMT_DIF_v1_3Elements();
		this.pObjectModel = new ObjectModelElements();
		this.pTimeRepresentation = new TimeRepresentationElements();
		this.pLookahead = new LookaheadElements();
		this.pMOD_Type = new MOD_TypeElements();
		this.pOMTComponent = new OMTComponentElements();
		this.pRoutingSpace = new RoutingSpaceElements();
		this.pDimension = new DimensionElements();
		this.pDimensionDomain = new DimensionDomainElements();
		this.pDimensionRange = new DimensionRangeElements();
		this.pIntervalType = new IntervalTypeElements();
		this.pDimensionSet = new DimensionSetElements();
		this.pDimensionSetMember = new DimensionSetMemberElements();
		this.pClass = new ClassElements();
		this.pIsMOMClass = new IsMOMClassElements();
		this.pPSCapabilities = new PSCapabilitiesElements();
		this.pClassComponent = new ClassComponentElements();
		this.pSuperClass = new SuperClassElements();
		this.pAttribute = new AttributeElements();
		this.pATT_UpdateType = new ATT_UpdateTypeElements();
		this.pATT_TransferAccept = new ATT_TransferAcceptElements();
		this.pATT_UpdateReflect = new ATT_UpdateReflectElements();
		this.pEnumeratedDataType = new EnumeratedDataTypeElements();
		this.pEnumeration = new EnumerationElements();
		this.pComplexDataType = new ComplexDataTypeElements();
		this.pComplexComponent = new ComplexComponentElements();
		this.pAccuracy = new AccuracyElements();
		this.pAccuracyCondition = new AccuracyConditionElements();
		this.pResolution = new ResolutionElements();
		this.pPosition = new PositionElements();
		this.pDataType = new DataTypeElements();
		this.pTypeReference = new TypeReferenceElements();
		this.pFieldName = new FieldNameElements();
		this.pUnits = new UnitsElements();
		this.pCardinality = new CardinalityElements();
		this.pInteraction = new InteractionElements();
		this.pISRType = new ISRTypeElements();
		this.pInteractionComponent = new InteractionComponentElements();
		this.pSuperInteraction = new SuperInteractionElements();
		this.pParameter = new ParameterElements();
		this.pDescription = new DescriptionElements();
		this.pNote = new NoteElements();
		this.pNoteRef = new NoteRefElements();
		this.pAnyText = new AnyTextElements();
		this.pAnyString = new AnyStringElements();
		this.tBASE_DATA_TYPE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "com.cohesionforce.hla.dsl.Omt.BASE_DATA_TYPE");
		this.tOPEN = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "com.cohesionforce.hla.dsl.Omt.OPEN");
		this.tCLOSE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "com.cohesionforce.hla.dsl.Omt.CLOSE");
		this.tCOMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "com.cohesionforce.hla.dsl.Omt.COMMENT");
		this.tID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "com.cohesionforce.hla.dsl.Omt.ID");
		this.tINT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "com.cohesionforce.hla.dsl.Omt.INT");
		this.tSTRING = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "com.cohesionforce.hla.dsl.Omt.STRING");
		this.tML_COMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "com.cohesionforce.hla.dsl.Omt.ML_COMMENT");
		this.tSL_COMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "com.cohesionforce.hla.dsl.Omt.SL_COMMENT");
		this.tWS = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "com.cohesionforce.hla.dsl.Omt.WS");
		this.tTEXT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "com.cohesionforce.hla.dsl.Omt.TEXT");
		this.tANY_OTHER = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "com.cohesionforce.hla.dsl.Omt.ANY_OTHER");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("com.cohesionforce.hla.dsl.Omt".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	

	
	//HLAOMT_DIF_v1_3:
	//	OPEN 'DIF'
	//	name=AnyText version=AnyText
	//	OPEN 'TYPE' type=AnyText CLOSE
	//	CLOSE
	//	objectModels+=ObjectModel+;
	public HLAOMT_DIF_v1_3Elements getHLAOMT_DIF_v1_3Access() {
		return pHLAOMT_DIF_v1_3;
	}
	
	public ParserRule getHLAOMT_DIF_v1_3Rule() {
		return getHLAOMT_DIF_v1_3Access().getRule();
	}
	
	//ObjectModel:
	//	OPEN 'ObjectModel' (OPEN 'Name' name=STRING CLOSE) (OPEN 'VersionNumber' version=STRING CLOSE) (OPEN 'Type'
	//	type=MOD_Type CLOSE)? (OPEN 'Purpose' purpose=STRING CLOSE)? (OPEN 'ApplicationDomain' domain=STRING CLOSE)? (OPEN
	//	'SponsorOrgName' sponsor=STRING CLOSE)? (OPEN 'POCHonorificName' pocHonorific=STRING CLOSE)? (OPEN 'POCFirstName'
	//	pocFirstName=STRING CLOSE)? (OPEN 'POCLastName' pocLastName=STRING CLOSE)? (OPEN 'POCOrgName' pocOrgName=STRING
	//	CLOSE)? (OPEN 'POCPhone' pocPhone=STRING CLOSE)? (OPEN 'POCEmail' pocEmail=STRING CLOSE)? (OPEN 'ModificationDate'
	//	modificationDate=TEXT CLOSE)? (OPEN 'MOMVersion' momVersion=STRING CLOSE)?
	//	timeRepresentation=TimeRepresentation?
	//	lookAhead=Lookahead?
	//	omtComponents+=OMTComponent*
	//	CLOSE;
	public ObjectModelElements getObjectModelAccess() {
		return pObjectModel;
	}
	
	public ParserRule getObjectModelRule() {
		return getObjectModelAccess().getRule();
	}
	
	//TimeRepresentation:
	//	OPEN 'TimeRepresentation'
	//	OPEN 'Units' units=STRING unitsNote=NoteRef? CLOSE
	//	OPEN 'Minimum' min=STRING minNote=NoteRef? CLOSE
	//	OPEN 'Maximum' max=STRING maxNote=NoteRef? CLOSE
	//	OPEN 'InitialValue' initial=STRING initialNote=NoteRef? CLOSE
	//	OPEN 'DataType' dataType=STRING typeNote=NoteRef? CLOSE (OPEN 'Operators' operators=STRING operatorsNote=NoteRef?
	//	CLOSE)?
	//	CLOSE;
	public TimeRepresentationElements getTimeRepresentationAccess() {
		return pTimeRepresentation;
	}
	
	public ParserRule getTimeRepresentationRule() {
		return getTimeRepresentationAccess().getRule();
	}
	
	//Lookahead:
	//	OPEN 'Lookahead'
	//	OPEN 'Units' units=STRING unitsNote=NoteRef? CLOSE
	//	OPEN 'DataType' dataType=STRING typeNote=NoteRef? CLOSE (OPEN 'AdditionOperator' operator=STRING operatorNote=NoteRef?
	//	CLOSE)?
	//	CLOSE;
	public LookaheadElements getLookaheadAccess() {
		return pLookahead;
	}
	
	public ParserRule getLookaheadRule() {
		return getLookaheadAccess().getRule();
	}
	
	//MOD_Type:
	//	'FOM' | 'SOM' | 'OTHER';
	public MOD_TypeElements getMOD_TypeAccess() {
		return pMOD_Type;
	}
	
	public ParserRule getMOD_TypeRule() {
		return getMOD_TypeAccess().getRule();
	}
	
	//OMTComponent:
	//	Class | EnumeratedDataType | ComplexDataType | RoutingSpace | Interaction | Note;
	public OMTComponentElements getOMTComponentAccess() {
		return pOMTComponent;
	}
	
	public ParserRule getOMTComponentRule() {
		return getOMTComponentAccess().getRule();
	}
	
	//RoutingSpace:
	//	OPEN 'RoutingSpace' OPEN 'Name' name=STRING note=NoteRef? CLOSE
	//	dimensions+=Dimension*
	//	CLOSE;
	public RoutingSpaceElements getRoutingSpaceAccess() {
		return pRoutingSpace;
	}
	
	public ParserRule getRoutingSpaceRule() {
		return getRoutingSpaceAccess().getRule();
	}
	
	//Dimension:
	//	OPEN 'Dimension' OPEN 'Name' name=STRING nameNote=NoteRef? CLOSE
	//	OPEN 'DimensionType' (type=[TypeReference|STRING] | dataType=BASE_DATA_TYPE) typeNote=NoteRef? CLOSE
	//	domain=DimensionDomain (OPEN 'RangeSetUnits' units=STRING unitsNote=NoteRef? CLOSE)?
	//	OPEN 'NormalizationFunction' function=STRING functionNote=NoteRef? CLOSE
	//	CLOSE;
	public DimensionElements getDimensionAccess() {
		return pDimension;
	}
	
	public ParserRule getDimensionRule() {
		return getDimensionAccess().getRule();
	}
	
	//DimensionDomain:
	//	DimensionRange | DimensionSet;
	public DimensionDomainElements getDimensionDomainAccess() {
		return pDimensionDomain;
	}
	
	public ParserRule getDimensionDomainRule() {
		return getDimensionDomainAccess().getRule();
	}
	
	//DimensionRange:
	//	OPEN 'DimensionMinimum' minimum=STRING note=NoteRef? CLOSE (OPEN 'DimensionMaximum' maximum=STRING CLOSE)?
	//	OPEN 'IntervalType' IntervalType CLOSE;
	public DimensionRangeElements getDimensionRangeAccess() {
		return pDimensionRange;
	}
	
	public ParserRule getDimensionRangeRule() {
		return getDimensionRangeAccess().getRule();
	}
	
	//IntervalType:
	//	'Open' | 'Closed';
	public IntervalTypeElements getIntervalTypeAccess() {
		return pIntervalType;
	}
	
	public ParserRule getIntervalTypeRule() {
		return getIntervalTypeAccess().getRule();
	}
	
	//DimensionSet:
	//	OPEN 'DimensionSet' members+=DimensionSetMember+ note=NoteRef? CLOSE;
	public DimensionSetElements getDimensionSetAccess() {
		return pDimensionSet;
	}
	
	public ParserRule getDimensionSetRule() {
		return getDimensionSetAccess().getRule();
	}
	
	//DimensionSetMember:
	//	OPEN 'Member' value=STRING CLOSE;
	public DimensionSetMemberElements getDimensionSetMemberAccess() {
		return pDimensionSetMember;
	}
	
	public ParserRule getDimensionSetMemberRule() {
		return getDimensionSetMemberAccess().getRule();
	}
	
	//Class:
	//	OPEN 'Class' OPEN 'ID' id=INT CLOSE
	//	OPEN 'Name' name=STRING note=NoteRef? CLOSE (OPEN 'MOMClass' isMOMClass=IsMOMClass CLOSE)?
	//	OPEN 'PSCapabilities' PSCapabilities CLOSE
	//	description=Description?
	//	components+=ClassComponent* CLOSE;
	public ClassElements getClassAccess() {
		return pClass;
	}
	
	public ParserRule getClassRule() {
		return getClassAccess().getRule();
	}
	
	//IsMOMClass:
	//	'TRUE' | 'FALSE';
	public IsMOMClassElements getIsMOMClassAccess() {
		return pIsMOMClass;
	}
	
	public ParserRule getIsMOMClassRule() {
		return getIsMOMClassAccess().getRule();
	}
	
	//PSCapabilities:
	//	'P' | 'S' | 'PS' | 'N';
	public PSCapabilitiesElements getPSCapabilitiesAccess() {
		return pPSCapabilities;
	}
	
	public ParserRule getPSCapabilitiesRule() {
		return getPSCapabilitiesAccess().getRule();
	}
	
	//ClassComponent:
	//	Attribute | SuperClass;
	public ClassComponentElements getClassComponentAccess() {
		return pClassComponent;
	}
	
	public ParserRule getClassComponentRule() {
		return getClassComponentAccess().getRule();
	}
	
	//SuperClass:
	//	OPEN 'SuperClass' superClass=INT CLOSE;
	public SuperClassElements getSuperClassAccess() {
		return pSuperClass;
	}
	
	public ParserRule getSuperClassRule() {
		return getSuperClassAccess().getRule();
	}
	
	//Attribute:
	//	OPEN 'Attribute' OPEN 'Name' name=STRING nameNote=NoteRef? CLOSE
	//	dataType=DataType?
	//	cardinality=Cardinality?
	//	units=Units?
	//	resolution=Resolution?
	//	accuracy=Accuracy?
	//	accuracyCondition=AccuracyCondition? (OPEN 'UpdateType' updateType=ATT_UpdateType updateTypeNote=NoteRef? CLOSE)?
	//	(OPEN 'UpdateCondition' updateCondition=STRING updateConditionNote=NoteRef? CLOSE)? (OPEN 'TransferAccept'
	//	transferAccept=ATT_TransferAccept transferAcceptNote=NoteRef? CLOSE)? (OPEN 'UpdateReflect'
	//	updateReflect=ATT_UpdateReflect updateReflectNote=NoteRef? CLOSE)?
	//	description=Description? (OPEN 'RoutingSpace' routingSpace=STRING CLOSE)? //TODO - LINK
	//	CLOSE;
	public AttributeElements getAttributeAccess() {
		return pAttribute;
	}
	
	public ParserRule getAttributeRule() {
		return getAttributeAccess().getRule();
	}
	
	//ATT_UpdateType:
	//	'Static' | 'Periodic' | 'Conditional';
	public ATT_UpdateTypeElements getATT_UpdateTypeAccess() {
		return pATT_UpdateType;
	}
	
	public ParserRule getATT_UpdateTypeRule() {
		return getATT_UpdateTypeAccess().getRule();
	}
	
	//ATT_TransferAccept:
	//	'T' | 'A' | 'TA' | 'N';
	public ATT_TransferAcceptElements getATT_TransferAcceptAccess() {
		return pATT_TransferAccept;
	}
	
	public ParserRule getATT_TransferAcceptRule() {
		return getATT_TransferAcceptAccess().getRule();
	}
	
	//ATT_UpdateReflect:
	//	'U' | 'R' | 'UR';
	public ATT_UpdateReflectElements getATT_UpdateReflectAccess() {
		return pATT_UpdateReflect;
	}
	
	public ParserRule getATT_UpdateReflectRule() {
		return getATT_UpdateReflectAccess().getRule();
	}
	
	//EnumeratedDataType:
	//	OPEN 'EnumeratedDataType' OPEN 'Name' name=STRING note=NoteRef? CLOSE (OPEN 'MOMEnumeratedDataType'
	//	isMOMEnumeratedDataType=('TRUE' | 'FALSE') CLOSE)?
	//	literals+=Enumeration+
	//	CLOSE;
	public EnumeratedDataTypeElements getEnumeratedDataTypeAccess() {
		return pEnumeratedDataType;
	}
	
	public ParserRule getEnumeratedDataTypeRule() {
		return getEnumeratedDataTypeAccess().getRule();
	}
	
	//Enumeration:
	//	OPEN 'Enumeration' OPEN 'Enumerator' literal=STRING enumeratorNote=NoteRef? CLOSE
	//	OPEN 'Representation' value=INT representationNote=NoteRef? CLOSE
	//	CLOSE;
	public EnumerationElements getEnumerationAccess() {
		return pEnumeration;
	}
	
	public ParserRule getEnumerationRule() {
		return getEnumerationAccess().getRule();
	}
	
	//ComplexDataType:
	//	OPEN 'ComplexDataType' OPEN 'Name' name=STRING note=NoteRef? CLOSE (OPEN 'MOMComplexDataType'
	//	isMOMComplexDataType=('TRUE' | 'FALSE') CLOSE)?
	//	components+=ComplexComponent+
	//	CLOSE;
	public ComplexDataTypeElements getComplexDataTypeAccess() {
		return pComplexDataType;
	}
	
	public ParserRule getComplexDataTypeRule() {
		return getComplexDataTypeAccess().getRule();
	}
	
	//ComplexComponent:
	//	OPEN 'ComplexComponent'
	//	position=Position?
	//	fieldName=FieldName
	//	dataType=DataType?
	//	cardinality=Cardinality?
	//	units=Units?
	//	resolution=Resolution?
	//	accuracy=Accuracy?
	//	accuracyCondition=AccuracyCondition?
	//	CLOSE;
	public ComplexComponentElements getComplexComponentAccess() {
		return pComplexComponent;
	}
	
	public ParserRule getComplexComponentRule() {
		return getComplexComponentAccess().getRule();
	}
	
	//Accuracy:
	//	OPEN 'Accuracy' accuracy=STRING accuracyNote=NoteRef? CLOSE;
	public AccuracyElements getAccuracyAccess() {
		return pAccuracy;
	}
	
	public ParserRule getAccuracyRule() {
		return getAccuracyAccess().getRule();
	}
	
	//AccuracyCondition:
	//	OPEN 'AccuracyCondition' accuracyCondition=STRING accuracyConditionNote=NoteRef? CLOSE;
	public AccuracyConditionElements getAccuracyConditionAccess() {
		return pAccuracyCondition;
	}
	
	public ParserRule getAccuracyConditionRule() {
		return getAccuracyConditionAccess().getRule();
	}
	
	//Resolution:
	//	OPEN 'Resolution' resolution=STRING resolutionNote=NoteRef? CLOSE;
	public ResolutionElements getResolutionAccess() {
		return pResolution;
	}
	
	public ParserRule getResolutionRule() {
		return getResolutionAccess().getRule();
	}
	
	//Position:
	//	OPEN 'Position' position=STRING CLOSE;
	public PositionElements getPositionAccess() {
		return pPosition;
	}
	
	public ParserRule getPositionRule() {
		return getPositionAccess().getRule();
	}
	
	//DataType:
	//	OPEN 'DataType' (refType=[TypeReference|STRING] | dataType=BASE_DATA_TYPE) dataTypeNode=NoteRef? CLOSE
	//	//	OPEN 'DataType' dataType=STRING dataTypeNode=NoteRef? CLOSE
	//;
	public DataTypeElements getDataTypeAccess() {
		return pDataType;
	}
	
	public ParserRule getDataTypeRule() {
		return getDataTypeAccess().getRule();
	}
	
	//TypeReference:
	//	ComplexDataType | EnumeratedDataType;
	public TypeReferenceElements getTypeReferenceAccess() {
		return pTypeReference;
	}
	
	public ParserRule getTypeReferenceRule() {
		return getTypeReferenceAccess().getRule();
	}
	
	//FieldName:
	//	OPEN 'FieldName' name=AnyString fieldNameNote=NoteRef? CLOSE;
	public FieldNameElements getFieldNameAccess() {
		return pFieldName;
	}
	
	public ParserRule getFieldNameRule() {
		return getFieldNameAccess().getRule();
	}
	
	//Units:
	//	OPEN 'Units' units=AnyString unitsNote=NoteRef? CLOSE;
	public UnitsElements getUnitsAccess() {
		return pUnits;
	}
	
	public ParserRule getUnitsRule() {
		return getUnitsAccess().getRule();
	}
	
	//Cardinality:
	//	OPEN 'Cardinality' cardinality=STRING cardinalityNote=NoteRef? CLOSE;
	public CardinalityElements getCardinalityAccess() {
		return pCardinality;
	}
	
	public ParserRule getCardinalityRule() {
		return getCardinalityAccess().getRule();
	}
	
	//Interaction:
	//	OPEN 'Interaction' OPEN 'ID' id=INT CLOSE
	//	OPEN 'Name' name=STRING nameNote=NoteRef? CLOSE
	//	OPEN 'ISRType' type=ISRType typeNote=NoteRef? CLOSE (OPEN 'MOMInteraction' isMOMInteraction=('TRUE' | 'FALSE') CLOSE)?
	//	description+=Description (OPEN 'RoutingSpace' routingSpace=[RoutingSpace|STRING] CLOSE)?
	//	components+=InteractionComponent*
	//	CLOSE;
	public InteractionElements getInteractionAccess() {
		return pInteraction;
	}
	
	public ParserRule getInteractionRule() {
		return getInteractionAccess().getRule();
	}
	
	//ISRType:
	//	'I' | 'S' | 'R' | 'IS' | 'IR' | 'N';
	public ISRTypeElements getISRTypeAccess() {
		return pISRType;
	}
	
	public ParserRule getISRTypeRule() {
		return getISRTypeAccess().getRule();
	}
	
	//InteractionComponent:
	//	Parameter | SuperInteraction;
	public InteractionComponentElements getInteractionComponentAccess() {
		return pInteractionComponent;
	}
	
	public ParserRule getInteractionComponentRule() {
		return getInteractionComponentAccess().getRule();
	}
	
	//SuperInteraction:
	//	OPEN 'SuperInteraction' ID=INT CLOSE;
	public SuperInteractionElements getSuperInteractionAccess() {
		return pSuperInteraction;
	}
	
	public ParserRule getSuperInteractionRule() {
		return getSuperInteractionAccess().getRule();
	}
	
	//Parameter:
	//	OPEN 'Parameter' OPEN 'Name' name=STRING nameNote=NoteRef? CLOSE
	//	dataType=DataType?
	//	cardinality=Cardinality?
	//	units=Units?
	//	resolution=Resolution?
	//	accuracy=Accuracy?
	//	accuracyCondition=AccuracyCondition?
	//	description=Description?
	//	CLOSE;
	public ParameterElements getParameterAccess() {
		return pParameter;
	}
	
	public ParserRule getParameterRule() {
		return getParameterAccess().getRule();
	}
	
	//Description:
	//	OPEN 'Description' description=STRING CLOSE;
	public DescriptionElements getDescriptionAccess() {
		return pDescription;
	}
	
	public ParserRule getDescriptionRule() {
		return getDescriptionAccess().getRule();
	}
	
	//Note:
	//	OPEN 'Note'
	//	OPEN 'NoteNumber' ID=INT CLOSE
	//	OPEN 'NoteText' text=STRING CLOSE
	//	CLOSE;
	public NoteElements getNoteAccess() {
		return pNote;
	}
	
	public ParserRule getNoteRule() {
		return getNoteAccess().getRule();
	}
	
	//NoteRef:
	//	'[' refs+=INT (',' refs+=INT)* ']';
	public NoteRefElements getNoteRefAccess() {
		return pNoteRef;
	}
	
	public ParserRule getNoteRefRule() {
		return getNoteRefAccess().getRule();
	}
	
	//AnyText:
	//	ID | TEXT;
	public AnyTextElements getAnyTextAccess() {
		return pAnyText;
	}
	
	public ParserRule getAnyTextRule() {
		return getAnyTextAccess().getRule();
	}
	
	//AnyString:
	//	STRING | BASE_DATA_TYPE;
	public AnyStringElements getAnyStringAccess() {
		return pAnyString;
	}
	
	public ParserRule getAnyStringRule() {
		return getAnyStringAccess().getRule();
	}
	
	//terminal BASE_DATA_TYPE:
	//	'"' ('unsigned short' | 'short' | 'unsigned long' | 'long' | 'unsigned long long'
	//	| 'long long' | 'double' | 'float' | 'boolean' | 'any' | 'string' | 'char' | 'octet') '"';
	public TerminalRule getBASE_DATA_TYPERule() {
		return tBASE_DATA_TYPE;
	}
	
	//terminal OPEN:
	//	'(';
	public TerminalRule getOPENRule() {
		return tOPEN;
	}
	
	//terminal CLOSE:
	//	')';
	public TerminalRule getCLOSERule() {
		return tCLOSE;
	}
	
	//terminal COMMENT:
	//	';;' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getCOMMENTRule() {
		return tCOMMENT;
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return tID;
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return tINT;
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return tSTRING;
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return tML_COMMENT;
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return tSL_COMMENT;
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return tWS;
	}
	
	//terminal TEXT:
	//	!(',' | '[' | ']' | '"' | "'" | '(' | ')' | ' ' | '\t' | '\r' | '\n')+;
	public TerminalRule getTEXTRule() {
		return tTEXT;
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return tANY_OTHER;
	}
}
