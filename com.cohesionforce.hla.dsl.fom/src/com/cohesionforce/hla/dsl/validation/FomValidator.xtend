/*
 * generated by Xtext 2.12.0
 */
package com.cohesionforce.hla.dsl.validation

import com.cohesionforce.hla.dsl.fom.AttributeClass
import com.cohesionforce.hla.dsl.fom.FomPackage
import java.util.ArrayList
import org.eclipse.xtext.validation.Check

/**
 * This class contains custom validation rules. 
 *
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
class FomValidator extends AbstractFomValidator {

	var names = new ArrayList<String>
	var childNames = new ArrayList<String>
	
	public static val INVALID_NAME = 'invalidName'
	public static val DUPLICATE_CHILD = 'duplicateChild'

	@Check
	def checkUniqueParameters(AttributeClass attributeClass) {
		names.clear
		attributeClass.attributes.forEach[{
			if(it.ref !== null) {
				if(names.contains(it.ref.name)) {
					warning('Duplicate parameters with name: '+it.ref.name, 
						FomPackage.Literals.ATTRIBUTE_CLASS__ATTRIBUTES,
						INVALID_NAME
					)
				} else {
					names.add(it.ref.name)
				}
			}
		}]
	}
	
	@Check
	def checkUniqueChildClasses(AttributeClass attributeClass) {
		childNames.clear
		attributeClass.classes.forEach[{
			if(it.ref !== null) {
				if(childNames.contains(it.ref.name)) {
					warning('Duplicate parameters with name: '+it.ref.name, 
						FomPackage.Literals.ATTRIBUTE_CLASS__CLASSES,
						DUPLICATE_CHILD
					)
				} else {
					childNames.add(it.ref.name)
				}
			}
		}]
	}
}
