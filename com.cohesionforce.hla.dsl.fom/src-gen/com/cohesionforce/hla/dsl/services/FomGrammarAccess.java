/*
 * generated by Xtext 2.12.0
 */
package com.cohesionforce.hla.dsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class FomGrammarAccess extends AbstractGrammarElementFinder {
	
	public class FedElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.cohesionforce.hla.dsl.Fom.Fed");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cFEDKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cFederationAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cFederationFederationParserRuleCall_2_0 = (RuleCall)cFederationAssignment_2.eContents().get(0);
		private final Assignment cVersionAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cVersionFEDversionParserRuleCall_3_0 = (RuleCall)cVersionAssignment_3.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cSpacesKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cSpacesAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cSpacesSpaceParserRuleCall_6_0 = (RuleCall)cSpacesAssignment_6.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cLeftParenthesisKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cObjectsKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cClassesAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cClassesAttributeClassParserRuleCall_10_0 = (RuleCall)cClassesAssignment_10.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cLeftParenthesisKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Keyword cInteractionsKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Assignment cClassesAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final RuleCall cClassesInteractionClassParserRuleCall_14_0 = (RuleCall)cClassesAssignment_14.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_15 = (Keyword)cGroup.eContents().get(15);
		private final Keyword cRightParenthesisKeyword_16 = (Keyword)cGroup.eContents().get(16);
		
		//Fed:
		//	'(' 'FED'
		//	federation=Federation
		//	version=FEDversion
		//	'(' 'spaces' spaces+=Space* ')'
		//	'(' 'objects' classes+=AttributeClass* ')'
		//	'(' 'interactions' classes+=InteractionClass* ')'
		//	')';
		@Override public ParserRule getRule() { return rule; }
		
		//'(' 'FED' federation=Federation version=FEDversion '(' 'spaces' spaces+=Space* ')' '(' 'objects'
		//classes+=AttributeClass* ')' '(' 'interactions' classes+=InteractionClass* ')' ')'
		public Group getGroup() { return cGroup; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_0() { return cLeftParenthesisKeyword_0; }
		
		//'FED'
		public Keyword getFEDKeyword_1() { return cFEDKeyword_1; }
		
		//federation=Federation
		public Assignment getFederationAssignment_2() { return cFederationAssignment_2; }
		
		//Federation
		public RuleCall getFederationFederationParserRuleCall_2_0() { return cFederationFederationParserRuleCall_2_0; }
		
		//version=FEDversion
		public Assignment getVersionAssignment_3() { return cVersionAssignment_3; }
		
		//FEDversion
		public RuleCall getVersionFEDversionParserRuleCall_3_0() { return cVersionFEDversionParserRuleCall_3_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_4() { return cLeftParenthesisKeyword_4; }
		
		//'spaces'
		public Keyword getSpacesKeyword_5() { return cSpacesKeyword_5; }
		
		//spaces+=Space*
		public Assignment getSpacesAssignment_6() { return cSpacesAssignment_6; }
		
		//Space
		public RuleCall getSpacesSpaceParserRuleCall_6_0() { return cSpacesSpaceParserRuleCall_6_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_7() { return cRightParenthesisKeyword_7; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_8() { return cLeftParenthesisKeyword_8; }
		
		//'objects'
		public Keyword getObjectsKeyword_9() { return cObjectsKeyword_9; }
		
		//classes+=AttributeClass*
		public Assignment getClassesAssignment_10() { return cClassesAssignment_10; }
		
		//AttributeClass
		public RuleCall getClassesAttributeClassParserRuleCall_10_0() { return cClassesAttributeClassParserRuleCall_10_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_11() { return cRightParenthesisKeyword_11; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_12() { return cLeftParenthesisKeyword_12; }
		
		//'interactions'
		public Keyword getInteractionsKeyword_13() { return cInteractionsKeyword_13; }
		
		//classes+=InteractionClass*
		public Assignment getClassesAssignment_14() { return cClassesAssignment_14; }
		
		//InteractionClass
		public RuleCall getClassesInteractionClassParserRuleCall_14_0() { return cClassesInteractionClassParserRuleCall_14_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_15() { return cRightParenthesisKeyword_15; }
		
		//')'
		public Keyword getRightParenthesisKeyword_16() { return cRightParenthesisKeyword_16; }
	}
	public class FederationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.cohesionforce.hla.dsl.Fom.Federation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cFederationKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Alternatives cNameAlternatives_2_0 = (Alternatives)cNameAssignment_2.eContents().get(0);
		private final RuleCall cNameValidIDParserRuleCall_2_0_0 = (RuleCall)cNameAlternatives_2_0.eContents().get(0);
		private final RuleCall cNameTEXTTerminalRuleCall_2_0_1 = (RuleCall)cNameAlternatives_2_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Federation:
		//	'(' 'Federation' name=(ValidID | TEXT) ')';
		@Override public ParserRule getRule() { return rule; }
		
		//'(' 'Federation' name=(ValidID | TEXT) ')'
		public Group getGroup() { return cGroup; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_0() { return cLeftParenthesisKeyword_0; }
		
		//'Federation'
		public Keyword getFederationKeyword_1() { return cFederationKeyword_1; }
		
		//name=(ValidID | TEXT)
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//(ValidID | TEXT)
		public Alternatives getNameAlternatives_2_0() { return cNameAlternatives_2_0; }
		
		//ValidID
		public RuleCall getNameValidIDParserRuleCall_2_0_0() { return cNameValidIDParserRuleCall_2_0_0; }
		
		//TEXT
		public RuleCall getNameTEXTTerminalRuleCall_2_0_1() { return cNameTEXTTerminalRuleCall_2_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }
	}
	public class FEDversionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.cohesionforce.hla.dsl.Fom.FEDversion");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cFEDversionKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cVersionAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cVersionTEXTTerminalRuleCall_2_0 = (RuleCall)cVersionAssignment_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//FEDversion:
		//	'(' 'FEDversion' version=TEXT ')';
		@Override public ParserRule getRule() { return rule; }
		
		//'(' 'FEDversion' version=TEXT ')'
		public Group getGroup() { return cGroup; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_0() { return cLeftParenthesisKeyword_0; }
		
		//'FEDversion'
		public Keyword getFEDversionKeyword_1() { return cFEDversionKeyword_1; }
		
		//version=TEXT
		public Assignment getVersionAssignment_2() { return cVersionAssignment_2; }
		
		//TEXT
		public RuleCall getVersionTEXTTerminalRuleCall_2_0() { return cVersionTEXTTerminalRuleCall_2_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }
	}
	public class SpaceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.cohesionforce.hla.dsl.Fom.Space");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cSpaceKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameValidIDParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Assignment cDimensionsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cDimensionsDimensionParserRuleCall_3_0 = (RuleCall)cDimensionsAssignment_3.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Space:
		//	'(' 'space' name=ValidID
		//	dimensions+=Dimension*
		//	')';
		@Override public ParserRule getRule() { return rule; }
		
		//'(' 'space' name=ValidID dimensions+=Dimension* ')'
		public Group getGroup() { return cGroup; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_0() { return cLeftParenthesisKeyword_0; }
		
		//'space'
		public Keyword getSpaceKeyword_1() { return cSpaceKeyword_1; }
		
		//name=ValidID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ValidID
		public RuleCall getNameValidIDParserRuleCall_2_0() { return cNameValidIDParserRuleCall_2_0; }
		
		//dimensions+=Dimension*
		public Assignment getDimensionsAssignment_3() { return cDimensionsAssignment_3; }
		
		//Dimension
		public RuleCall getDimensionsDimensionParserRuleCall_3_0() { return cDimensionsDimensionParserRuleCall_3_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
	}
	public class DimensionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.cohesionforce.hla.dsl.Fom.Dimension");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cDimensionKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameValidIDParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Dimension:
		//	'(' 'dimension' name=ValidID ')';
		@Override public ParserRule getRule() { return rule; }
		
		//'(' 'dimension' name=ValidID ')'
		public Group getGroup() { return cGroup; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_0() { return cLeftParenthesisKeyword_0; }
		
		//'dimension'
		public Keyword getDimensionKeyword_1() { return cDimensionKeyword_1; }
		
		//name=ValidID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ValidID
		public RuleCall getNameValidIDParserRuleCall_2_0() { return cNameValidIDParserRuleCall_2_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }
	}
	public class AttributeClassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.cohesionforce.hla.dsl.Fom.AttributeClass");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cClassKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameValidIDParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Assignment cAttributesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cAttributesAttributeParserRuleCall_3_0 = (RuleCall)cAttributesAssignment_3.eContents().get(0);
		private final Assignment cClassesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cClassesAttributeClassParserRuleCall_4_0 = (RuleCall)cClassesAssignment_4.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//AttributeClass:
		//	'(' 'class' name=ValidID
		//	attributes+=Attribute*
		//	classes+=AttributeClass*
		//	')';
		@Override public ParserRule getRule() { return rule; }
		
		//'(' 'class' name=ValidID attributes+=Attribute* classes+=AttributeClass* ')'
		public Group getGroup() { return cGroup; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_0() { return cLeftParenthesisKeyword_0; }
		
		//'class'
		public Keyword getClassKeyword_1() { return cClassKeyword_1; }
		
		//name=ValidID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ValidID
		public RuleCall getNameValidIDParserRuleCall_2_0() { return cNameValidIDParserRuleCall_2_0; }
		
		//attributes+=Attribute*
		public Assignment getAttributesAssignment_3() { return cAttributesAssignment_3; }
		
		//Attribute
		public RuleCall getAttributesAttributeParserRuleCall_3_0() { return cAttributesAttributeParserRuleCall_3_0; }
		
		//classes+=AttributeClass*
		public Assignment getClassesAssignment_4() { return cClassesAssignment_4; }
		
		//AttributeClass
		public RuleCall getClassesAttributeClassParserRuleCall_4_0() { return cClassesAttributeClassParserRuleCall_4_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
	}
	public class AttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.cohesionforce.hla.dsl.Fom.Attribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cAttributeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameValidIDParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Assignment cTransportAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Alternatives cTransportAlternatives_3_0 = (Alternatives)cTransportAssignment_3.eContents().get(0);
		private final Keyword cTransportReliableKeyword_3_0_0 = (Keyword)cTransportAlternatives_3_0.eContents().get(0);
		private final Keyword cTransportBest_effortKeyword_3_0_1 = (Keyword)cTransportAlternatives_3_0.eContents().get(1);
		private final Assignment cOrderAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final Alternatives cOrderAlternatives_4_0 = (Alternatives)cOrderAssignment_4.eContents().get(0);
		private final Keyword cOrderTimestampKeyword_4_0_0 = (Keyword)cOrderAlternatives_4_0.eContents().get(0);
		private final Keyword cOrderReceiveKeyword_4_0_1 = (Keyword)cOrderAlternatives_4_0.eContents().get(1);
		private final Assignment cSpaceAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cSpaceSpaceCrossReference_5_0 = (CrossReference)cSpaceAssignment_5.eContents().get(0);
		private final RuleCall cSpaceSpaceIDTerminalRuleCall_5_0_1 = (RuleCall)cSpaceSpaceCrossReference_5_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Attribute:
		//	'(' 'attribute' name=ValidID transport=('reliable' | 'best_effort') order=('timestamp' | 'receive') space=[Space]?
		//	')';
		@Override public ParserRule getRule() { return rule; }
		
		//'(' 'attribute' name=ValidID transport=('reliable' | 'best_effort') order=('timestamp' | 'receive') space=[Space]? ')'
		public Group getGroup() { return cGroup; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_0() { return cLeftParenthesisKeyword_0; }
		
		//'attribute'
		public Keyword getAttributeKeyword_1() { return cAttributeKeyword_1; }
		
		//name=ValidID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ValidID
		public RuleCall getNameValidIDParserRuleCall_2_0() { return cNameValidIDParserRuleCall_2_0; }
		
		//transport=('reliable' | 'best_effort')
		public Assignment getTransportAssignment_3() { return cTransportAssignment_3; }
		
		//('reliable' | 'best_effort')
		public Alternatives getTransportAlternatives_3_0() { return cTransportAlternatives_3_0; }
		
		//'reliable'
		public Keyword getTransportReliableKeyword_3_0_0() { return cTransportReliableKeyword_3_0_0; }
		
		//'best_effort'
		public Keyword getTransportBest_effortKeyword_3_0_1() { return cTransportBest_effortKeyword_3_0_1; }
		
		//order=('timestamp' | 'receive')
		public Assignment getOrderAssignment_4() { return cOrderAssignment_4; }
		
		//('timestamp' | 'receive')
		public Alternatives getOrderAlternatives_4_0() { return cOrderAlternatives_4_0; }
		
		//'timestamp'
		public Keyword getOrderTimestampKeyword_4_0_0() { return cOrderTimestampKeyword_4_0_0; }
		
		//'receive'
		public Keyword getOrderReceiveKeyword_4_0_1() { return cOrderReceiveKeyword_4_0_1; }
		
		//space=[Space]?
		public Assignment getSpaceAssignment_5() { return cSpaceAssignment_5; }
		
		//[Space]
		public CrossReference getSpaceSpaceCrossReference_5_0() { return cSpaceSpaceCrossReference_5_0; }
		
		//ID
		public RuleCall getSpaceSpaceIDTerminalRuleCall_5_0_1() { return cSpaceSpaceIDTerminalRuleCall_5_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_6() { return cRightParenthesisKeyword_6; }
	}
	public class InteractionClassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.cohesionforce.hla.dsl.Fom.InteractionClass");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cClassKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameValidIDParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Assignment cTransportAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Alternatives cTransportAlternatives_3_0 = (Alternatives)cTransportAssignment_3.eContents().get(0);
		private final Keyword cTransportReliableKeyword_3_0_0 = (Keyword)cTransportAlternatives_3_0.eContents().get(0);
		private final Keyword cTransportBest_effortKeyword_3_0_1 = (Keyword)cTransportAlternatives_3_0.eContents().get(1);
		private final Assignment cOrderAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final Alternatives cOrderAlternatives_4_0 = (Alternatives)cOrderAssignment_4.eContents().get(0);
		private final Keyword cOrderTimestampKeyword_4_0_0 = (Keyword)cOrderAlternatives_4_0.eContents().get(0);
		private final Keyword cOrderReceiveKeyword_4_0_1 = (Keyword)cOrderAlternatives_4_0.eContents().get(1);
		private final Assignment cSpaceAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cSpaceSpaceCrossReference_5_0 = (CrossReference)cSpaceAssignment_5.eContents().get(0);
		private final RuleCall cSpaceSpaceIDTerminalRuleCall_5_0_1 = (RuleCall)cSpaceSpaceCrossReference_5_0.eContents().get(1);
		private final Assignment cParametersAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cParametersParameterParserRuleCall_6_0 = (RuleCall)cParametersAssignment_6.eContents().get(0);
		private final Assignment cClassesAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cClassesInteractionClassParserRuleCall_7_0 = (RuleCall)cClassesAssignment_7.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//InteractionClass:
		//	'(' 'class' name=ValidID transport=('reliable' | 'best_effort') order=('timestamp' | 'receive') space=[Space]?
		//	parameters+=Parameter*
		//	classes+=InteractionClass*
		//	')';
		@Override public ParserRule getRule() { return rule; }
		
		//'(' 'class' name=ValidID transport=('reliable' | 'best_effort') order=('timestamp' | 'receive') space=[Space]?
		//parameters+=Parameter* classes+=InteractionClass* ')'
		public Group getGroup() { return cGroup; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_0() { return cLeftParenthesisKeyword_0; }
		
		//'class'
		public Keyword getClassKeyword_1() { return cClassKeyword_1; }
		
		//name=ValidID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ValidID
		public RuleCall getNameValidIDParserRuleCall_2_0() { return cNameValidIDParserRuleCall_2_0; }
		
		//transport=('reliable' | 'best_effort')
		public Assignment getTransportAssignment_3() { return cTransportAssignment_3; }
		
		//('reliable' | 'best_effort')
		public Alternatives getTransportAlternatives_3_0() { return cTransportAlternatives_3_0; }
		
		//'reliable'
		public Keyword getTransportReliableKeyword_3_0_0() { return cTransportReliableKeyword_3_0_0; }
		
		//'best_effort'
		public Keyword getTransportBest_effortKeyword_3_0_1() { return cTransportBest_effortKeyword_3_0_1; }
		
		//order=('timestamp' | 'receive')
		public Assignment getOrderAssignment_4() { return cOrderAssignment_4; }
		
		//('timestamp' | 'receive')
		public Alternatives getOrderAlternatives_4_0() { return cOrderAlternatives_4_0; }
		
		//'timestamp'
		public Keyword getOrderTimestampKeyword_4_0_0() { return cOrderTimestampKeyword_4_0_0; }
		
		//'receive'
		public Keyword getOrderReceiveKeyword_4_0_1() { return cOrderReceiveKeyword_4_0_1; }
		
		//space=[Space]?
		public Assignment getSpaceAssignment_5() { return cSpaceAssignment_5; }
		
		//[Space]
		public CrossReference getSpaceSpaceCrossReference_5_0() { return cSpaceSpaceCrossReference_5_0; }
		
		//ID
		public RuleCall getSpaceSpaceIDTerminalRuleCall_5_0_1() { return cSpaceSpaceIDTerminalRuleCall_5_0_1; }
		
		//parameters+=Parameter*
		public Assignment getParametersAssignment_6() { return cParametersAssignment_6; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_6_0() { return cParametersParameterParserRuleCall_6_0; }
		
		//classes+=InteractionClass*
		public Assignment getClassesAssignment_7() { return cClassesAssignment_7; }
		
		//InteractionClass
		public RuleCall getClassesInteractionClassParserRuleCall_7_0() { return cClassesInteractionClassParserRuleCall_7_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_8() { return cRightParenthesisKeyword_8; }
	}
	public class ParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.cohesionforce.hla.dsl.Fom.Parameter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cParameterKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameValidIDParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Parameter:
		//	'(' 'parameter' name=ValidID ')';
		@Override public ParserRule getRule() { return rule; }
		
		//'(' 'parameter' name=ValidID ')'
		public Group getGroup() { return cGroup; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_0() { return cLeftParenthesisKeyword_0; }
		
		//'parameter'
		public Keyword getParameterKeyword_1() { return cParameterKeyword_1; }
		
		//name=ValidID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ValidID
		public RuleCall getNameValidIDParserRuleCall_2_0() { return cNameValidIDParserRuleCall_2_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }
	}
	public class ValidIDElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.cohesionforce.hla.dsl.Fom.ValidID");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final Keyword cFederationKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cClassKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cAttributeKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		private final Keyword cDimensionKeyword_4 = (Keyword)cAlternatives.eContents().get(4);
		private final Keyword cSpaceKeyword_5 = (Keyword)cAlternatives.eContents().get(5);
		
		//ValidID:
		//	ID | 'Federation' | 'class' | 'attribute' | 'dimension' | 'space';
		@Override public ParserRule getRule() { return rule; }
		
		//ID | 'Federation' | 'class' | 'attribute' | 'dimension' | 'space'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }
		
		//'Federation'
		public Keyword getFederationKeyword_1() { return cFederationKeyword_1; }
		
		//'class'
		public Keyword getClassKeyword_2() { return cClassKeyword_2; }
		
		//'attribute'
		public Keyword getAttributeKeyword_3() { return cAttributeKeyword_3; }
		
		//'dimension'
		public Keyword getDimensionKeyword_4() { return cDimensionKeyword_4; }
		
		//'space'
		public Keyword getSpaceKeyword_5() { return cSpaceKeyword_5; }
	}
	
	
	private final FedElements pFed;
	private final FederationElements pFederation;
	private final FEDversionElements pFEDversion;
	private final SpaceElements pSpace;
	private final DimensionElements pDimension;
	private final AttributeClassElements pAttributeClass;
	private final AttributeElements pAttribute;
	private final InteractionClassElements pInteractionClass;
	private final ParameterElements pParameter;
	private final ValidIDElements pValidID;
	private final TerminalRule tCOMMENT;
	private final TerminalRule tID;
	private final TerminalRule tINT;
	private final TerminalRule tSTRING;
	private final TerminalRule tML_COMMENT;
	private final TerminalRule tSL_COMMENT;
	private final TerminalRule tWS;
	private final TerminalRule tTEXT;
	private final TerminalRule tANY_OTHER;
	
	private final Grammar grammar;

	@Inject
	public FomGrammarAccess(GrammarProvider grammarProvider) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.pFed = new FedElements();
		this.pFederation = new FederationElements();
		this.pFEDversion = new FEDversionElements();
		this.pSpace = new SpaceElements();
		this.pDimension = new DimensionElements();
		this.pAttributeClass = new AttributeClassElements();
		this.pAttribute = new AttributeElements();
		this.pInteractionClass = new InteractionClassElements();
		this.pParameter = new ParameterElements();
		this.pValidID = new ValidIDElements();
		this.tCOMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "com.cohesionforce.hla.dsl.Fom.COMMENT");
		this.tID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "com.cohesionforce.hla.dsl.Fom.ID");
		this.tINT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "com.cohesionforce.hla.dsl.Fom.INT");
		this.tSTRING = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "com.cohesionforce.hla.dsl.Fom.STRING");
		this.tML_COMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "com.cohesionforce.hla.dsl.Fom.ML_COMMENT");
		this.tSL_COMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "com.cohesionforce.hla.dsl.Fom.SL_COMMENT");
		this.tWS = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "com.cohesionforce.hla.dsl.Fom.WS");
		this.tTEXT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "com.cohesionforce.hla.dsl.Fom.TEXT");
		this.tANY_OTHER = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "com.cohesionforce.hla.dsl.Fom.ANY_OTHER");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("com.cohesionforce.hla.dsl.Fom".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	

	
	//Fed:
	//	'(' 'FED'
	//	federation=Federation
	//	version=FEDversion
	//	'(' 'spaces' spaces+=Space* ')'
	//	'(' 'objects' classes+=AttributeClass* ')'
	//	'(' 'interactions' classes+=InteractionClass* ')'
	//	')';
	public FedElements getFedAccess() {
		return pFed;
	}
	
	public ParserRule getFedRule() {
		return getFedAccess().getRule();
	}
	
	//Federation:
	//	'(' 'Federation' name=(ValidID | TEXT) ')';
	public FederationElements getFederationAccess() {
		return pFederation;
	}
	
	public ParserRule getFederationRule() {
		return getFederationAccess().getRule();
	}
	
	//FEDversion:
	//	'(' 'FEDversion' version=TEXT ')';
	public FEDversionElements getFEDversionAccess() {
		return pFEDversion;
	}
	
	public ParserRule getFEDversionRule() {
		return getFEDversionAccess().getRule();
	}
	
	//Space:
	//	'(' 'space' name=ValidID
	//	dimensions+=Dimension*
	//	')';
	public SpaceElements getSpaceAccess() {
		return pSpace;
	}
	
	public ParserRule getSpaceRule() {
		return getSpaceAccess().getRule();
	}
	
	//Dimension:
	//	'(' 'dimension' name=ValidID ')';
	public DimensionElements getDimensionAccess() {
		return pDimension;
	}
	
	public ParserRule getDimensionRule() {
		return getDimensionAccess().getRule();
	}
	
	//AttributeClass:
	//	'(' 'class' name=ValidID
	//	attributes+=Attribute*
	//	classes+=AttributeClass*
	//	')';
	public AttributeClassElements getAttributeClassAccess() {
		return pAttributeClass;
	}
	
	public ParserRule getAttributeClassRule() {
		return getAttributeClassAccess().getRule();
	}
	
	//Attribute:
	//	'(' 'attribute' name=ValidID transport=('reliable' | 'best_effort') order=('timestamp' | 'receive') space=[Space]?
	//	')';
	public AttributeElements getAttributeAccess() {
		return pAttribute;
	}
	
	public ParserRule getAttributeRule() {
		return getAttributeAccess().getRule();
	}
	
	//InteractionClass:
	//	'(' 'class' name=ValidID transport=('reliable' | 'best_effort') order=('timestamp' | 'receive') space=[Space]?
	//	parameters+=Parameter*
	//	classes+=InteractionClass*
	//	')';
	public InteractionClassElements getInteractionClassAccess() {
		return pInteractionClass;
	}
	
	public ParserRule getInteractionClassRule() {
		return getInteractionClassAccess().getRule();
	}
	
	//Parameter:
	//	'(' 'parameter' name=ValidID ')';
	public ParameterElements getParameterAccess() {
		return pParameter;
	}
	
	public ParserRule getParameterRule() {
		return getParameterAccess().getRule();
	}
	
	//ValidID:
	//	ID | 'Federation' | 'class' | 'attribute' | 'dimension' | 'space';
	public ValidIDElements getValidIDAccess() {
		return pValidID;
	}
	
	public ParserRule getValidIDRule() {
		return getValidIDAccess().getRule();
	}
	
	//terminal COMMENT:
	//	';;' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getCOMMENTRule() {
		return tCOMMENT;
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return tID;
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return tINT;
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return tSTRING;
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return tML_COMMENT;
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return tSL_COMMENT;
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return tWS;
	}
	
	//terminal TEXT:
	//	!('"' | "'" | '(' | ')' | ' ' | '\t' | '\r' | '\n')+;
	public TerminalRule getTEXTRule() {
		return tTEXT;
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return tANY_OTHER;
	}
}
