/**
 * generated by Xtext 2.12.0
 */
package com.cohesionforce.hla.dsl.fom.impl;

import com.cohesionforce.hla.dsl.fom.FomPackage;
import com.cohesionforce.hla.dsl.fom.InteractionClass;
import com.cohesionforce.hla.dsl.fom.Parameter;
import com.cohesionforce.hla.dsl.fom.Space;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Interaction Class</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.cohesionforce.hla.dsl.fom.impl.InteractionClassImpl#getName <em>Name</em>}</li>
 *   <li>{@link com.cohesionforce.hla.dsl.fom.impl.InteractionClassImpl#getTransport <em>Transport</em>}</li>
 *   <li>{@link com.cohesionforce.hla.dsl.fom.impl.InteractionClassImpl#getOrder <em>Order</em>}</li>
 *   <li>{@link com.cohesionforce.hla.dsl.fom.impl.InteractionClassImpl#getSpace <em>Space</em>}</li>
 *   <li>{@link com.cohesionforce.hla.dsl.fom.impl.InteractionClassImpl#getParameters <em>Parameters</em>}</li>
 *   <li>{@link com.cohesionforce.hla.dsl.fom.impl.InteractionClassImpl#getClasses <em>Classes</em>}</li>
 * </ul>
 *
 * @generated
 */
public class InteractionClassImpl extends MinimalEObjectImpl.Container implements InteractionClass
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getTransport() <em>Transport</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTransport()
   * @generated
   * @ordered
   */
  protected static final String TRANSPORT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getTransport() <em>Transport</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTransport()
   * @generated
   * @ordered
   */
  protected String transport = TRANSPORT_EDEFAULT;

  /**
   * The default value of the '{@link #getOrder() <em>Order</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOrder()
   * @generated
   * @ordered
   */
  protected static final String ORDER_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getOrder() <em>Order</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOrder()
   * @generated
   * @ordered
   */
  protected String order = ORDER_EDEFAULT;

  /**
   * The cached value of the '{@link #getSpace() <em>Space</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSpace()
   * @generated
   * @ordered
   */
  protected Space space;

  /**
   * The cached value of the '{@link #getParameters() <em>Parameters</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getParameters()
   * @generated
   * @ordered
   */
  protected EList<Parameter> parameters;

  /**
   * The cached value of the '{@link #getClasses() <em>Classes</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getClasses()
   * @generated
   * @ordered
   */
  protected EList<InteractionClass> classes;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected InteractionClassImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return FomPackage.Literals.INTERACTION_CLASS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, FomPackage.INTERACTION_CLASS__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getTransport()
  {
    return transport;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setTransport(String newTransport)
  {
    String oldTransport = transport;
    transport = newTransport;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, FomPackage.INTERACTION_CLASS__TRANSPORT, oldTransport, transport));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getOrder()
  {
    return order;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setOrder(String newOrder)
  {
    String oldOrder = order;
    order = newOrder;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, FomPackage.INTERACTION_CLASS__ORDER, oldOrder, order));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Space getSpace()
  {
    if (space != null && space.eIsProxy())
    {
      InternalEObject oldSpace = (InternalEObject)space;
      space = (Space)eResolveProxy(oldSpace);
      if (space != oldSpace)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, FomPackage.INTERACTION_CLASS__SPACE, oldSpace, space));
      }
    }
    return space;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Space basicGetSpace()
  {
    return space;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSpace(Space newSpace)
  {
    Space oldSpace = space;
    space = newSpace;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, FomPackage.INTERACTION_CLASS__SPACE, oldSpace, space));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Parameter> getParameters()
  {
    if (parameters == null)
    {
      parameters = new EObjectContainmentEList<Parameter>(Parameter.class, this, FomPackage.INTERACTION_CLASS__PARAMETERS);
    }
    return parameters;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<InteractionClass> getClasses()
  {
    if (classes == null)
    {
      classes = new EObjectContainmentEList<InteractionClass>(InteractionClass.class, this, FomPackage.INTERACTION_CLASS__CLASSES);
    }
    return classes;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case FomPackage.INTERACTION_CLASS__PARAMETERS:
        return ((InternalEList<?>)getParameters()).basicRemove(otherEnd, msgs);
      case FomPackage.INTERACTION_CLASS__CLASSES:
        return ((InternalEList<?>)getClasses()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case FomPackage.INTERACTION_CLASS__NAME:
        return getName();
      case FomPackage.INTERACTION_CLASS__TRANSPORT:
        return getTransport();
      case FomPackage.INTERACTION_CLASS__ORDER:
        return getOrder();
      case FomPackage.INTERACTION_CLASS__SPACE:
        if (resolve) return getSpace();
        return basicGetSpace();
      case FomPackage.INTERACTION_CLASS__PARAMETERS:
        return getParameters();
      case FomPackage.INTERACTION_CLASS__CLASSES:
        return getClasses();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case FomPackage.INTERACTION_CLASS__NAME:
        setName((String)newValue);
        return;
      case FomPackage.INTERACTION_CLASS__TRANSPORT:
        setTransport((String)newValue);
        return;
      case FomPackage.INTERACTION_CLASS__ORDER:
        setOrder((String)newValue);
        return;
      case FomPackage.INTERACTION_CLASS__SPACE:
        setSpace((Space)newValue);
        return;
      case FomPackage.INTERACTION_CLASS__PARAMETERS:
        getParameters().clear();
        getParameters().addAll((Collection<? extends Parameter>)newValue);
        return;
      case FomPackage.INTERACTION_CLASS__CLASSES:
        getClasses().clear();
        getClasses().addAll((Collection<? extends InteractionClass>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case FomPackage.INTERACTION_CLASS__NAME:
        setName(NAME_EDEFAULT);
        return;
      case FomPackage.INTERACTION_CLASS__TRANSPORT:
        setTransport(TRANSPORT_EDEFAULT);
        return;
      case FomPackage.INTERACTION_CLASS__ORDER:
        setOrder(ORDER_EDEFAULT);
        return;
      case FomPackage.INTERACTION_CLASS__SPACE:
        setSpace((Space)null);
        return;
      case FomPackage.INTERACTION_CLASS__PARAMETERS:
        getParameters().clear();
        return;
      case FomPackage.INTERACTION_CLASS__CLASSES:
        getClasses().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case FomPackage.INTERACTION_CLASS__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case FomPackage.INTERACTION_CLASS__TRANSPORT:
        return TRANSPORT_EDEFAULT == null ? transport != null : !TRANSPORT_EDEFAULT.equals(transport);
      case FomPackage.INTERACTION_CLASS__ORDER:
        return ORDER_EDEFAULT == null ? order != null : !ORDER_EDEFAULT.equals(order);
      case FomPackage.INTERACTION_CLASS__SPACE:
        return space != null;
      case FomPackage.INTERACTION_CLASS__PARAMETERS:
        return parameters != null && !parameters.isEmpty();
      case FomPackage.INTERACTION_CLASS__CLASSES:
        return classes != null && !classes.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", transport: ");
    result.append(transport);
    result.append(", order: ");
    result.append(order);
    result.append(')');
    return result.toString();
  }

} //InteractionClassImpl
